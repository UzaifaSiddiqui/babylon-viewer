{
  "version": 3,
  "sources": ["../../../dev/loaders/src/glTF/2.0/Extensions/KHR_materials_pbrSpecularGlossiness.ts"],
  "sourcesContent": ["import type { Nullable } from \"core/types\";\r\nimport { Color3 } from \"core/Maths/math.color\";\r\nimport { PBRMaterial } from \"core/Materials/PBR/pbrMaterial\";\r\nimport type { Material } from \"core/Materials/material\";\r\n\r\nimport type { IMaterial } from \"../glTFLoaderInterfaces\";\r\nimport type { IGLTFLoaderExtension } from \"../glTFLoaderExtension\";\r\nimport { GLTFLoader } from \"../glTFLoader\";\r\nimport type { IKHRMaterialsPbrSpecularGlossiness } from \"babylonjs-gltf2interface\";\r\nimport { registerGLTFExtension, unregisterGLTFExtension } from \"../glTFLoaderExtensionRegistry\";\r\n\r\nconst NAME = \"KHR_materials_pbrSpecularGlossiness\";\r\n\r\ndeclare module \"../../glTFFileLoader\" {\r\n    // eslint-disable-next-line jsdoc/require-jsdoc, @typescript-eslint/naming-convention\r\n    export interface GLTFLoaderExtensionOptions {\r\n        /**\r\n         * Defines options for the KHR_materials_pbrSpecularGlossiness extension.\r\n         */\r\n        // NOTE: Don't use NAME here as it will break the UMD type declarations.\r\n        [\"KHR_materials_pbrSpecularGlossiness\"]: {};\r\n    }\r\n}\r\n\r\n/**\r\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Archived/KHR_materials_pbrSpecularGlossiness/README.md)\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nexport class KHR_materials_pbrSpecularGlossiness implements IGLTFLoaderExtension {\r\n    /**\r\n     * The name of this extension.\r\n     */\r\n    public readonly name = NAME;\r\n\r\n    /**\r\n     * Defines whether this extension is enabled.\r\n     */\r\n    public enabled: boolean;\r\n\r\n    /**\r\n     * Defines a number that determines the order the extensions are applied.\r\n     */\r\n    public order = 200;\r\n\r\n    private _loader: GLTFLoader;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    constructor(loader: GLTFLoader) {\r\n        this._loader = loader;\r\n        this.enabled = this._loader.isExtensionUsed(NAME);\r\n    }\r\n\r\n    /** @internal */\r\n    public dispose() {\r\n        (this._loader as any) = null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    public loadMaterialPropertiesAsync(context: string, material: IMaterial, babylonMaterial: Material): Nullable<Promise<void>> {\r\n        return GLTFLoader.LoadExtensionAsync<IKHRMaterialsPbrSpecularGlossiness>(context, material, this.name, async (extensionContext, extension) => {\r\n            const promises = new Array<Promise<any>>();\r\n            promises.push(this._loader.loadMaterialBasePropertiesAsync(context, material, babylonMaterial));\r\n            promises.push(this._loadSpecularGlossinessPropertiesAsync(extensionContext, extension, babylonMaterial));\r\n            this._loader.loadMaterialAlphaProperties(context, material, babylonMaterial);\r\n            // eslint-disable-next-line github/no-then\r\n            return await Promise.all(promises).then(() => {});\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/promise-function-async, no-restricted-syntax\r\n    private _loadSpecularGlossinessPropertiesAsync(context: string, properties: IKHRMaterialsPbrSpecularGlossiness, babylonMaterial: Material): Promise<void> {\r\n        if (!(babylonMaterial instanceof PBRMaterial)) {\r\n            throw new Error(`${context}: Material type not supported`);\r\n        }\r\n\r\n        const promises = new Array<Promise<any>>();\r\n\r\n        babylonMaterial.metallic = null;\r\n        babylonMaterial.roughness = null;\r\n\r\n        if (properties.diffuseFactor) {\r\n            babylonMaterial.albedoColor = Color3.FromArray(properties.diffuseFactor);\r\n            babylonMaterial.alpha = properties.diffuseFactor[3];\r\n        } else {\r\n            babylonMaterial.albedoColor = Color3.White();\r\n        }\r\n\r\n        babylonMaterial.reflectivityColor = properties.specularFactor ? Color3.FromArray(properties.specularFactor) : Color3.White();\r\n        babylonMaterial.microSurface = properties.glossinessFactor == undefined ? 1 : properties.glossinessFactor;\r\n\r\n        if (properties.diffuseTexture) {\r\n            promises.push(\r\n                this._loader.loadTextureInfoAsync(`${context}/diffuseTexture`, properties.diffuseTexture, (texture) => {\r\n                    texture.name = `${babylonMaterial.name} (Diffuse)`;\r\n                    babylonMaterial.albedoTexture = texture;\r\n                })\r\n            );\r\n        }\r\n\r\n        if (properties.specularGlossinessTexture) {\r\n            promises.push(\r\n                this._loader.loadTextureInfoAsync(`${context}/specularGlossinessTexture`, properties.specularGlossinessTexture, (texture) => {\r\n                    texture.name = `${babylonMaterial.name} (Specular Glossiness)`;\r\n                    babylonMaterial.reflectivityTexture = texture;\r\n                    babylonMaterial.reflectivityTexture.hasAlpha = true;\r\n                })\r\n            );\r\n\r\n            babylonMaterial.useMicroSurfaceFromReflectivityMapAlpha = true;\r\n        }\r\n\r\n        // eslint-disable-next-line github/no-then\r\n        return Promise.all(promises).then(() => {});\r\n    }\r\n}\r\n\r\nunregisterGLTFExtension(NAME);\r\nregisterGLTFExtension(NAME, true, (loader) => new KHR_materials_pbrSpecularGlossiness(loader));\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA,IAAM,OAAO;AAiBP,IAAO,sCAAP,MAA0C;;;;EAqB5C,YAAY,QAAkB;AAjBd,SAAA,OAAO;AAUhB,SAAA,QAAQ;AAQX,SAAK,UAAU;AACf,SAAK,UAAU,KAAK,QAAQ,gBAAgB,IAAI;EACpD;;EAGO,UAAO;AACT,SAAK,UAAkB;EAC5B;;;;;EAMO,4BAA4B,SAAiB,UAAqB,iBAAyB;AAC9F,WAAO,WAAW,mBAAuD,SAAS,UAAU,KAAK,MAAM,OAAO,kBAAkB,cAAa;AACzI,YAAM,WAAW,IAAI,MAAK;AAC1B,eAAS,KAAK,KAAK,QAAQ,gCAAgC,SAAS,UAAU,eAAe,CAAC;AAC9F,eAAS,KAAK,KAAK,uCAAuC,kBAAkB,WAAW,eAAe,CAAC;AACvG,WAAK,QAAQ,4BAA4B,SAAS,UAAU,eAAe;AAE3E,aAAO,MAAM,QAAQ,IAAI,QAAQ,EAAE,KAAK,MAAK;MAAE,CAAC;IACpD,CAAC;EACL;;EAGQ,uCAAuC,SAAiB,YAAgD,iBAAyB;AACrI,QAAI,EAAE,2BAA2B,cAAc;AAC3C,YAAM,IAAI,MAAM,GAAG,OAAO,+BAA+B;IAC7D;AAEA,UAAM,WAAW,IAAI,MAAK;AAE1B,oBAAgB,WAAW;AAC3B,oBAAgB,YAAY;AAE5B,QAAI,WAAW,eAAe;AAC1B,sBAAgB,cAAc,OAAO,UAAU,WAAW,aAAa;AACvE,sBAAgB,QAAQ,WAAW,cAAc,CAAC;IACtD,OAAO;AACH,sBAAgB,cAAc,OAAO,MAAK;IAC9C;AAEA,oBAAgB,oBAAoB,WAAW,iBAAiB,OAAO,UAAU,WAAW,cAAc,IAAI,OAAO,MAAK;AAC1H,oBAAgB,eAAe,WAAW,oBAAoB,SAAY,IAAI,WAAW;AAEzF,QAAI,WAAW,gBAAgB;AAC3B,eAAS,KACL,KAAK,QAAQ,qBAAqB,GAAG,OAAO,mBAAmB,WAAW,gBAAgB,CAAC,YAAW;AAClG,gBAAQ,OAAO,GAAG,gBAAgB,IAAI;AACtC,wBAAgB,gBAAgB;MACpC,CAAC,CAAC;IAEV;AAEA,QAAI,WAAW,2BAA2B;AACtC,eAAS,KACL,KAAK,QAAQ,qBAAqB,GAAG,OAAO,8BAA8B,WAAW,2BAA2B,CAAC,YAAW;AACxH,gBAAQ,OAAO,GAAG,gBAAgB,IAAI;AACtC,wBAAgB,sBAAsB;AACtC,wBAAgB,oBAAoB,WAAW;MACnD,CAAC,CAAC;AAGN,sBAAgB,0CAA0C;IAC9D;AAGA,WAAO,QAAQ,IAAI,QAAQ,EAAE,KAAK,MAAK;IAAE,CAAC;EAC9C;;AAGJ,wBAAwB,IAAI;AAC5B,sBAAsB,MAAM,MAAM,CAAC,WAAW,IAAI,oCAAoC,MAAM,CAAC;",
  "names": []
}
