import {
  BVHFileLoaderMetadata
} from "./chunk-KQJV2FYA.js";
import {
  OBJFileLoaderMetadata
} from "./chunk-IQLFZEFJ.js";
import {
  SPLATFileLoaderMetadata
} from "./chunk-YNV2IMVX.js";
import {
  STLFileLoaderMetadata
} from "./chunk-GW3XEJIY.js";
import {
  GLTFFileLoaderMetadata
} from "./chunk-3BK5LF7O.js";
import {
  registerGLTFExtension
} from "./chunk-QGBHPVKU.js";
import {
  RegisterSceneLoaderPlugin
} from "./chunk-2UUQ45IR.js";
import "./chunk-AEHU6TNY.js";
import "./chunk-X6PIZKV4.js";
import "./chunk-WKXRXUEO.js";
import "./chunk-HMDAUT7Z.js";
import "./chunk-ZXVFJ3IO.js";
import "./chunk-6WCM7POW.js";
import "./chunk-LJSODA3L.js";
import "./chunk-GD3G47P6.js";
import "./chunk-6H3TNXMO.js";
import "./chunk-LYDZQZ7N.js";
import "./chunk-XVNZSWM6.js";
import "./chunk-6JFLQ55T.js";
import "./chunk-J66NYHFN.js";
import "./chunk-ONGFIZ6O.js";
import "./chunk-2ZEUD233.js";
import "./chunk-IW7YW5OA.js";
import "./chunk-I2PO3XEU.js";
import "./chunk-HUWHGN3K.js";
import "./chunk-OWCZTH5B.js";
import "./chunk-AZNEH5GV.js";
import "./chunk-J4DZ2XK7.js";
import "./chunk-FX6MN5HL.js";
import "./chunk-6V7QSEPQ.js";
import "./chunk-S7NDMBDF.js";
import "./chunk-ZVW3KNNR.js";
import "./chunk-2YUEJ7I2.js";
import "./chunk-LDFLUTDO.js";
import "./chunk-SSYGV25P.js";

// node_modules/@babylonjs/loaders/glTF/2.0/Extensions/dynamic.js
function registerBuiltInGLTFExtensions() {
  registerGLTFExtension("EXT_lights_image_based", true, async (loader) => {
    const { EXT_lights_image_based } = await import("./EXT_lights_image_based-7LVO63AF.js");
    return new EXT_lights_image_based(loader);
  });
  registerGLTFExtension("EXT_mesh_gpu_instancing", true, async (loader) => {
    const { EXT_mesh_gpu_instancing } = await import("./EXT_mesh_gpu_instancing-77PV2ZM4.js");
    return new EXT_mesh_gpu_instancing(loader);
  });
  registerGLTFExtension("EXT_meshopt_compression", true, async (loader) => {
    const { EXT_meshopt_compression } = await import("./EXT_meshopt_compression-DYCUDSEO.js");
    return new EXT_meshopt_compression(loader);
  });
  registerGLTFExtension("EXT_texture_avif", true, async (loader) => {
    const { EXT_texture_avif } = await import("./EXT_texture_avif-SOMC2F7M.js");
    return new EXT_texture_avif(loader);
  });
  registerGLTFExtension("EXT_texture_webp", true, async (loader) => {
    const { EXT_texture_webp } = await import("./EXT_texture_webp-XWLWILIU.js");
    return new EXT_texture_webp(loader);
  });
  registerGLTFExtension("ExtrasAsMetadata", false, async (loader) => {
    const { ExtrasAsMetadata } = await import("./ExtrasAsMetadata-O5TAYRDM.js");
    return new ExtrasAsMetadata(loader);
  });
  registerGLTFExtension("KHR_animation_pointer", true, async (loader) => {
    const { KHR_animation_pointer } = await import("./KHR_animation_pointer-QG5Q26AK.js");
    return new KHR_animation_pointer(loader);
  });
  registerGLTFExtension("KHR_draco_mesh_compression", true, async (loader) => {
    const { KHR_draco_mesh_compression } = await import("./KHR_draco_mesh_compression-LQXOMY4D.js");
    return new KHR_draco_mesh_compression(loader);
  });
  registerGLTFExtension("KHR_interactivity", true, async (loader) => {
    const { KHR_interactivity } = await import("./KHR_interactivity-NMAESZWX.js");
    return new KHR_interactivity(loader);
  });
  registerGLTFExtension("KHR_lights_punctual", true, async (loader) => {
    const { KHR_lights } = await import("./KHR_lights_punctual-6KUGEWPI.js");
    return new KHR_lights(loader);
  });
  registerGLTFExtension("EXT_lights_ies", true, async (loader) => {
    const { EXT_lights_ies } = await import("./EXT_lights_ies-6Q732V6O.js");
    return new EXT_lights_ies(loader);
  });
  registerGLTFExtension("KHR_materials_anisotropy", true, async (loader) => {
    const { KHR_materials_anisotropy } = await import("./KHR_materials_anisotropy-PKQWBKIA.js");
    return new KHR_materials_anisotropy(loader);
  });
  registerGLTFExtension("KHR_materials_clearcoat", true, async (loader) => {
    const { KHR_materials_clearcoat } = await import("./KHR_materials_clearcoat-OI4GL2UZ.js");
    return new KHR_materials_clearcoat(loader);
  });
  registerGLTFExtension("EXT_materials_diffuse_roughness", true, async (loader) => {
    const { EXT_materials_diffuse_roughness } = await import("./EXT_materials_diffuse_roughness-OBS3R5XV.js");
    return new EXT_materials_diffuse_roughness(loader);
  });
  registerGLTFExtension("KHR_materials_diffuse_transmission", true, async (loader) => {
    const { KHR_materials_diffuse_transmission } = await import("./KHR_materials_diffuse_transmission-BFBAMFBR.js");
    return new KHR_materials_diffuse_transmission(loader);
  });
  registerGLTFExtension("KHR_materials_dispersion", true, async (loader) => {
    const { KHR_materials_dispersion } = await import("./KHR_materials_dispersion-WMIYIHGH.js");
    return new KHR_materials_dispersion(loader);
  });
  registerGLTFExtension("KHR_materials_emissive_strength", true, async (loader) => {
    const { KHR_materials_emissive_strength } = await import("./KHR_materials_emissive_strength-PE3TMPGA.js");
    return new KHR_materials_emissive_strength(loader);
  });
  registerGLTFExtension("KHR_materials_ior", true, async (loader) => {
    const { KHR_materials_ior } = await import("./KHR_materials_ior-5INPH327.js");
    return new KHR_materials_ior(loader);
  });
  registerGLTFExtension("KHR_materials_iridescence", true, async (loader) => {
    const { KHR_materials_iridescence } = await import("./KHR_materials_iridescence-VJY74XOC.js");
    return new KHR_materials_iridescence(loader);
  });
  registerGLTFExtension("KHR_materials_pbrSpecularGlossiness", true, async (loader) => {
    const { KHR_materials_pbrSpecularGlossiness } = await import("./KHR_materials_pbrSpecularGlossiness-7RBQTGP3.js");
    return new KHR_materials_pbrSpecularGlossiness(loader);
  });
  registerGLTFExtension("KHR_materials_sheen", true, async (loader) => {
    const { KHR_materials_sheen } = await import("./KHR_materials_sheen-PAVGE3JE.js");
    return new KHR_materials_sheen(loader);
  });
  registerGLTFExtension("KHR_materials_specular", true, async (loader) => {
    const { KHR_materials_specular } = await import("./KHR_materials_specular-373KSHCD.js");
    return new KHR_materials_specular(loader);
  });
  registerGLTFExtension("KHR_materials_transmission", true, async (loader) => {
    const { KHR_materials_transmission } = await import("./KHR_materials_transmission-3EG3WQB6.js");
    return new KHR_materials_transmission(loader);
  });
  registerGLTFExtension("KHR_materials_unlit", true, async (loader) => {
    const { KHR_materials_unlit } = await import("./KHR_materials_unlit-RK5QM55F.js");
    return new KHR_materials_unlit(loader);
  });
  registerGLTFExtension("KHR_materials_variants", true, async (loader) => {
    const { KHR_materials_variants } = await import("./KHR_materials_variants-BC6D3EWG.js");
    return new KHR_materials_variants(loader);
  });
  registerGLTFExtension("KHR_materials_volume", true, async (loader) => {
    const { KHR_materials_volume } = await import("./KHR_materials_volume-E33TEYQK.js");
    return new KHR_materials_volume(loader);
  });
  registerGLTFExtension("KHR_mesh_quantization", true, async (loader) => {
    const { KHR_mesh_quantization } = await import("./KHR_mesh_quantization-ZFQPTX5Q.js");
    return new KHR_mesh_quantization(loader);
  });
  registerGLTFExtension("KHR_texture_basisu", true, async (loader) => {
    const { KHR_texture_basisu } = await import("./KHR_texture_basisu-3BWNCNBV.js");
    return new KHR_texture_basisu(loader);
  });
  registerGLTFExtension("KHR_texture_transform", true, async (loader) => {
    const { KHR_texture_transform } = await import("./KHR_texture_transform-H3FYLBZY.js");
    return new KHR_texture_transform(loader);
  });
  registerGLTFExtension("KHR_xmp_json_ld", true, async (loader) => {
    const { KHR_xmp_json_ld } = await import("./KHR_xmp_json_ld-MDEABE2U.js");
    return new KHR_xmp_json_ld(loader);
  });
  registerGLTFExtension("MSFT_audio_emitter", true, async (loader) => {
    const { MSFT_audio_emitter } = await import("./MSFT_audio_emitter-AE32ZQDG.js");
    return new MSFT_audio_emitter(loader);
  });
  registerGLTFExtension("MSFT_lod", true, async (loader) => {
    const { MSFT_lod } = await import("./MSFT_lod-WWYT6GLA.js");
    return new MSFT_lod(loader);
  });
  registerGLTFExtension("MSFT_minecraftMesh", true, async (loader) => {
    const { MSFT_minecraftMesh } = await import("./MSFT_minecraftMesh-L2JFLK6K.js");
    return new MSFT_minecraftMesh(loader);
  });
  registerGLTFExtension("MSFT_sRGBFactors", true, async (loader) => {
    const { MSFT_sRGBFactors } = await import("./MSFT_sRGBFactors-YKSZAGH4.js");
    return new MSFT_sRGBFactors(loader);
  });
  registerGLTFExtension("KHR_node_visibility", true, async (loader) => {
    const { KHR_node_visibility } = await import("./KHR_node_visibility-DGNGYKYL.js");
    return new KHR_node_visibility(loader);
  });
  registerGLTFExtension("KHR_node_hoverability", true, async (loader) => {
    const { KHR_node_hoverability } = await import("./KHR_node_hoverability-LRZ5PU5H.js");
    return new KHR_node_hoverability(loader);
  });
  registerGLTFExtension("KHR_node_selectability", true, async (loader) => {
    const { KHR_node_selectability } = await import("./KHR_node_selectability-DSHUBNDE.js");
    return new KHR_node_selectability(loader);
  });
}

// node_modules/@babylonjs/loaders/dynamic.js
function registerBuiltInLoaders() {
  RegisterSceneLoaderPlugin({
    ...BVHFileLoaderMetadata,
    createPlugin: async (options) => {
      const { BVHFileLoader } = await import("./bvhFileLoader-EMDLLBFH.js");
      return new BVHFileLoader(options[BVHFileLoaderMetadata.name]);
    }
  });
  RegisterSceneLoaderPlugin({
    ...GLTFFileLoaderMetadata,
    createPlugin: async (options) => {
      const { GLTFFileLoader } = await import("./glTFLoader-FDBXCPXR.js");
      return new GLTFFileLoader(options[GLTFFileLoaderMetadata.name]);
    }
  });
  registerBuiltInGLTFExtensions();
  RegisterSceneLoaderPlugin({
    ...OBJFileLoaderMetadata,
    createPlugin: async (options) => {
      const { OBJFileLoader } = await import("./objFileLoader-BGABTAF6.js");
      return new OBJFileLoader(options[OBJFileLoaderMetadata.name]);
    }
  });
  RegisterSceneLoaderPlugin({
    ...SPLATFileLoaderMetadata,
    createPlugin: async (options) => {
      const { SPLATFileLoader } = await import("./splatFileLoader-VSRKKXJ6.js");
      return new SPLATFileLoader(options[SPLATFileLoaderMetadata.name]);
    }
  });
  RegisterSceneLoaderPlugin({
    ...STLFileLoaderMetadata,
    createPlugin: async () => {
      const { STLFileLoader } = await import("./stlFileLoader-EVKYEGSQ.js");
      return new STLFileLoader();
    }
  });
}
export {
  registerBuiltInLoaders
};
//# sourceMappingURL=@babylonjs_loaders_dynamic.js.map
