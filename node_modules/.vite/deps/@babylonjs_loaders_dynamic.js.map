{
  "version": 3,
  "sources": ["../../../dev/loaders/src/glTF/2.0/Extensions/dynamic.ts", "../../../dev/loaders/src/dynamic.ts"],
  "sourcesContent": ["/* eslint-disable @typescript-eslint/naming-convention */\r\n\r\nimport { registerGLTFExtension } from \"../glTFLoaderExtensionRegistry\";\r\n\r\n/**\r\n * Registers the built-in glTF 2.0 extension async factories, which dynamically imports and loads each glTF extension on demand (e.g. only when a glTF model uses the extension).\r\n */\r\nexport function registerBuiltInGLTFExtensions() {\r\n    registerGLTFExtension(\"EXT_lights_image_based\", true, async (loader) => {\r\n        const { EXT_lights_image_based } = await import(\"./EXT_lights_image_based\");\r\n        return new EXT_lights_image_based(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"EXT_mesh_gpu_instancing\", true, async (loader) => {\r\n        const { EXT_mesh_gpu_instancing } = await import(\"./EXT_mesh_gpu_instancing\");\r\n        return new EXT_mesh_gpu_instancing(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"EXT_meshopt_compression\", true, async (loader) => {\r\n        const { EXT_meshopt_compression } = await import(\"./EXT_meshopt_compression\");\r\n        return new EXT_meshopt_compression(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"EXT_texture_avif\", true, async (loader) => {\r\n        const { EXT_texture_avif } = await import(\"./EXT_texture_avif\");\r\n        return new EXT_texture_avif(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"EXT_texture_webp\", true, async (loader) => {\r\n        const { EXT_texture_webp } = await import(\"./EXT_texture_webp\");\r\n        return new EXT_texture_webp(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"ExtrasAsMetadata\", false, async (loader) => {\r\n        const { ExtrasAsMetadata } = await import(\"./ExtrasAsMetadata\");\r\n        return new ExtrasAsMetadata(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"KHR_animation_pointer\", true, async (loader) => {\r\n        const { KHR_animation_pointer } = await import(\"./KHR_animation_pointer\");\r\n        return new KHR_animation_pointer(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"KHR_draco_mesh_compression\", true, async (loader) => {\r\n        const { KHR_draco_mesh_compression } = await import(\"./KHR_draco_mesh_compression\");\r\n        return new KHR_draco_mesh_compression(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"KHR_interactivity\", true, async (loader) => {\r\n        const { KHR_interactivity } = await import(\"./KHR_interactivity\");\r\n        return new KHR_interactivity(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"KHR_lights_punctual\", true, async (loader) => {\r\n        const { KHR_lights } = await import(\"./KHR_lights_punctual\");\r\n        return new KHR_lights(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"EXT_lights_ies\", true, async (loader) => {\r\n        const { EXT_lights_ies } = await import(\"./EXT_lights_ies\");\r\n        return new EXT_lights_ies(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"KHR_materials_anisotropy\", true, async (loader) => {\r\n        const { KHR_materials_anisotropy } = await import(\"./KHR_materials_anisotropy\");\r\n        return new KHR_materials_anisotropy(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"KHR_materials_clearcoat\", true, async (loader) => {\r\n        const { KHR_materials_clearcoat } = await import(\"./KHR_materials_clearcoat\");\r\n        return new KHR_materials_clearcoat(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"EXT_materials_diffuse_roughness\", true, async (loader) => {\r\n        const { EXT_materials_diffuse_roughness } = await import(\"./EXT_materials_diffuse_roughness\");\r\n        return new EXT_materials_diffuse_roughness(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"KHR_materials_diffuse_transmission\", true, async (loader) => {\r\n        const { KHR_materials_diffuse_transmission } = await import(\"./KHR_materials_diffuse_transmission\");\r\n        return new KHR_materials_diffuse_transmission(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"KHR_materials_dispersion\", true, async (loader) => {\r\n        const { KHR_materials_dispersion } = await import(\"./KHR_materials_dispersion\");\r\n        return new KHR_materials_dispersion(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"KHR_materials_emissive_strength\", true, async (loader) => {\r\n        const { KHR_materials_emissive_strength } = await import(\"./KHR_materials_emissive_strength\");\r\n        return new KHR_materials_emissive_strength(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"KHR_materials_ior\", true, async (loader) => {\r\n        const { KHR_materials_ior } = await import(\"./KHR_materials_ior\");\r\n        return new KHR_materials_ior(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"KHR_materials_iridescence\", true, async (loader) => {\r\n        const { KHR_materials_iridescence } = await import(\"./KHR_materials_iridescence\");\r\n        return new KHR_materials_iridescence(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"KHR_materials_pbrSpecularGlossiness\", true, async (loader) => {\r\n        const { KHR_materials_pbrSpecularGlossiness } = await import(\"./KHR_materials_pbrSpecularGlossiness\");\r\n        return new KHR_materials_pbrSpecularGlossiness(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"KHR_materials_sheen\", true, async (loader) => {\r\n        const { KHR_materials_sheen } = await import(\"./KHR_materials_sheen\");\r\n        return new KHR_materials_sheen(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"KHR_materials_specular\", true, async (loader) => {\r\n        const { KHR_materials_specular } = await import(\"./KHR_materials_specular\");\r\n        return new KHR_materials_specular(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"KHR_materials_transmission\", true, async (loader) => {\r\n        const { KHR_materials_transmission } = await import(\"./KHR_materials_transmission\");\r\n        return new KHR_materials_transmission(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"KHR_materials_unlit\", true, async (loader) => {\r\n        const { KHR_materials_unlit } = await import(\"./KHR_materials_unlit\");\r\n        return new KHR_materials_unlit(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"KHR_materials_variants\", true, async (loader) => {\r\n        const { KHR_materials_variants } = await import(\"./KHR_materials_variants\");\r\n        return new KHR_materials_variants(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"KHR_materials_volume\", true, async (loader) => {\r\n        const { KHR_materials_volume } = await import(\"./KHR_materials_volume\");\r\n        return new KHR_materials_volume(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"KHR_mesh_quantization\", true, async (loader) => {\r\n        const { KHR_mesh_quantization } = await import(\"./KHR_mesh_quantization\");\r\n        return new KHR_mesh_quantization(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"KHR_texture_basisu\", true, async (loader) => {\r\n        const { KHR_texture_basisu } = await import(\"./KHR_texture_basisu\");\r\n        return new KHR_texture_basisu(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"KHR_texture_transform\", true, async (loader) => {\r\n        const { KHR_texture_transform } = await import(\"./KHR_texture_transform\");\r\n        return new KHR_texture_transform(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"KHR_xmp_json_ld\", true, async (loader) => {\r\n        const { KHR_xmp_json_ld } = await import(\"./KHR_xmp_json_ld\");\r\n        return new KHR_xmp_json_ld(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"MSFT_audio_emitter\", true, async (loader) => {\r\n        const { MSFT_audio_emitter } = await import(\"./MSFT_audio_emitter\");\r\n        return new MSFT_audio_emitter(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"MSFT_lod\", true, async (loader) => {\r\n        const { MSFT_lod } = await import(\"./MSFT_lod\");\r\n        return new MSFT_lod(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"MSFT_minecraftMesh\", true, async (loader) => {\r\n        const { MSFT_minecraftMesh } = await import(\"./MSFT_minecraftMesh\");\r\n        return new MSFT_minecraftMesh(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"MSFT_sRGBFactors\", true, async (loader) => {\r\n        const { MSFT_sRGBFactors } = await import(\"./MSFT_sRGBFactors\");\r\n        return new MSFT_sRGBFactors(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"KHR_node_visibility\", true, async (loader) => {\r\n        const { KHR_node_visibility } = await import(\"./KHR_node_visibility\");\r\n        return new KHR_node_visibility(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"KHR_node_hoverability\", true, async (loader) => {\r\n        const { KHR_node_hoverability } = await import(\"./KHR_node_hoverability\");\r\n        return new KHR_node_hoverability(loader);\r\n    });\r\n\r\n    registerGLTFExtension(\"KHR_node_selectability\", true, async (loader) => {\r\n        const { KHR_node_selectability } = await import(\"./KHR_node_selectability\");\r\n        return new KHR_node_selectability(loader);\r\n    });\r\n}\r\n", "/* eslint-disable @typescript-eslint/naming-convention */\r\n\r\nimport type { ISceneLoaderPluginFactory, SceneLoaderPluginOptions } from \"core/Loading/sceneLoader\";\r\nimport { RegisterSceneLoaderPlugin } from \"core/Loading/sceneLoader\";\r\n\r\nimport { BVHFileLoaderMetadata } from \"./BVH/bvhFileLoader.metadata\";\r\nimport { GLTFFileLoaderMetadata } from \"./glTF/glTFFileLoader.metadata\";\r\nimport { OBJFileLoaderMetadata } from \"./OBJ/objFileLoader.metadata\";\r\nimport { SPLATFileLoaderMetadata } from \"./SPLAT/splatFileLoader.metadata\";\r\nimport { STLFileLoaderMetadata } from \"./STL/stlFileLoader.metadata\";\r\n\r\nimport { registerBuiltInGLTFExtensions } from \"./glTF/2.0/Extensions/dynamic\";\r\n\r\n/**\r\n * Registers the async plugin factories for all built-in loaders.\r\n * Loaders will be dynamically imported on demand, only when a SceneLoader load operation needs each respective loader.\r\n */\r\nexport function registerBuiltInLoaders() {\r\n    // Register the BVH loader.\r\n    RegisterSceneLoaderPlugin({\r\n        ...BVHFileLoaderMetadata,\r\n        createPlugin: async (options: SceneLoaderPluginOptions) => {\r\n            const { BVHFileLoader } = await import(\"./BVH/bvhFileLoader\");\r\n            return new BVHFileLoader(options[BVHFileLoaderMetadata.name]);\r\n        },\r\n    } satisfies ISceneLoaderPluginFactory);\r\n\r\n    // Register the glTF loader (2.0) specifically/only.\r\n    RegisterSceneLoaderPlugin({\r\n        ...GLTFFileLoaderMetadata,\r\n        createPlugin: async (options: SceneLoaderPluginOptions) => {\r\n            const { GLTFFileLoader } = await import(\"./glTF/2.0/glTFLoader\");\r\n            return new GLTFFileLoader(options[GLTFFileLoaderMetadata.name]);\r\n        },\r\n    } satisfies ISceneLoaderPluginFactory);\r\n\r\n    // Register the built-in glTF (2.0) extensions.\r\n    registerBuiltInGLTFExtensions();\r\n\r\n    // Register the OBJ loader.\r\n    RegisterSceneLoaderPlugin({\r\n        ...OBJFileLoaderMetadata,\r\n        createPlugin: async (options: SceneLoaderPluginOptions) => {\r\n            const { OBJFileLoader } = await import(\"./OBJ/objFileLoader\");\r\n            return new OBJFileLoader(options[OBJFileLoaderMetadata.name]);\r\n        },\r\n    } satisfies ISceneLoaderPluginFactory);\r\n\r\n    // Register the SPLAT loader.\r\n    RegisterSceneLoaderPlugin({\r\n        ...SPLATFileLoaderMetadata,\r\n        createPlugin: async (options: SceneLoaderPluginOptions) => {\r\n            const { SPLATFileLoader } = await import(\"./SPLAT/splatFileLoader\");\r\n            return new SPLATFileLoader(options[SPLATFileLoaderMetadata.name]);\r\n        },\r\n    } satisfies ISceneLoaderPluginFactory);\r\n\r\n    // Register the STL loader.\r\n    RegisterSceneLoaderPlugin({\r\n        ...STLFileLoaderMetadata,\r\n        createPlugin: async () => {\r\n            const { STLFileLoader } = await import(\"./STL/stlFileLoader\");\r\n            return new STLFileLoader();\r\n        },\r\n    } satisfies ISceneLoaderPluginFactory);\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
