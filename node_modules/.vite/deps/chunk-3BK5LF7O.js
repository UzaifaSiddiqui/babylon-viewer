// node_modules/@babylonjs/loaders/glTF/glTFFileLoader.metadata.js
var GLTFMagicBase64Encoded = "Z2xURg";
var GLTFFileLoaderMetadata = {
  name: "gltf",
  extensions: {
    // eslint-disable-next-line @typescript-eslint/naming-convention
    ".gltf": { isBinary: false, mimeType: "model/gltf+json" },
    // eslint-disable-next-line @typescript-eslint/naming-convention
    ".glb": { isBinary: true, mimeType: "model/gltf-binary" }
  },
  canDirectLoad(data) {
    return data.indexOf("asset") !== -1 && data.indexOf("version") !== -1 || data.startsWith("data:base64," + GLTFMagicBase64Encoded) || // this is technically incorrect, but will continue to support for backcompat.
    data.startsWith("data:;base64," + GLTFMagicBase64Encoded) || data.startsWith("data:application/octet-stream;base64," + GLTFMagicBase64Encoded) || data.startsWith("data:model/gltf-binary;base64," + GLTFMagicBase64Encoded);
  }
};

export {
  GLTFMagicBase64Encoded,
  GLTFFileLoaderMetadata
};
//# sourceMappingURL=chunk-3BK5LF7O.js.map
