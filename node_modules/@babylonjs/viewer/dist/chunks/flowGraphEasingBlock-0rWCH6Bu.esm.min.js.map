{"version":3,"file":"flowGraphEasingBlock-0rWCH6Bu.esm.min.js","sources":["../../../../../dev/core/dist/FlowGraph/Blocks/Execution/Animation/flowGraphEasingBlock.js"],"sourcesContent":["import { BackEase, BezierCurveEase, BounceEase, CircleEase, CubicEase, ElasticEase, ExponentialEase } from \"core/Animations/easing\";\nimport { FlowGraphBlock } from \"core/FlowGraph/flowGraphBlock\";\nimport { RichTypeAny, RichTypeNumber } from \"core/FlowGraph/flowGraphRichTypes\";\nimport { RegisterClass } from \"core/Misc/typeStore\";\n/**\n * The type of the easing function.\n */\nexport var EasingFunctionType;\n(function (EasingFunctionType) {\n    EasingFunctionType[EasingFunctionType[\"CircleEase\"] = 0] = \"CircleEase\";\n    EasingFunctionType[EasingFunctionType[\"BackEase\"] = 1] = \"BackEase\";\n    EasingFunctionType[EasingFunctionType[\"BounceEase\"] = 2] = \"BounceEase\";\n    EasingFunctionType[EasingFunctionType[\"CubicEase\"] = 3] = \"CubicEase\";\n    EasingFunctionType[EasingFunctionType[\"ElasticEase\"] = 4] = \"ElasticEase\";\n    EasingFunctionType[EasingFunctionType[\"ExponentialEase\"] = 5] = \"ExponentialEase\";\n    EasingFunctionType[EasingFunctionType[\"PowerEase\"] = 6] = \"PowerEase\";\n    EasingFunctionType[EasingFunctionType[\"QuadraticEase\"] = 7] = \"QuadraticEase\";\n    EasingFunctionType[EasingFunctionType[\"QuarticEase\"] = 8] = \"QuarticEase\";\n    EasingFunctionType[EasingFunctionType[\"QuinticEase\"] = 9] = \"QuinticEase\";\n    EasingFunctionType[EasingFunctionType[\"SineEase\"] = 10] = \"SineEase\";\n    EasingFunctionType[EasingFunctionType[\"BezierCurveEase\"] = 11] = \"BezierCurveEase\";\n})(EasingFunctionType || (EasingFunctionType = {}));\n/**\n * @internal\n * Creates an easing function object based on the type and parameters provided.\n * This is not tree-shaking friendly, so if you need cubic bezier, use the dedicated bezier block.\n * @param type The type of the easing function.\n * @param controlPoint1 The first control point for the bezier curve.\n * @param controlPoint2 The second control point for the bezier curve.\n * @returns The easing function object.\n */\nfunction CreateEasingFunction(type, ...parameters) {\n    switch (type) {\n        case 11 /* EasingFunctionType.BezierCurveEase */:\n            return new BezierCurveEase(...parameters);\n        case 0 /* EasingFunctionType.CircleEase */:\n            return new CircleEase();\n        case 1 /* EasingFunctionType.BackEase */:\n            return new BackEase(...parameters);\n        case 2 /* EasingFunctionType.BounceEase */:\n            return new BounceEase(...parameters);\n        case 3 /* EasingFunctionType.CubicEase */:\n            return new CubicEase();\n        case 4 /* EasingFunctionType.ElasticEase */:\n            return new ElasticEase(...parameters);\n        case 5 /* EasingFunctionType.ExponentialEase */:\n            return new ExponentialEase(...parameters);\n        default:\n            throw new Error(\"Easing type not yet implemented\");\n    }\n}\n/**\n * An easing block that generates an easingFunction object based on the data provided.\n */\nexport class FlowGraphEasingBlock extends FlowGraphBlock {\n    constructor(\n    /**\n     * the configuration of the block\n     */\n    config) {\n        super(config);\n        this.config = config;\n        /**\n         * Internal cache of reusable easing functions.\n         * key is type-mode-properties\n         */\n        this._easingFunctions = {};\n        this.type = this.registerDataInput(\"type\", RichTypeAny, 11);\n        this.mode = this.registerDataInput(\"mode\", RichTypeNumber, 0);\n        this.parameters = this.registerDataInput(\"parameters\", RichTypeAny, [1, 0, 0, 1]);\n        this.easingFunction = this.registerDataOutput(\"easingFunction\", RichTypeAny);\n    }\n    _updateOutputs(context) {\n        const type = this.type.getValue(context);\n        const mode = this.mode.getValue(context);\n        const parameters = this.parameters.getValue(context);\n        if (type === undefined || mode === undefined) {\n            return;\n        }\n        const key = `${type}-${mode}-${parameters.join(\"-\")}`;\n        if (!this._easingFunctions[key]) {\n            const easing = CreateEasingFunction(type, ...parameters);\n            easing.setEasingMode(mode);\n            this._easingFunctions[key] = easing;\n        }\n        this.easingFunction.setValue(this._easingFunctions[key], context);\n    }\n    getClassName() {\n        return \"FlowGraphEasingBlock\" /* FlowGraphBlockNames.Easing */;\n    }\n}\nRegisterClass(\"FlowGraphEasingBlock\" /* FlowGraphBlockNames.Easing */, FlowGraphEasingBlock);\n//# sourceMappingURL=flowGraphEasingBlock.js.map"],"names":["EasingFunctionType","FlowGraphEasingBlock","FlowGraphBlock","constructor","config","super","this","_easingFunctions","type","registerDataInput","RichTypeAny","mode","RichTypeNumber","parameters","easingFunction","registerDataOutput","_updateOutputs","context","getValue","undefined","key","join","easing","BezierCurveEase","CircleEase","BackEase","BounceEase","CubicEase","ElasticEase","ExponentialEase","Error","CreateEasingFunction","setEasingMode","setValue","getClassName","RegisterClass"],"mappings":"wRAOU,IAACA,GACX,SAAWA,GACPA,EAAmBA,EAA+B,WAAI,GAAK,aAC3DA,EAAmBA,EAA6B,SAAI,GAAK,WACzDA,EAAmBA,EAA+B,WAAI,GAAK,aAC3DA,EAAmBA,EAA8B,UAAI,GAAK,YAC1DA,EAAmBA,EAAgC,YAAI,GAAK,cAC5DA,EAAmBA,EAAoC,gBAAI,GAAK,kBAChEA,EAAmBA,EAA8B,UAAI,GAAK,YAC1DA,EAAmBA,EAAkC,cAAI,GAAK,gBAC9DA,EAAmBA,EAAgC,YAAI,GAAK,cAC5DA,EAAmBA,EAAgC,YAAI,GAAK,cAC5DA,EAAmBA,EAA6B,SAAI,IAAM,WAC1DA,EAAmBA,EAAoC,gBAAI,IAAM,iBACpE,CAbD,CAaGA,IAAuBA,EAAqB,CAAA,IAiCxC,MAAMC,UAA6BC,EACtC,WAAAC,CAIAC,GACIC,MAAMD,GACNE,KAAKF,OAASA,EAKdE,KAAKC,iBAAmB,CAAE,EAC1BD,KAAKE,KAAOF,KAAKG,kBAAkB,OAAQC,EAAa,IACxDJ,KAAKK,KAAOL,KAAKG,kBAAkB,OAAQG,EAAgB,GAC3DN,KAAKO,WAAaP,KAAKG,kBAAkB,aAAcC,EAAa,CAAC,EAAG,EAAG,EAAG,IAC9EJ,KAAKQ,eAAiBR,KAAKS,mBAAmB,iBAAkBL,EACxE,CACI,cAAAM,CAAeC,GACX,MAAMT,EAAOF,KAAKE,KAAKU,SAASD,GAC1BN,EAAOL,KAAKK,KAAKO,SAASD,GAC1BJ,EAAaP,KAAKO,WAAWK,SAASD,GAC5C,QAAaE,IAATX,QAA+BW,IAATR,EACtB,OAEJ,MAAMS,EAAM,GAAGZ,KAAQG,KAAQE,EAAWQ,KAAK,OAC/C,IAAKf,KAAKC,iBAAiBa,GAAM,CAC7B,MAAME,EAlDlB,SAA8Bd,KAASK,GACnC,OAAQL,GACJ,KAAK,GACD,OAAO,IAAIe,KAAmBV,GAClC,KAAK,EACD,OAAO,IAAIW,EACf,KAAK,EACD,OAAO,IAAIC,KAAYZ,GAC3B,KAAK,EACD,OAAO,IAAIa,KAAcb,GAC7B,KAAK,EACD,OAAO,IAAIc,EACf,KAAK,EACD,OAAO,IAAIC,KAAef,GAC9B,KAAK,EACD,OAAO,IAAIgB,KAAmBhB,GAClC,QACI,MAAM,IAAIiB,MAAM,mCAE5B,CA+B2BC,CAAqBvB,KAASK,GAC7CS,EAAOU,cAAcrB,GACrBL,KAAKC,iBAAiBa,GAAOE,CACzC,CACQhB,KAAKQ,eAAemB,SAAS3B,KAAKC,iBAAiBa,GAAMH,EACjE,CACI,YAAAiB,GACI,MAAO,sBACf,EAEAC,EAAc,uBAAyDlC"}