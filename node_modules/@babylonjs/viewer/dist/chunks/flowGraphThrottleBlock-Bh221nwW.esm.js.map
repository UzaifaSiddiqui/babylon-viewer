{"version":3,"file":"flowGraphThrottleBlock-Bh221nwW.esm.js","sources":["../../../../../dev/core/dist/FlowGraph/Blocks/Execution/ControlFlow/flowGraphThrottleBlock.js"],"sourcesContent":["import { RichTypeNumber } from \"../../../flowGraphRichTypes\";\nimport { FlowGraphExecutionBlockWithOutSignal } from \"../../../flowGraphExecutionBlockWithOutSignal\";\nimport { RegisterClass } from \"../../../../Misc/typeStore\";\n/**\n * A block that throttles the execution of its output flow.\n */\nexport class FlowGraphThrottleBlock extends FlowGraphExecutionBlockWithOutSignal {\n    constructor(config) {\n        super(config);\n        this.reset = this._registerSignalInput(\"reset\");\n        this.duration = this.registerDataInput(\"duration\", RichTypeNumber);\n        this.lastRemainingTime = this.registerDataOutput(\"lastRemainingTime\", RichTypeNumber, NaN);\n    }\n    _execute(context, callingSignal) {\n        if (callingSignal === this.reset) {\n            this.lastRemainingTime.setValue(NaN, context);\n            context._setExecutionVariable(this, \"lastRemainingTime\", NaN);\n            context._setExecutionVariable(this, \"timestamp\", 0);\n            return;\n        }\n        // in seconds\n        const durationValue = this.duration.getValue(context);\n        if (durationValue <= 0 || isNaN(durationValue) || !isFinite(durationValue)) {\n            return this._reportError(context, \"Invalid duration in Throttle block\");\n        }\n        const lastRemainingTime = context._getExecutionVariable(this, \"lastRemainingTime\", NaN);\n        // Using Date.now() to get ms since epoch. not using performance.now() because its precision is not needed here\n        const currentTime = Date.now();\n        if (isNaN(lastRemainingTime)) {\n            this.lastRemainingTime.setValue(0, context);\n            context._setExecutionVariable(this, \"lastRemainingTime\", 0);\n            context._setExecutionVariable(this, \"timestamp\", currentTime);\n            // according to glTF interactivity specs\n            return this.out._activateSignal(context);\n        }\n        else {\n            const elapsedTime = currentTime - context._getExecutionVariable(this, \"timestamp\", 0);\n            // duration is in seconds, so we need to multiply by 1000\n            const durationInMs = durationValue * 1000;\n            if (durationInMs <= elapsedTime) {\n                this.lastRemainingTime.setValue(0, context);\n                context._setExecutionVariable(this, \"lastRemainingTime\", 0);\n                context._setExecutionVariable(this, \"timestamp\", currentTime);\n                return this.out._activateSignal(context);\n            }\n            else {\n                const remainingTime = durationInMs - elapsedTime;\n                // output is in seconds\n                this.lastRemainingTime.setValue(remainingTime / 1000, context);\n                context._setExecutionVariable(this, \"lastRemainingTime\", remainingTime);\n            }\n        }\n    }\n    /**\n     * @returns class name of the block.\n     */\n    getClassName() {\n        return \"FlowGraphThrottleBlock\" /* FlowGraphBlockNames.Throttle */;\n    }\n}\nRegisterClass(\"FlowGraphThrottleBlock\" /* FlowGraphBlockNames.Throttle */, FlowGraphThrottleBlock);\n//# sourceMappingURL=flowGraphThrottleBlock.js.map"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AACO,MAAM,sBAAsB,SAAS,oCAAoC,CAAC;AACjF,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC;AACrB,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC;AACvD,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,cAAc,CAAC;AAC1E,QAAQ,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,EAAE,cAAc,EAAE,GAAG,CAAC;AAClG;AACA,IAAI,QAAQ,CAAC,OAAO,EAAE,aAAa,EAAE;AACrC,QAAQ,IAAI,aAAa,KAAK,IAAI,CAAC,KAAK,EAAE;AAC1C,YAAY,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,GAAG,EAAE,OAAO,CAAC;AACzD,YAAY,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,mBAAmB,EAAE,GAAG,CAAC;AACzE,YAAY,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;AAC/D,YAAY;AACZ;AACA;AACA,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC7D,QAAQ,IAAI,aAAa,IAAI,CAAC,IAAI,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;AACpF,YAAY,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,oCAAoC,CAAC;AACnF;AACA,QAAQ,MAAM,iBAAiB,GAAG,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,mBAAmB,EAAE,GAAG,CAAC;AAC/F;AACA,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,EAAE;AACtC,QAAQ,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE;AACtC,YAAY,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC;AACvD,YAAY,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,mBAAmB,EAAE,CAAC,CAAC;AACvE,YAAY,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,WAAW,EAAE,WAAW,CAAC;AACzE;AACA,YAAY,OAAO,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,OAAO,CAAC;AACpD;AACA,aAAa;AACb,YAAY,MAAM,WAAW,GAAG,WAAW,GAAG,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;AACjG;AACA,YAAY,MAAM,YAAY,GAAG,aAAa,GAAG,IAAI;AACrD,YAAY,IAAI,YAAY,IAAI,WAAW,EAAE;AAC7C,gBAAgB,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC;AAC3D,gBAAgB,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,mBAAmB,EAAE,CAAC,CAAC;AAC3E,gBAAgB,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,WAAW,EAAE,WAAW,CAAC;AAC7E,gBAAgB,OAAO,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,OAAO,CAAC;AACxD;AACA,iBAAiB;AACjB,gBAAgB,MAAM,aAAa,GAAG,YAAY,GAAG,WAAW;AAChE;AACA,gBAAgB,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,aAAa,GAAG,IAAI,EAAE,OAAO,CAAC;AAC9E,gBAAgB,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,mBAAmB,EAAE,aAAa,CAAC;AACvF;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,GAAG;AACnB,QAAQ,OAAO,wBAAwB;AACvC;AACA;AACA,aAAa,CAAC,wBAAwB,qCAAqC,sBAAsB,CAAC;;;;"}