{"version":3,"file":"flowGraphIndexOfBlock-DNe7W5EN.esm.min.js","sources":["../../../../../dev/core/dist/FlowGraph/Blocks/Data/Utils/flowGraphIndexOfBlock.js"],"sourcesContent":["import { FlowGraphBlock } from \"core/FlowGraph/flowGraphBlock\";\nimport { RichTypeAny, RichTypeFlowGraphInteger } from \"core/FlowGraph/flowGraphRichTypes\";\nimport { RegisterClass } from \"core/Misc/typeStore\";\nimport { FlowGraphInteger } from \"core/FlowGraph/CustomTypes/flowGraphInteger\";\n/**\n * This block takes an object as input and an array and returns the index of the object in the array.\n */\nexport class FlowGraphIndexOfBlock extends FlowGraphBlock {\n    /**\n     * Construct a FlowGraphIndexOfBlock.\n     * @param config construction parameters\n     */\n    constructor(config) {\n        super(config);\n        this.config = config;\n        this.object = this.registerDataInput(\"object\", RichTypeAny);\n        this.array = this.registerDataInput(\"array\", RichTypeAny);\n        this.index = this.registerDataOutput(\"index\", RichTypeFlowGraphInteger, new FlowGraphInteger(-1));\n    }\n    /**\n     * @internal\n     */\n    _updateOutputs(context) {\n        const object = this.object.getValue(context);\n        const array = this.array.getValue(context);\n        if (array) {\n            this.index.setValue(new FlowGraphInteger(array.indexOf(object)), context);\n        }\n    }\n    /**\n     * Serializes this block\n     * @param serializationObject the object to serialize to\n     */\n    serialize(serializationObject) {\n        super.serialize(serializationObject);\n    }\n    getClassName() {\n        return \"FlowGraphIndexOfBlock\" /* FlowGraphBlockNames.IndexOf */;\n    }\n}\nRegisterClass(\"FlowGraphIndexOfBlock\" /* FlowGraphBlockNames.IndexOf */, FlowGraphIndexOfBlock);\n//# sourceMappingURL=flowGraphIndexOfBlock.js.map"],"names":["FlowGraphIndexOfBlock","FlowGraphBlock","constructor","config","super","this","object","registerDataInput","RichTypeAny","array","index","registerDataOutput","RichTypeFlowGraphInteger","FlowGraphInteger","_updateOutputs","context","getValue","setValue","indexOf","serialize","serializationObject","getClassName","RegisterClass"],"mappings":"uOAOO,MAAMA,UAA8BC,EAKvC,WAAAC,CAAYC,GACRC,MAAMD,GACNE,KAAKF,OAASA,EACdE,KAAKC,OAASD,KAAKE,kBAAkB,SAAUC,GAC/CH,KAAKI,MAAQJ,KAAKE,kBAAkB,QAASC,GAC7CH,KAAKK,MAAQL,KAAKM,mBAAmB,QAASC,EAA0B,IAAIC,GAAiB,GACrG,CAII,cAAAC,CAAeC,GACX,MAAMT,EAASD,KAAKC,OAAOU,SAASD,GAC9BN,EAAQJ,KAAKI,MAAMO,SAASD,GAC9BN,GACAJ,KAAKK,MAAMO,SAAS,IAAIJ,EAAiBJ,EAAMS,QAAQZ,IAAUS,EAE7E,CAKI,SAAAI,CAAUC,GACNhB,MAAMe,UAAUC,EACxB,CACI,YAAAC,GACI,MAAO,uBACf,EAEAC,EAAc,wBAA2DtB"}