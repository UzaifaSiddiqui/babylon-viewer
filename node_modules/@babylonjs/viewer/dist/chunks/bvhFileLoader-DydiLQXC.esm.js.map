{"version":3,"file":"bvhFileLoader-DydiLQXC.esm.js","sources":["../../../../../dev/loaders/dist/BVH/bvhLoader.js","../../../../../dev/loaders/dist/BVH/bvhFileLoader.js"],"sourcesContent":["import { Animation } from \"core/Animations/animation\";\nimport { Bone } from \"core/Bones/bone\";\nimport { Skeleton } from \"core/Bones/skeleton\";\nimport { Matrix, Quaternion, Vector3 } from \"core/Maths/math.vector\";\nimport { Tools } from \"core/Misc/tools\";\nconst _XPosition = \"Xposition\";\nconst _YPosition = \"Yposition\";\nconst _ZPosition = \"Zposition\";\nconst _XRotation = \"Xrotation\";\nconst _YRotation = \"Yrotation\";\nconst _ZRotation = \"Zrotation\";\nconst _HierarchyNode = \"HIERARCHY\";\nconst _MotionNode = \"MOTION\";\nclass LoaderContext {\n    constructor(skeleton) {\n        this.loopMode = Animation.ANIMATIONLOOPMODE_CYCLE;\n        this.list = [];\n        this.root = CreateBVHNode();\n        this.numFrames = 0;\n        this.frameRate = 0;\n        this.skeleton = skeleton;\n    }\n}\nfunction CreateBVHNode() {\n    return {\n        name: \"\",\n        type: \"\",\n        offset: new Vector3(),\n        channels: [],\n        children: [],\n        frames: [],\n        parent: null,\n    };\n}\nfunction CreateBVHKeyFrame() {\n    return {\n        frame: 0,\n        position: new Vector3(),\n        rotation: new Quaternion(),\n    };\n}\n/**\n * Converts the BVH node's offset to a Babylon matrix\n * @param node - The BVH node to convert\n * @returns The converted matrix\n */\nfunction BoneOffset(node) {\n    const x = node.offset.x;\n    const y = node.offset.y;\n    const z = node.offset.z;\n    return Matrix.Translation(x, y, z);\n}\n/**\n * Creates animations for the BVH node\n * @param node - The BVH node to create animations for\n * @param context - The loader context\n * @returns The created animations\n */\nfunction CreateAnimations(node, context) {\n    if (node.frames.length === 0) {\n        return [];\n    }\n    const animations = [];\n    // Create position animation if there are position channels\n    const hasPosition = node.channels.some((c) => c === _XPosition || c === _YPosition || c === _ZPosition);\n    // Create rotation animation if there are rotation channels\n    const hasRotation = node.channels.some((c) => c === _XRotation || c === _YRotation || c === _ZRotation);\n    const posAnim = new Animation(`${node.name}_pos`, \"position\", context.frameRate, Animation.ANIMATIONTYPE_VECTOR3, context.loopMode);\n    const rotAnim = new Animation(`${node.name}_rot`, \"rotationQuaternion\", context.frameRate, Animation.ANIMATIONTYPE_QUATERNION, context.loopMode);\n    const posKeys = [];\n    const rotKeys = [];\n    for (let i = 0; i < node.frames.length; i++) {\n        const frame = node.frames[i];\n        if (hasPosition && frame.position) {\n            posKeys.push({\n                frame: frame.frame,\n                value: frame.position.clone(),\n            });\n        }\n        if (hasRotation) {\n            rotKeys.push({\n                frame: frame.frame,\n                value: frame.rotation.clone(),\n            });\n        }\n    }\n    if (posKeys.length > 0) {\n        posAnim.setKeys(posKeys);\n        animations.push(posAnim);\n    }\n    if (rotKeys.length > 0) {\n        rotAnim.setKeys(rotKeys);\n        animations.push(rotAnim);\n    }\n    return animations;\n}\n/**\n * Converts a BVH node to a Babylon bone\n * @param node - The BVH node to convert\n * @param parent - The parent bone\n * @param context - The loader context\n */\nfunction ConvertNode(node, parent, context) {\n    const matrix = BoneOffset(node);\n    const bone = new Bone(node.name, context.skeleton, parent, matrix);\n    // Create animation for this bone\n    const animations = CreateAnimations(node, context);\n    for (const animation of animations) {\n        if (animation.getKeys() && animation.getKeys().length > 0) {\n            bone.animations.push(animation);\n        }\n    }\n    for (const child of node.children) {\n        ConvertNode(child, bone, context);\n    }\n}\n/**\n * Recursively reads data from a single frame into the bone hierarchy.\n * The bone hierarchy has to be structured in the same order as the BVH file.\n * keyframe data is stored in bone.frames.\n * @param data - splitted string array (frame values), values are shift()ed\n * @param frameNumber - playback time for this keyframe\n * @param bone - the bone to read frame data from\n * @param tokenIndex - the index of the token to read\n */\nfunction ReadFrameData(data, frameNumber, bone, tokenIndex) {\n    if (bone.type === \"ENDSITE\") {\n        // end sites have no motion data\n        return;\n    }\n    // add keyframe\n    const keyframe = CreateBVHKeyFrame();\n    keyframe.frame = frameNumber;\n    keyframe.position = new Vector3();\n    keyframe.rotation = new Quaternion();\n    bone.frames.push(keyframe);\n    let combinedRotation = Matrix.Identity();\n    // parse values for each channel in node\n    for (let i = 0; i < bone.channels.length; ++i) {\n        const channel = bone.channels[i];\n        const value = data[tokenIndex.i++];\n        if (!value) {\n            continue;\n        }\n        const parsedValue = parseFloat(value.trim());\n        if (channel.endsWith(\"position\")) {\n            switch (channel) {\n                case _XPosition:\n                    keyframe.position.x = parsedValue;\n                    break;\n                case _YPosition:\n                    keyframe.position.y = parsedValue;\n                    break;\n                case _ZPosition:\n                    keyframe.position.z = parsedValue;\n                    break;\n            }\n        }\n        else if (channel.endsWith(\"rotation\")) {\n            const angle = Tools.ToRadians(parsedValue);\n            let rotationMatrix;\n            switch (channel) {\n                case _XRotation:\n                    rotationMatrix = Matrix.RotationX(angle);\n                    break;\n                case _YRotation:\n                    rotationMatrix = Matrix.RotationY(angle);\n                    break;\n                case _ZRotation:\n                    rotationMatrix = Matrix.RotationZ(angle);\n                    break;\n            }\n            combinedRotation = rotationMatrix.multiply(combinedRotation);\n        }\n    }\n    Quaternion.FromRotationMatrixToRef(combinedRotation, keyframe.rotation);\n    // parse child nodes\n    for (const child of bone.children) {\n        ReadFrameData(data, frameNumber, child, tokenIndex);\n    }\n}\n/**\n * Recursively parses the HIERARCHY section of the BVH file\n * @param lines - all lines of the file. lines are consumed as we go along\n * @param firstLine - line containing the node type and name e.g. \"JOINT hip\"\n * @param parent - the parent node for hierarchy\n * @param context - the loader context containing the list of nodes and other data\n * @returns a BVH node including children\n */\nfunction ReadNode(lines, firstLine, parent, context) {\n    const node = CreateBVHNode();\n    node.parent = parent;\n    context.list.push(node);\n    // parse node type and name.\n    let tokens = firstLine.trim().split(/\\s+/);\n    if (tokens[0].toUpperCase() === \"END\" && tokens[1].toUpperCase() === \"SITE\") {\n        node.type = \"ENDSITE\";\n        node.name = \"ENDSITE\"; // bvh end sites have no name\n    }\n    else {\n        node.name = tokens[1];\n        node.type = tokens[0].toUpperCase();\n    }\n    // opening bracket\n    if (lines.shift()?.trim() != \"{\") {\n        throw new Error(\"Expected opening { after type & name\");\n    }\n    // parse OFFSET\n    const tokensSplit = lines.shift()?.trim().split(/\\s+/);\n    if (!tokensSplit) {\n        throw new Error(\"Unexpected end of file: missing OFFSET\");\n    }\n    tokens = tokensSplit;\n    if (tokens[0].toUpperCase() != \"OFFSET\") {\n        throw new Error(\"Expected OFFSET, but got: \" + tokens[0]);\n    }\n    if (tokens.length != 4) {\n        throw new Error(\"OFFSET: Invalid number of values\");\n    }\n    const offset = new Vector3(parseFloat(tokens[1]), parseFloat(tokens[2]), parseFloat(tokens[3]));\n    if (isNaN(offset.x) || isNaN(offset.y) || isNaN(offset.z)) {\n        throw new Error(\"OFFSET: Invalid values\");\n    }\n    node.offset = offset;\n    // parse CHANNELS definitions\n    if (node.type != \"ENDSITE\") {\n        tokens = lines.shift()?.trim().split(/\\s+/);\n        if (!tokens) {\n            throw new Error(\"Unexpected end of file: missing CHANNELS\");\n        }\n        if (tokens[0].toUpperCase() != \"CHANNELS\") {\n            throw new Error(\"Expected CHANNELS definition\");\n        }\n        const numChannels = parseInt(tokens[1]);\n        // Skip CHANNELS and the number of channels\n        node.channels = tokens.splice(2, numChannels);\n        node.children = [];\n    }\n    // read children\n    while (lines.length > 0) {\n        const line = lines.shift()?.trim();\n        if (line === \"}\") {\n            // Finish reading the node\n            return node;\n        }\n        else if (line) {\n            node.children.push(ReadNode(lines, line, node, context));\n        }\n    }\n    throw new Error(\"Unexpected end of file: missing closing brace\");\n}\n/**\n * Reads a BVH file, returns a skeleton\n * @param text - The BVH file content\n * @param scene - The scene to add the skeleton to\n * @param assetContainer - The asset container to add the skeleton to\n * @param loadingOptions - The loading options\n * @returns The skeleton\n */\nexport function ReadBvh(text, scene, assetContainer, loadingOptions) {\n    const lines = text.split(\"\\n\");\n    const { loopMode } = loadingOptions;\n    scene._blockEntityCollection = !!assetContainer;\n    const skeleton = new Skeleton(\"\", \"\", scene);\n    skeleton._parentContainer = assetContainer;\n    scene._blockEntityCollection = false;\n    const context = new LoaderContext(skeleton);\n    context.loopMode = loopMode;\n    // read model structure\n    const firstLine = lines.shift();\n    if (!firstLine || firstLine.trim().toUpperCase() !== _HierarchyNode) {\n        throw new Error(\"HIERARCHY expected\");\n    }\n    const nodeLine = lines.shift();\n    if (!nodeLine) {\n        throw new Error(\"Unexpected end of file after HIERARCHY\");\n    }\n    const root = ReadNode(lines, nodeLine.trim(), null, context);\n    // read motion data\n    const motionLine = lines.shift();\n    if (!motionLine || motionLine.trim().toUpperCase() !== _MotionNode) {\n        throw new Error(\"MOTION expected\");\n    }\n    const framesLine = lines.shift();\n    if (!framesLine) {\n        throw new Error(\"Unexpected end of file before frame count\");\n    }\n    const framesTokens = framesLine.trim().split(/[\\s]+/);\n    if (framesTokens.length < 2) {\n        throw new Error(\"Invalid frame count line\");\n    }\n    // number of frames\n    const numFrames = parseInt(framesTokens[1]);\n    if (isNaN(numFrames)) {\n        throw new Error(\"Failed to read number of frames.\");\n    }\n    context.numFrames = numFrames;\n    // frame time\n    const frameTimeLine = lines.shift();\n    if (!frameTimeLine) {\n        throw new Error(\"Unexpected end of file before frame time\");\n    }\n    const frameTimeTokens = frameTimeLine.trim().split(/[\\s]+/);\n    if (frameTimeTokens.length < 3) {\n        throw new Error(\"Invalid frame time line\");\n    }\n    const frameTime = parseFloat(frameTimeTokens[2]);\n    if (isNaN(frameTime)) {\n        throw new Error(\"Failed to read frame time.\");\n    }\n    context.frameRate = frameTime;\n    // read frame data line by line\n    for (let i = 0; i < numFrames; ++i) {\n        const frameLine = lines.shift();\n        if (!frameLine) {\n            continue;\n        }\n        const tokens = frameLine.trim().split(/[\\s]+/) || [];\n        ReadFrameData(tokens, i, root, { i: 0 });\n    }\n    context.root = root;\n    ConvertNode(context.root, null, context);\n    context.skeleton.returnToRest();\n    return context.skeleton;\n}\n//# sourceMappingURL=bvhLoader.js.map","import { RegisterSceneLoaderPlugin } from \"core/Loading/sceneLoader\";\nimport { AssetContainer } from \"core/assetContainer\";\nimport { Animation } from \"core/Animations/animation\";\nimport { BVHFileLoaderMetadata } from \"./bvhFileLoader.metadata\";\nimport { ReadBvh } from \"./bvhLoader\";\n/**\n * @experimental\n * BVH file type loader.\n * This is a babylon scene loader plugin.\n */\nexport class BVHFileLoader {\n    /**\n     * Creates loader for bvh motion files\n     * @param loadingOptions - Options for the bvh loader\n     */\n    constructor(loadingOptions) {\n        /**\n         * Name of the loader (\"bvh\")\n         */\n        this.name = BVHFileLoaderMetadata.name;\n        /** @internal */\n        this.extensions = BVHFileLoaderMetadata.extensions;\n        this._loadingOptions = { ...BVHFileLoader._DefaultLoadingOptions, ...(loadingOptions ?? {}) };\n    }\n    static get _DefaultLoadingOptions() {\n        return {\n            loopMode: Animation.ANIMATIONLOOPMODE_CYCLE,\n        };\n    }\n    /** @internal */\n    createPlugin(options) {\n        return new BVHFileLoader(options[BVHFileLoaderMetadata.name]);\n    }\n    /**\n     * If the data string can be loaded directly.\n     * @returns if the data can be loaded directly\n     */\n    canDirectLoad() {\n        return true;\n    }\n    /**\n     * Imports  from the loaded gaussian splatting data and adds them to the scene\n     * @param _meshesNames a string or array of strings of the mesh names that should be loaded from the file\n     * @param scene the scene the meshes should be added to\n     * @param data the bvh data to load\n     * @returns a promise containing the loaded skeletons and animations\n     */\n    // eslint-disable-next-line @typescript-eslint/promise-function-async, no-restricted-syntax\n    importMeshAsync(_meshesNames, scene, data) {\n        if (typeof data !== \"string\") {\n            // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n            return Promise.reject(\"BVH loader expects string data.\");\n        }\n        try {\n            const skeleton = ReadBvh(data, scene, null, this._loadingOptions);\n            return Promise.resolve({\n                meshes: [],\n                particleSystems: [],\n                skeletons: [skeleton],\n                animationGroups: [],\n                transformNodes: [],\n                geometries: [],\n                lights: [],\n                spriteManagers: [],\n            });\n        }\n        catch (e) {\n            // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n            return Promise.reject(e);\n        }\n    }\n    /**\n     * Imports all objects from the loaded bvh data and adds them to the scene\n     * @param scene the scene the objects should be added to\n     * @param data the bvh data to load\n     * @returns a promise which completes when objects have been loaded to the scene\n     */\n    // eslint-disable-next-line no-restricted-syntax, @typescript-eslint/promise-function-async\n    loadAsync(scene, data) {\n        if (typeof data !== \"string\") {\n            // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n            return Promise.reject(\"BVH loader expects string data.\");\n        }\n        // eslint-disable-next-line github/no-then\n        return this.importMeshAsync(null, scene, data).then(() => {\n            // return void\n        });\n    }\n    /**\n     * Load into an asset container.\n     * @param scene The scene to load into\n     * @param data The data to import\n     * @returns The loaded asset container\n     */\n    // eslint-disable-next-line @typescript-eslint/promise-function-async, no-restricted-syntax\n    loadAssetContainerAsync(scene, data) {\n        if (typeof data !== \"string\") {\n            // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n            return Promise.reject(\"BVH loader expects string data.\");\n        }\n        const assetContainer = new AssetContainer(scene);\n        try {\n            const skeleton = ReadBvh(data, scene, assetContainer, this._loadingOptions);\n            assetContainer.skeletons.push(skeleton);\n            return Promise.resolve(assetContainer);\n        }\n        catch (e) {\n            // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n            return Promise.reject(e);\n        }\n    }\n}\nRegisterSceneLoaderPlugin(new BVHFileLoader());\n//# sourceMappingURL=bvhFileLoader.js.map"],"names":[],"mappings":"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"}