{"version":3,"file":"flowGraphBinaryOperationBlock-9u2S5tjr.esm.min.js","sources":["../../../../../dev/core/dist/FlowGraph/Blocks/Data/flowGraphBinaryOperationBlock.js"],"sourcesContent":["import { FlowGraphCachedOperationBlock } from \"./flowGraphCachedOperationBlock\";\n/**\n * The base block for all binary operation blocks. Receives an input of type\n * LeftT, one of type RightT, and outputs a value of type ResultT.\n */\nexport class FlowGraphBinaryOperationBlock extends FlowGraphCachedOperationBlock {\n    constructor(leftRichType, rightRichType, resultRichType, _operation, _className, config) {\n        super(resultRichType, config);\n        this._operation = _operation;\n        this._className = _className;\n        this.a = this.registerDataInput(\"a\", leftRichType);\n        this.b = this.registerDataInput(\"b\", rightRichType);\n    }\n    /**\n     * the operation performed by this block\n     * @param context the graph context\n     * @returns the result of the operation\n     */\n    _doOperation(context) {\n        const a = this.a.getValue(context);\n        const b = this.b.getValue(context);\n        return this._operation(a, b);\n    }\n    /**\n     * Gets the class name of this block\n     * @returns the class name\n     */\n    getClassName() {\n        return this._className;\n    }\n}\n//# sourceMappingURL=flowGraphBinaryOperationBlock.js.map"],"names":["FlowGraphBinaryOperationBlock","FlowGraphCachedOperationBlock","constructor","leftRichType","rightRichType","resultRichType","_operation","_className","config","super","this","a","registerDataInput","b","_doOperation","context","getValue","getClassName"],"mappings":"wEAKO,MAAMA,UAAsCC,EAC/C,WAAAC,CAAYC,EAAcC,EAAeC,EAAgBC,EAAYC,EAAYC,GAC7EC,MAAMJ,EAAgBG,GACtBE,KAAKJ,WAAaA,EAClBI,KAAKH,WAAaA,EAClBG,KAAKC,EAAID,KAAKE,kBAAkB,IAAKT,GACrCO,KAAKG,EAAIH,KAAKE,kBAAkB,IAAKR,EAC7C,CAMI,YAAAU,CAAaC,GACT,MAAMJ,EAAID,KAAKC,EAAEK,SAASD,GACpBF,EAAIH,KAAKG,EAAEG,SAASD,GAC1B,OAAOL,KAAKJ,WAAWK,EAAGE,EAClC,CAKI,YAAAI,GACI,OAAOP,KAAKH,UACpB"}