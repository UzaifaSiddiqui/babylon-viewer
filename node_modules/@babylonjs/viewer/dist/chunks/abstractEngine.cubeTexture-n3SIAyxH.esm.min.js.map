{"version":3,"file":"abstractEngine.cubeTexture-n3SIAyxH.esm.min.js","sources":["../../../../../dev/core/dist/Engines/AbstractEngine/abstractEngine.cubeTexture.js"],"sourcesContent":["import { InternalTexture } from \"../../Materials/Textures/internalTexture\";\nimport { Logger } from \"../../Misc/logger\";\nimport { LoadImage } from \"../../Misc/fileTools\";\nimport { RandomGUID } from \"../../Misc/guid\";\nimport { AbstractEngine } from \"../abstractEngine\";\nimport { _GetCompatibleTextureLoader } from \"core/Materials/Textures/Loaders/textureLoaderManager\";\nimport { GetExtensionFromUrl } from \"core/Misc/urlTools\";\nAbstractEngine.prototype._partialLoadFile = function (url, index, loadedFiles, onfinish, onErrorCallBack = null) {\n    const onload = (data) => {\n        loadedFiles[index] = data;\n        loadedFiles._internalCount++;\n        if (loadedFiles._internalCount === 6) {\n            onfinish(loadedFiles);\n        }\n    };\n    const onerror = (request, exception) => {\n        if (onErrorCallBack && request) {\n            onErrorCallBack(request.status + \" \" + request.statusText, exception);\n        }\n    };\n    this._loadFile(url, onload, undefined, undefined, true, onerror);\n};\nAbstractEngine.prototype._cascadeLoadFiles = function (scene, onfinish, files, onError = null) {\n    const loadedFiles = [];\n    loadedFiles._internalCount = 0;\n    for (let index = 0; index < 6; index++) {\n        this._partialLoadFile(files[index], index, loadedFiles, onfinish, onError);\n    }\n};\nAbstractEngine.prototype._cascadeLoadImgs = function (scene, texture, onfinish, files, onError = null, mimeType) {\n    const loadedImages = [];\n    loadedImages._internalCount = 0;\n    for (let index = 0; index < 6; index++) {\n        this._partialLoadImg(files[index], index, loadedImages, scene, texture, onfinish, onError, mimeType);\n    }\n};\nAbstractEngine.prototype._partialLoadImg = function (url, index, loadedImages, scene, texture, onfinish, onErrorCallBack = null, mimeType) {\n    const tokenPendingData = RandomGUID();\n    const onload = (img) => {\n        loadedImages[index] = img;\n        loadedImages._internalCount++;\n        if (scene) {\n            scene.removePendingData(tokenPendingData);\n        }\n        if (loadedImages._internalCount === 6 && onfinish) {\n            onfinish(texture, loadedImages);\n        }\n    };\n    const onerror = (message, exception) => {\n        if (scene) {\n            scene.removePendingData(tokenPendingData);\n        }\n        if (onErrorCallBack) {\n            onErrorCallBack(message, exception);\n        }\n    };\n    LoadImage(url, onload, onerror, scene ? scene.offlineProvider : null, mimeType);\n    if (scene) {\n        scene.addPendingData(tokenPendingData);\n    }\n};\nAbstractEngine.prototype.createCubeTextureBase = function (rootUrl, scene, files, noMipmap, onLoad = null, onError = null, format, forcedExtension = null, createPolynomials = false, lodScale = 0, lodOffset = 0, fallback = null, beforeLoadCubeDataCallback = null, imageHandler = null, useSRGBBuffer = false, buffer = null) {\n    const texture = fallback ? fallback : new InternalTexture(this, 7 /* InternalTextureSource.Cube */);\n    texture.isCube = true;\n    texture.url = rootUrl;\n    texture.generateMipMaps = !noMipmap;\n    texture._lodGenerationScale = lodScale;\n    texture._lodGenerationOffset = lodOffset;\n    texture._useSRGBBuffer = !!useSRGBBuffer && this._caps.supportSRGBBuffers && (this.version > 1 || this.isWebGPU || !!noMipmap);\n    if (texture !== fallback) {\n        texture.label = rootUrl.substring(0, 60); // default label, can be overriden by the caller\n    }\n    if (!this._doNotHandleContextLost) {\n        texture._extension = forcedExtension;\n        texture._files = files;\n        texture._buffer = buffer;\n    }\n    const originalRootUrl = rootUrl;\n    if (this._transformTextureUrl && !fallback) {\n        rootUrl = this._transformTextureUrl(rootUrl);\n    }\n    const extension = forcedExtension ?? GetExtensionFromUrl(rootUrl);\n    const loaderPromise = _GetCompatibleTextureLoader(extension);\n    const localOnError = (message, exception) => {\n        // if an error was thrown during load, dispose the texture, otherwise it will stay in the cache\n        texture.dispose();\n        if (onError) {\n            onError(message, exception);\n        }\n        else if (message) {\n            Logger.Warn(message);\n        }\n    };\n    const onInternalError = (request, exception) => {\n        if (rootUrl === originalRootUrl) {\n            if (request) {\n                localOnError(request.status + \" \" + request.statusText, exception);\n            }\n        }\n        else {\n            // fall back to the original url if the transformed url fails to load\n            Logger.Warn(`Failed to load ${rootUrl}, falling back to the ${originalRootUrl}`);\n            this.createCubeTextureBase(originalRootUrl, scene, files, !!noMipmap, onLoad, localOnError, format, forcedExtension, createPolynomials, lodScale, lodOffset, texture, beforeLoadCubeDataCallback, imageHandler, useSRGBBuffer, buffer);\n        }\n    };\n    if (loaderPromise) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises, github/no-then\n        loaderPromise.then((loader) => {\n            const onLoadData = (data) => {\n                if (beforeLoadCubeDataCallback) {\n                    beforeLoadCubeDataCallback(texture, data);\n                }\n                loader.loadCubeData(data, texture, createPolynomials, onLoad, (message, exception) => {\n                    localOnError(message, exception);\n                });\n            };\n            if (buffer) {\n                onLoadData(buffer);\n            }\n            else if (files && files.length === 6) {\n                if (loader.supportCascades) {\n                    this._cascadeLoadFiles(scene, (images) => onLoadData(images.map((image) => new Uint8Array(image))), files, localOnError);\n                }\n                else {\n                    localOnError(\"Textures type does not support cascades.\");\n                }\n            }\n            else {\n                this._loadFile(rootUrl, (data) => onLoadData(new Uint8Array(data)), undefined, undefined, true, onInternalError);\n            }\n        });\n    }\n    else {\n        if (!files || files.length === 0) {\n            throw new Error(\"Cannot load cubemap because files were not defined, or the correct loader was not found.\");\n        }\n        this._cascadeLoadImgs(scene, texture, (texture, imgs) => {\n            if (imageHandler) {\n                imageHandler(texture, imgs);\n            }\n        }, files, localOnError);\n    }\n    this._internalTexturesCache.push(texture);\n    return texture;\n};\n//# sourceMappingURL=abstractEngine.cubeTexture.js.map"],"names":["AbstractEngine","prototype","_partialLoadFile","url","index","loadedFiles","onfinish","onErrorCallBack","this","_loadFile","data","_internalCount","undefined","request","exception","status","statusText","_cascadeLoadFiles","scene","files","onError","_cascadeLoadImgs","texture","mimeType","loadedImages","_partialLoadImg","tokenPendingData","RandomGUID","LoadImage","img","removePendingData","message","offlineProvider","addPendingData","createCubeTextureBase","rootUrl","noMipmap","onLoad","format","forcedExtension","createPolynomials","lodScale","lodOffset","fallback","beforeLoadCubeDataCallback","imageHandler","useSRGBBuffer","buffer","InternalTexture","isCube","generateMipMaps","_lodGenerationScale","_lodGenerationOffset","_useSRGBBuffer","_caps","supportSRGBBuffers","version","isWebGPU","label","substring","_doNotHandleContextLost","_extension","_files","_buffer","originalRootUrl","_transformTextureUrl","extension","GetExtensionFromUrl","loaderPromise","_GetCompatibleTextureLoader","localOnError","dispose","Logger","Warn","onInternalError","then","loader","onLoadData","loadCubeData","length","supportCascades","images","map","image","Uint8Array","Error","imgs","_internalTexturesCache","push"],"mappings":"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"}