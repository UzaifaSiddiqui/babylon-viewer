{"version":3,"file":"KHR_materials_unlit-Dk95NWo4.esm.min.js","sources":["../../../../../dev/loaders/dist/glTF/2.0/Extensions/KHR_materials_unlit.js"],"sourcesContent":["import { Color3 } from \"core/Maths/math.color\";\nimport { PBRMaterial } from \"core/Materials/PBR/pbrMaterial\";\nimport { GLTFLoader } from \"../glTFLoader\";\nimport { registerGLTFExtension, unregisterGLTFExtension } from \"../glTFLoaderExtensionRegistry\";\nconst NAME = \"KHR_materials_unlit\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_materials_unlit/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class KHR_materials_unlit {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        /**\n         * Defines a number that determines the order the extensions are applied.\n         */\n        this.order = 210;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    // eslint-disable-next-line no-restricted-syntax\n    loadMaterialPropertiesAsync(context, material, babylonMaterial) {\n        return GLTFLoader.LoadExtensionAsync(context, material, this.name, async () => {\n            return await this._loadUnlitPropertiesAsync(context, material, babylonMaterial);\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/promise-function-async, no-restricted-syntax\n    _loadUnlitPropertiesAsync(context, material, babylonMaterial) {\n        if (!(babylonMaterial instanceof PBRMaterial)) {\n            throw new Error(`${context}: Material type not supported`);\n        }\n        const promises = new Array();\n        babylonMaterial.unlit = true;\n        const properties = material.pbrMetallicRoughness;\n        if (properties) {\n            if (properties.baseColorFactor) {\n                babylonMaterial.albedoColor = Color3.FromArray(properties.baseColorFactor);\n                babylonMaterial.alpha = properties.baseColorFactor[3];\n            }\n            else {\n                babylonMaterial.albedoColor = Color3.White();\n            }\n            if (properties.baseColorTexture) {\n                promises.push(this._loader.loadTextureInfoAsync(`${context}/baseColorTexture`, properties.baseColorTexture, (texture) => {\n                    texture.name = `${babylonMaterial.name} (Base Color)`;\n                    babylonMaterial.albedoTexture = texture;\n                }));\n            }\n        }\n        if (material.doubleSided) {\n            babylonMaterial.backFaceCulling = false;\n            babylonMaterial.twoSidedLighting = true;\n        }\n        this._loader.loadMaterialAlphaProperties(context, material, babylonMaterial);\n        // eslint-disable-next-line github/no-then\n        return Promise.all(promises).then(() => { });\n    }\n}\nunregisterGLTFExtension(NAME);\nregisterGLTFExtension(NAME, true, (loader) => new KHR_materials_unlit(loader));\n//# sourceMappingURL=KHR_materials_unlit.js.map"],"names":["NAME","KHR_materials_unlit","constructor","loader","this","name","order","_loader","enabled","isExtensionUsed","dispose","loadMaterialPropertiesAsync","context","material","babylonMaterial","GLTFLoader","LoadExtensionAsync","async","_loadUnlitPropertiesAsync","PBRMaterial","Error","promises","Array","unlit","properties","pbrMetallicRoughness","baseColorFactor","albedoColor","Color3","FromArray","alpha","White","baseColorTexture","push","loadTextureInfoAsync","texture","albedoTexture","doubleSided","backFaceCulling","twoSidedLighting","loadMaterialAlphaProperties","Promise","all","then","unregisterGLTFExtension","registerGLTFExtension"],"mappings":"wVAIA,MAAMA,EAAO,sBAKN,MAAMC,EAIT,WAAAC,CAAYC,GAIRC,KAAKC,KAAOL,EAIZI,KAAKE,MAAQ,IACbF,KAAKG,QAAUJ,EACfC,KAAKI,QAAUJ,KAAKG,QAAQE,gBAAgBT,EACpD,CAEI,OAAAU,GACIN,KAAKG,QAAU,IACvB,CAKI,2BAAAI,CAA4BC,EAASC,EAAUC,GAC3C,OAAOC,EAAWC,mBAAmBJ,EAASC,EAAUT,KAAKC,MAAMY,eAClDb,KAAKc,0BAA0BN,EAASC,EAAUC,IAE3E,CAEI,yBAAAI,CAA0BN,EAASC,EAAUC,GACzC,KAAMA,aAA2BK,GAC7B,MAAM,IAAIC,MAAM,GAAGR,kCAEvB,MAAMS,EAAW,IAAIC,MACrBR,EAAgBS,OAAQ,EACxB,MAAMC,EAAaX,EAASY,qBAsB5B,OArBID,IACIA,EAAWE,iBACXZ,EAAgBa,YAAcC,EAAOC,UAAUL,EAAWE,iBAC1DZ,EAAgBgB,MAAQN,EAAWE,gBAAgB,IAGnDZ,EAAgBa,YAAcC,EAAOG,QAErCP,EAAWQ,kBACXX,EAASY,KAAK7B,KAAKG,QAAQ2B,qBAAqB,GAAGtB,qBAA4BY,EAAWQ,kBAAmBG,IACzGA,EAAQ9B,KAAO,GAAGS,EAAgBT,oBAClCS,EAAgBsB,cAAgBD,OAIxCtB,EAASwB,cACTvB,EAAgBwB,iBAAkB,EAClCxB,EAAgByB,kBAAmB,GAEvCnC,KAAKG,QAAQiC,4BAA4B5B,EAASC,EAAUC,GAErD2B,QAAQC,IAAIrB,GAAUsB,MAAK,QAC1C,EAEAC,EAAwB5C,GACxB6C,EAAsB7C,GAAM,GAAOG,GAAW,IAAIF,EAAoBE"}