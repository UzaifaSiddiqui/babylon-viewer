{"version":3,"file":"glTFLoaderAnimation-hdLugK1Y.esm.js","sources":["../../../../../dev/loaders/dist/glTF/2.0/glTFLoaderAnimation.js"],"sourcesContent":["import { Animation } from \"core/Animations/animation\";\nimport { Quaternion, Vector3 } from \"core/Maths/math.vector\";\nimport { SetInterpolationForKey } from \"./Extensions/objectModelMapping\";\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function getVector3(_target, source, offset, scale) {\n    return Vector3.FromArray(source, offset).scaleInPlace(scale);\n}\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function getQuaternion(_target, source, offset, scale) {\n    return Quaternion.FromArray(source, offset).scaleInPlace(scale);\n}\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function getWeights(target, source, offset, scale) {\n    const value = new Array(target._numMorphTargets);\n    for (let i = 0; i < value.length; i++) {\n        value[i] = source[offset++] * scale;\n    }\n    return value;\n}\n/** @internal */\nexport class AnimationPropertyInfo {\n    /** @internal */\n    constructor(type, name, getValue, getStride) {\n        this.type = type;\n        this.name = name;\n        this.getValue = getValue;\n        this.getStride = getStride;\n    }\n    _buildAnimation(name, fps, keys) {\n        const babylonAnimation = new Animation(name, this.name, fps, this.type);\n        babylonAnimation.setKeys(keys);\n        return babylonAnimation;\n    }\n}\n/** @internal */\nexport class TransformNodeAnimationPropertyInfo extends AnimationPropertyInfo {\n    /** @internal */\n    buildAnimations(target, name, fps, keys) {\n        const babylonAnimations = [];\n        babylonAnimations.push({ babylonAnimatable: target._babylonTransformNode, babylonAnimation: this._buildAnimation(name, fps, keys) });\n        return babylonAnimations;\n    }\n}\n/** @internal */\nexport class WeightAnimationPropertyInfo extends AnimationPropertyInfo {\n    buildAnimations(target, name, fps, keys) {\n        const babylonAnimations = [];\n        if (target._numMorphTargets) {\n            for (let targetIndex = 0; targetIndex < target._numMorphTargets; targetIndex++) {\n                const babylonAnimation = new Animation(`${name}_${targetIndex}`, this.name, fps, this.type);\n                babylonAnimation.setKeys(keys.map((key) => ({\n                    frame: key.frame,\n                    inTangent: key.inTangent ? key.inTangent[targetIndex] : undefined,\n                    value: key.value[targetIndex],\n                    outTangent: key.outTangent ? key.outTangent[targetIndex] : undefined,\n                    interpolation: key.interpolation,\n                })));\n                if (target._primitiveBabylonMeshes) {\n                    for (const babylonMesh of target._primitiveBabylonMeshes) {\n                        if (babylonMesh.morphTargetManager) {\n                            const morphTarget = babylonMesh.morphTargetManager.getTarget(targetIndex);\n                            const babylonAnimationClone = babylonAnimation.clone();\n                            morphTarget.animations.push(babylonAnimationClone);\n                            babylonAnimations.push({ babylonAnimatable: morphTarget, babylonAnimation: babylonAnimationClone });\n                        }\n                    }\n                }\n            }\n        }\n        return babylonAnimations;\n    }\n}\nSetInterpolationForKey(\"/nodes/{}/translation\", [new TransformNodeAnimationPropertyInfo(Animation.ANIMATIONTYPE_VECTOR3, \"position\", getVector3, () => 3)]);\nSetInterpolationForKey(\"/nodes/{}/rotation\", [new TransformNodeAnimationPropertyInfo(Animation.ANIMATIONTYPE_QUATERNION, \"rotationQuaternion\", getQuaternion, () => 4)]);\nSetInterpolationForKey(\"/nodes/{}/scale\", [new TransformNodeAnimationPropertyInfo(Animation.ANIMATIONTYPE_VECTOR3, \"scaling\", getVector3, () => 3)]);\nSetInterpolationForKey(\"/nodes/{}/weights\", [new WeightAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"influence\", getWeights, (target) => target._numMorphTargets)]);\n//# sourceMappingURL=glTFLoaderAnimation.js.map"],"names":[],"mappings":"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"}