{"version":3,"file":"engine.multiRender-HyXAqF9_.esm.js","sources":["../../../../../dev/core/dist/Engines/WebGPU/Extensions/engine.multiRender.js"],"sourcesContent":["import { InternalTexture } from \"../../../Materials/Textures/internalTexture\";\nimport { Logger } from \"../../../Misc/logger\";\nimport { Constants } from \"../../constants\";\nimport { WebGPUEngine } from \"../../webgpuEngine\";\nWebGPUEngine.prototype.unBindMultiColorAttachmentFramebuffer = function (rtWrapper, disableGenerateMipMaps = false, onBeforeUnbind) {\n    if (onBeforeUnbind) {\n        onBeforeUnbind();\n    }\n    this._endCurrentRenderPass();\n    if (!disableGenerateMipMaps) {\n        this.generateMipMapsMultiFramebuffer(rtWrapper);\n    }\n    this._currentRenderTarget = null;\n    this._mrtAttachments = [];\n    this._cacheRenderPipeline.setMRT([]);\n    this._cacheRenderPipeline.setMRTAttachments(this._mrtAttachments);\n};\nWebGPUEngine.prototype.createMultipleRenderTarget = function (size, options, initializeBuffers) {\n    let generateMipMaps = false;\n    let generateDepthBuffer = true;\n    let generateStencilBuffer = false;\n    let generateDepthTexture = false;\n    let depthTextureFormat = Constants.TEXTUREFORMAT_DEPTH16;\n    let textureCount = 1;\n    let samples = 1;\n    const defaultType = Constants.TEXTURETYPE_UNSIGNED_BYTE;\n    const defaultSamplingMode = Constants.TEXTURE_TRILINEAR_SAMPLINGMODE;\n    const defaultUseSRGBBuffer = false;\n    const defaultFormat = Constants.TEXTUREFORMAT_RGBA;\n    const defaultTarget = Constants.TEXTURE_2D;\n    let types = [];\n    let samplingModes = [];\n    let useSRGBBuffers = [];\n    let formats = [];\n    let targets = [];\n    let faceIndex = [];\n    let layerIndex = [];\n    let layers = [];\n    let labels = [];\n    let creationFlags = [];\n    let dontCreateTextures = false;\n    const rtWrapper = this._createHardwareRenderTargetWrapper(true, false, size);\n    if (options !== undefined) {\n        generateMipMaps = options.generateMipMaps ?? false;\n        generateDepthBuffer = options.generateDepthBuffer ?? true;\n        generateStencilBuffer = options.generateStencilBuffer ?? false;\n        generateDepthTexture = options.generateDepthTexture ?? false;\n        textureCount = options.textureCount ?? 1;\n        depthTextureFormat = options.depthTextureFormat ?? Constants.TEXTUREFORMAT_DEPTH16;\n        types = options.types || types;\n        samplingModes = options.samplingModes || samplingModes;\n        useSRGBBuffers = options.useSRGBBuffers || useSRGBBuffers;\n        formats = options.formats || formats;\n        targets = options.targetTypes || targets;\n        faceIndex = options.faceIndex || faceIndex;\n        layerIndex = options.layerIndex || layerIndex;\n        layers = options.layerCounts || layers;\n        labels = options.labels || labels;\n        creationFlags = options.creationFlags || creationFlags;\n        samples = options.samples ?? samples;\n        dontCreateTextures = options.dontCreateTextures ?? false;\n    }\n    const width = size.width ?? size;\n    const height = size.height ?? size;\n    const textures = [];\n    const attachments = [];\n    const defaultAttachments = [];\n    rtWrapper.label = options?.label ?? \"MultiRenderTargetWrapper\";\n    rtWrapper._generateDepthBuffer = generateDepthBuffer;\n    rtWrapper._generateStencilBuffer = generateStencilBuffer;\n    rtWrapper._attachments = attachments;\n    rtWrapper._defaultAttachments = defaultAttachments;\n    let depthStencilTexture = null;\n    if ((generateDepthBuffer || generateStencilBuffer || generateDepthTexture) && !dontCreateTextures) {\n        if (!generateDepthTexture) {\n            // The caller doesn't want a depth texture, so we are free to use the depth texture format we want.\n            // So, we will align with what the WebGL engine does\n            if (generateDepthBuffer && generateStencilBuffer) {\n                depthTextureFormat = Constants.TEXTUREFORMAT_DEPTH24_STENCIL8;\n            }\n            else if (generateDepthBuffer) {\n                depthTextureFormat = Constants.TEXTUREFORMAT_DEPTH32_FLOAT;\n            }\n            else {\n                depthTextureFormat = Constants.TEXTUREFORMAT_STENCIL8;\n            }\n        }\n        depthStencilTexture = rtWrapper.createDepthStencilTexture(0, false, generateStencilBuffer, 1, depthTextureFormat, rtWrapper.label + \"-DepthStencil\");\n    }\n    const mipmapsCreationOnly = options !== undefined && typeof options === \"object\" && options.createMipMaps && !generateMipMaps;\n    for (let i = 0; i < textureCount; i++) {\n        let samplingMode = samplingModes[i] || defaultSamplingMode;\n        let type = types[i] || defaultType;\n        const format = formats[i] || defaultFormat;\n        const useSRGBBuffer = (useSRGBBuffers[i] || defaultUseSRGBBuffer) && this._caps.supportSRGBBuffers;\n        const target = targets[i] || defaultTarget;\n        const layerCount = layers[i] ?? 1;\n        const creationFlag = creationFlags[i];\n        if (type === Constants.TEXTURETYPE_FLOAT && !this._caps.textureFloatLinearFiltering) {\n            // if floating point linear (FLOAT) then force to NEAREST_SAMPLINGMODE\n            samplingMode = Constants.TEXTURE_NEAREST_SAMPLINGMODE;\n        }\n        else if (type === Constants.TEXTURETYPE_HALF_FLOAT && !this._caps.textureHalfFloatLinearFiltering) {\n            // if floating point linear (HALF_FLOAT) then force to NEAREST_SAMPLINGMODE\n            samplingMode = Constants.TEXTURE_NEAREST_SAMPLINGMODE;\n        }\n        if (type === Constants.TEXTURETYPE_FLOAT && !this._caps.textureFloat) {\n            type = Constants.TEXTURETYPE_UNSIGNED_BYTE;\n            Logger.Warn(\"Float textures are not supported. Render target forced to TEXTURETYPE_UNSIGNED_BYTE type\");\n        }\n        attachments.push(i + 1);\n        defaultAttachments.push(initializeBuffers ? i + 1 : i === 0 ? 1 : 0);\n        if (target === -1 || dontCreateTextures) {\n            continue;\n        }\n        const texture = new InternalTexture(this, 6 /* InternalTextureSource.MultiRenderTarget */);\n        textures[i] = texture;\n        switch (target) {\n            case Constants.TEXTURE_CUBE_MAP:\n                texture.isCube = true;\n                break;\n            case Constants.TEXTURE_3D:\n                texture.is3D = true;\n                texture.baseDepth = texture.depth = layerCount;\n                break;\n            case Constants.TEXTURE_2D_ARRAY:\n                texture.is2DArray = true;\n                texture.baseDepth = texture.depth = layerCount;\n                break;\n        }\n        texture.baseWidth = width;\n        texture.baseHeight = height;\n        texture.width = width;\n        texture.height = height;\n        texture.isReady = true;\n        texture.samples = 1;\n        texture.generateMipMaps = generateMipMaps;\n        texture.samplingMode = samplingMode;\n        texture.type = type;\n        texture._cachedWrapU = Constants.TEXTURE_CLAMP_ADDRESSMODE;\n        texture._cachedWrapV = Constants.TEXTURE_CLAMP_ADDRESSMODE;\n        texture._useSRGBBuffer = useSRGBBuffer;\n        texture.format = format;\n        texture.label = labels[i] ?? rtWrapper.label + \"-Texture\" + i;\n        this._internalTexturesCache.push(texture);\n        if (mipmapsCreationOnly) {\n            // createGPUTextureForInternalTexture will only create a texture with mipmaps if generateMipMaps is true, as InternalTexture has no createMipMaps property, separate from generateMipMaps.\n            texture.generateMipMaps = true;\n        }\n        this._textureHelper.createGPUTextureForInternalTexture(texture, undefined, undefined, undefined, creationFlag, true);\n        if (mipmapsCreationOnly) {\n            texture.generateMipMaps = false;\n        }\n    }\n    if (depthStencilTexture) {\n        depthStencilTexture.incrementReferences();\n        textures[textureCount] = depthStencilTexture;\n        this._internalTexturesCache.push(depthStencilTexture);\n    }\n    rtWrapper.setTextures(textures);\n    rtWrapper.setLayerAndFaceIndices(layerIndex, faceIndex);\n    if (!dontCreateTextures) {\n        this.updateMultipleRenderTargetTextureSampleCount(rtWrapper, samples);\n    }\n    else {\n        rtWrapper._samples = samples;\n    }\n    return rtWrapper;\n};\nWebGPUEngine.prototype.updateMultipleRenderTargetTextureSampleCount = function (rtWrapper, samples) {\n    if (!rtWrapper || !rtWrapper.textures || rtWrapper.textures.length === 0 || rtWrapper.textures[0].samples === samples) {\n        return samples;\n    }\n    const count = rtWrapper.textures.length;\n    if (count === 0) {\n        return 1;\n    }\n    samples = Math.min(samples, this.getCaps().maxMSAASamples);\n    for (let i = 0; i < count; ++i) {\n        const texture = rtWrapper.textures[i];\n        const gpuTextureWrapper = texture._hardwareTexture;\n        gpuTextureWrapper?.releaseMSAATexture(rtWrapper.getBaseArrayLayer(i));\n    }\n    // Note that rtWrapper.textures can't have null textures, lastTextureIsDepthTexture can't be true if rtWrapper._depthStencilTexture is null\n    const lastTextureIsDepthTexture = rtWrapper._depthStencilTexture === rtWrapper.textures[count - 1];\n    for (let i = 0; i < count; ++i) {\n        const texture = rtWrapper.textures[i];\n        this._textureHelper.createMSAATexture(texture, samples, false, rtWrapper.getBaseArrayLayer(i));\n        texture.samples = samples;\n    }\n    // Note that the last texture of textures is the depth texture if the depth texture has been generated by the MRT class and so the MSAA texture\n    // will be recreated for this texture by the loop above: in that case, there's no need to create the MSAA texture for rtWrapper._depthStencilTexture\n    // because rtWrapper._depthStencilTexture is the same texture than the depth texture\n    if (rtWrapper._depthStencilTexture && !lastTextureIsDepthTexture) {\n        this._textureHelper.createMSAATexture(rtWrapper._depthStencilTexture, samples);\n        rtWrapper._depthStencilTexture.samples = samples;\n    }\n    rtWrapper._samples = samples;\n    return samples;\n};\nWebGPUEngine.prototype.generateMipMapsMultiFramebuffer = function (texture) {\n    const rtWrapper = texture;\n    if (!rtWrapper.isMulti) {\n        return;\n    }\n    const attachments = rtWrapper._attachments;\n    const count = attachments.length;\n    for (let i = 0; i < count; i++) {\n        const texture = rtWrapper.textures[i];\n        if (texture.generateMipMaps && !texture.isCube && !texture.is3D) {\n            this._generateMipmaps(texture);\n        }\n    }\n};\nWebGPUEngine.prototype.resolveMultiFramebuffer = function (_texture) {\n    throw new Error(\"resolveMultiFramebuffer is not yet implemented in WebGPU!\");\n};\nWebGPUEngine.prototype.bindAttachments = function (attachments) {\n    if (attachments.length === 0 || !this._currentRenderTarget) {\n        return;\n    }\n    this._mrtAttachments = attachments;\n    if (this._currentRenderPass) {\n        // the render pass has already been created, we need to call setMRTAttachments to update the state of the attachments\n        this._cacheRenderPipeline.setMRTAttachments(attachments);\n    }\n    else {\n        // the render pass is not created yet so we don't need to call setMRTAttachments: it will be called as part of the render pass creation (see WebGPUEngine._startRenderTargetRenderPass)\n    }\n};\nWebGPUEngine.prototype.buildTextureLayout = function (textureStatus) {\n    const result = [];\n    for (let i = 0; i < textureStatus.length; i++) {\n        if (textureStatus[i]) {\n            result.push(i + 1);\n        }\n        else {\n            result.push(0);\n        }\n    }\n    return result;\n};\nWebGPUEngine.prototype.restoreSingleAttachment = function () {\n    // not sure what to do, probably nothing... This function and restoreSingleAttachmentForRenderTarget are not called in Babylon.js so it's hard to know the use case\n};\nWebGPUEngine.prototype.restoreSingleAttachmentForRenderTarget = function () {\n    // not sure what to do, probably nothing... This function and restoreSingleAttachment are not called in Babylon.js so it's hard to know the use case\n};\n//# sourceMappingURL=engine.multiRender.js.map"],"names":[],"mappings":";;;;;;;;;;;AAIA,YAAY,CAAC,SAAS,CAAC,qCAAqC,GAAG,UAAU,SAAS,EAAE,sBAAsB,GAAG,KAAK,EAAE,cAAc,EAAE;AACpI,IAAI,IAAI,cAAc,EAAE;AACxB,QAAQ,cAAc,EAAE;AACxB;AACA,IAAI,IAAI,CAAC,qBAAqB,EAAE;AAChC,IAAI,IAAI,CAAC,sBAAsB,EAAE;AACjC,QAAQ,IAAI,CAAC,+BAA+B,CAAC,SAAS,CAAC;AACvD;AACA,IAAI,IAAI,CAAC,oBAAoB,GAAG,IAAI;AACpC,IAAI,IAAI,CAAC,eAAe,GAAG,EAAE;AAC7B,IAAI,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,EAAE,CAAC;AACxC,IAAI,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,CAAC;AACrE,CAAC;AACD,YAAY,CAAC,SAAS,CAAC,0BAA0B,GAAG,UAAU,IAAI,EAAE,OAAO,EAAE,iBAAiB,EAAE;AAChG,IAAI,IAAI,eAAe,GAAG,KAAK;AAC/B,IAAI,IAAI,mBAAmB,GAAG,IAAI;AAClC,IAAI,IAAI,qBAAqB,GAAG,KAAK;AACrC,IAAI,IAAI,oBAAoB,GAAG,KAAK;AACpC,IAAI,IAAI,kBAAkB,GAAG,SAAS,CAAC,qBAAqB;AAC5D,IAAI,IAAI,YAAY,GAAG,CAAC;AACxB,IAAI,IAAI,OAAO,GAAG,CAAC;AACnB,IAAI,MAAM,WAAW,GAAG,SAAS,CAAC,yBAAyB;AAC3D,IAAI,MAAM,mBAAmB,GAAG,SAAS,CAAC,8BAA8B;AACxE,IAAI,MAAM,oBAAoB,GAAG,KAAK;AACtC,IAAI,MAAM,aAAa,GAAG,SAAS,CAAC,kBAAkB;AACtD,IAAI,MAAM,aAAa,GAAG,SAAS,CAAC,UAAU;AAC9C,IAAI,IAAI,KAAK,GAAG,EAAE;AAClB,IAAI,IAAI,aAAa,GAAG,EAAE;AAC1B,IAAI,IAAI,cAAc,GAAG,EAAE;AAC3B,IAAI,IAAI,OAAO,GAAG,EAAE;AACpB,IAAI,IAAI,OAAO,GAAG,EAAE;AACpB,IAAI,IAAI,SAAS,GAAG,EAAE;AACtB,IAAI,IAAI,UAAU,GAAG,EAAE;AACvB,IAAI,IAAI,MAAM,GAAG,EAAE;AACnB,IAAI,IAAI,MAAM,GAAG,EAAE;AACnB,IAAI,IAAI,aAAa,GAAG,EAAE;AAC1B,IAAI,IAAI,kBAAkB,GAAG,KAAK;AAClC,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC,kCAAkC,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC;AAChF,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;AAC/B,QAAQ,eAAe,GAAG,OAAO,CAAC,eAAe,IAAI,KAAK;AAC1D,QAAQ,mBAAmB,GAAG,OAAO,CAAC,mBAAmB,IAAI,IAAI;AACjE,QAAQ,qBAAqB,GAAG,OAAO,CAAC,qBAAqB,IAAI,KAAK;AACtE,QAAQ,oBAAoB,GAAG,OAAO,CAAC,oBAAoB,IAAI,KAAK;AACpE,QAAQ,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,CAAC;AAChD,QAAQ,kBAAkB,GAAG,OAAO,CAAC,kBAAkB,IAAI,SAAS,CAAC,qBAAqB;AAC1F,QAAQ,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,KAAK;AACtC,QAAQ,aAAa,GAAG,OAAO,CAAC,aAAa,IAAI,aAAa;AAC9D,QAAQ,cAAc,GAAG,OAAO,CAAC,cAAc,IAAI,cAAc;AACjE,QAAQ,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,OAAO;AAC5C,QAAQ,OAAO,GAAG,OAAO,CAAC,WAAW,IAAI,OAAO;AAChD,QAAQ,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,SAAS;AAClD,QAAQ,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,UAAU;AACrD,QAAQ,MAAM,GAAG,OAAO,CAAC,WAAW,IAAI,MAAM;AAC9C,QAAQ,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,MAAM;AACzC,QAAQ,aAAa,GAAG,OAAO,CAAC,aAAa,IAAI,aAAa;AAC9D,QAAQ,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,OAAO;AAC5C,QAAQ,kBAAkB,GAAG,OAAO,CAAC,kBAAkB,IAAI,KAAK;AAChE;AACA,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI;AACpC,IAAI,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI;AACtC,IAAI,MAAM,QAAQ,GAAG,EAAE;AACvB,IAAI,MAAM,WAAW,GAAG,EAAE;AAC1B,IAAI,MAAM,kBAAkB,GAAG,EAAE;AACjC,IAAI,SAAS,CAAC,KAAK,GAAG,OAAO,EAAE,KAAK,IAAI,0BAA0B;AAClE,IAAI,SAAS,CAAC,oBAAoB,GAAG,mBAAmB;AACxD,IAAI,SAAS,CAAC,sBAAsB,GAAG,qBAAqB;AAC5D,IAAI,SAAS,CAAC,YAAY,GAAG,WAAW;AACxC,IAAI,SAAS,CAAC,mBAAmB,GAAG,kBAAkB;AACtD,IAAI,IAAI,mBAAmB,GAAG,IAAI;AAClC,IAAI,IAAI,CAAC,mBAAmB,IAAI,qBAAqB,IAAI,oBAAoB,KAAK,CAAC,kBAAkB,EAAE;AACvG,QAAQ,IAAI,CAAC,oBAAoB,EAAE;AACnC;AACA;AACA,YAAY,IAAI,mBAAmB,IAAI,qBAAqB,EAAE;AAC9D,gBAAgB,kBAAkB,GAAG,SAAS,CAAC,8BAA8B;AAC7E;AACA,iBAAiB,IAAI,mBAAmB,EAAE;AAC1C,gBAAgB,kBAAkB,GAAG,SAAS,CAAC,2BAA2B;AAC1E;AACA,iBAAiB;AACjB,gBAAgB,kBAAkB,GAAG,SAAS,CAAC,sBAAsB;AACrE;AACA;AACA,QAAQ,mBAAmB,GAAG,SAAS,CAAC,yBAAyB,CAAC,CAAC,EAAE,KAAK,EAAE,qBAAqB,EAAE,CAAC,EAAE,kBAAkB,EAAE,SAAS,CAAC,KAAK,GAAG,eAAe,CAAC;AAC5J;AACA,IAAI,MAAM,mBAAmB,GAAG,OAAO,KAAK,SAAS,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,CAAC,aAAa,IAAI,CAAC,eAAe;AACjI,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,CAAC,EAAE,EAAE;AAC3C,QAAQ,IAAI,YAAY,GAAG,aAAa,CAAC,CAAC,CAAC,IAAI,mBAAmB;AAClE,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,WAAW;AAC1C,QAAQ,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,aAAa;AAClD,QAAQ,MAAM,aAAa,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,oBAAoB,KAAK,IAAI,CAAC,KAAK,CAAC,kBAAkB;AAC1G,QAAQ,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,aAAa;AAClD,QAAQ,MAAM,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;AACzC,QAAQ,MAAM,YAAY,GAAG,aAAa,CAAC,CAAC,CAAC;AAC7C,QAAQ,IAAI,IAAI,KAAK,SAAS,CAAC,iBAAiB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,2BAA2B,EAAE;AAC7F;AACA,YAAY,YAAY,GAAG,SAAS,CAAC,4BAA4B;AACjE;AACA,aAAa,IAAI,IAAI,KAAK,SAAS,CAAC,sBAAsB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,+BAA+B,EAAE;AAC3G;AACA,YAAY,YAAY,GAAG,SAAS,CAAC,4BAA4B;AACjE;AACA,QAAQ,IAAI,IAAI,KAAK,SAAS,CAAC,iBAAiB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;AAC9E,YAAY,IAAI,GAAG,SAAS,CAAC,yBAAyB;AACtD,YAAY,MAAM,CAAC,IAAI,CAAC,0FAA0F,CAAC;AACnH;AACA,QAAQ,WAAW,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AAC/B,QAAQ,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC5E,QAAQ,IAAI,MAAM,KAAK,EAAE,IAAI,kBAAkB,EAAE;AACjD,YAAY;AACZ;AACA,QAAQ,MAAM,OAAO,GAAG,IAAI,eAAe,CAAC,IAAI,EAAE,CAAC,+CAA+C;AAClG,QAAQ,QAAQ,CAAC,CAAC,CAAC,GAAG,OAAO;AAC7B,QAAQ,QAAQ,MAAM;AACtB,YAAY,KAAK,SAAS,CAAC,gBAAgB;AAC3C,gBAAgB,OAAO,CAAC,MAAM,GAAG,IAAI;AACrC,gBAAgB;AAChB,YAAY,KAAK,SAAS,CAAC,UAAU;AACrC,gBAAgB,OAAO,CAAC,IAAI,GAAG,IAAI;AACnC,gBAAgB,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,KAAK,GAAG,UAAU;AAC9D,gBAAgB;AAChB,YAAY,KAAK,SAAS,CAAC,gBAAgB;AAC3C,gBAAgB,OAAO,CAAC,SAAS,GAAG,IAAI;AACxC,gBAAgB,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,KAAK,GAAG,UAAU;AAC9D,gBAAgB;AAChB;AACA,QAAQ,OAAO,CAAC,SAAS,GAAG,KAAK;AACjC,QAAQ,OAAO,CAAC,UAAU,GAAG,MAAM;AACnC,QAAQ,OAAO,CAAC,KAAK,GAAG,KAAK;AAC7B,QAAQ,OAAO,CAAC,MAAM,GAAG,MAAM;AAC/B,QAAQ,OAAO,CAAC,OAAO,GAAG,IAAI;AAC9B,QAAQ,OAAO,CAAC,OAAO,GAAG,CAAC;AAC3B,QAAQ,OAAO,CAAC,eAAe,GAAG,eAAe;AACjD,QAAQ,OAAO,CAAC,YAAY,GAAG,YAAY;AAC3C,QAAQ,OAAO,CAAC,IAAI,GAAG,IAAI;AAC3B,QAAQ,OAAO,CAAC,YAAY,GAAG,SAAS,CAAC,yBAAyB;AAClE,QAAQ,OAAO,CAAC,YAAY,GAAG,SAAS,CAAC,yBAAyB;AAClE,QAAQ,OAAO,CAAC,cAAc,GAAG,aAAa;AAC9C,QAAQ,OAAO,CAAC,MAAM,GAAG,MAAM;AAC/B,QAAQ,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,KAAK,GAAG,UAAU,GAAG,CAAC;AACrE,QAAQ,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,OAAO,CAAC;AACjD,QAAQ,IAAI,mBAAmB,EAAE;AACjC;AACA,YAAY,OAAO,CAAC,eAAe,GAAG,IAAI;AAC1C;AACA,QAAQ,IAAI,CAAC,cAAc,CAAC,kCAAkC,CAAC,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,YAAY,EAAE,IAAI,CAAC;AAC5H,QAAQ,IAAI,mBAAmB,EAAE;AACjC,YAAY,OAAO,CAAC,eAAe,GAAG,KAAK;AAC3C;AACA;AACA,IAAI,IAAI,mBAAmB,EAAE;AAC7B,QAAQ,mBAAmB,CAAC,mBAAmB,EAAE;AACjD,QAAQ,QAAQ,CAAC,YAAY,CAAC,GAAG,mBAAmB;AACpD,QAAQ,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,mBAAmB,CAAC;AAC7D;AACA,IAAI,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC;AACnC,IAAI,SAAS,CAAC,sBAAsB,CAAC,UAAU,EAAE,SAAS,CAAC;AAC3D,IAAI,IAAI,CAAC,kBAAkB,EAAE;AAC7B,QAAQ,IAAI,CAAC,4CAA4C,CAAC,SAAS,EAAE,OAAO,CAAC;AAC7E;AACA,SAAS;AACT,QAAQ,SAAS,CAAC,QAAQ,GAAG,OAAO;AACpC;AACA,IAAI,OAAO,SAAS;AACpB,CAAC;AACD,YAAY,CAAC,SAAS,CAAC,4CAA4C,GAAG,UAAU,SAAS,EAAE,OAAO,EAAE;AACpG,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,QAAQ,IAAI,SAAS,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,OAAO,EAAE;AAC3H,QAAQ,OAAO,OAAO;AACtB;AACA,IAAI,MAAM,KAAK,GAAG,SAAS,CAAC,QAAQ,CAAC,MAAM;AAC3C,IAAI,IAAI,KAAK,KAAK,CAAC,EAAE;AACrB,QAAQ,OAAO,CAAC;AAChB;AACA,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,cAAc,CAAC;AAC9D,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,EAAE,CAAC,EAAE;AACpC,QAAQ,MAAM,OAAO,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC7C,QAAQ,MAAM,iBAAiB,GAAG,OAAO,CAAC,gBAAgB;AAC1D,QAAQ,iBAAiB,EAAE,kBAAkB,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;AAC7E;AACA;AACA,IAAI,MAAM,yBAAyB,GAAG,SAAS,CAAC,oBAAoB,KAAK,SAAS,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC;AACtG,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,EAAE,CAAC,EAAE;AACpC,QAAQ,MAAM,OAAO,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC7C,QAAQ,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;AACtG,QAAQ,OAAO,CAAC,OAAO,GAAG,OAAO;AACjC;AACA;AACA;AACA;AACA,IAAI,IAAI,SAAS,CAAC,oBAAoB,IAAI,CAAC,yBAAyB,EAAE;AACtE,QAAQ,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,SAAS,CAAC,oBAAoB,EAAE,OAAO,CAAC;AACtF,QAAQ,SAAS,CAAC,oBAAoB,CAAC,OAAO,GAAG,OAAO;AACxD;AACA,IAAI,SAAS,CAAC,QAAQ,GAAG,OAAO;AAChC,IAAI,OAAO,OAAO;AAClB,CAAC;AACD,YAAY,CAAC,SAAS,CAAC,+BAA+B,GAAG,UAAU,OAAO,EAAE;AAC5E,IAAI,MAAM,SAAS,GAAG,OAAO;AAC7B,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;AAC5B,QAAQ;AACR;AACA,IAAI,MAAM,WAAW,GAAG,SAAS,CAAC,YAAY;AAC9C,IAAI,MAAM,KAAK,GAAG,WAAW,CAAC,MAAM;AACpC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;AACpC,QAAQ,MAAM,OAAO,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC7C,QAAQ,IAAI,OAAO,CAAC,eAAe,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;AACzE,YAAY,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC;AAC1C;AACA;AACA,CAAC;AACD,YAAY,CAAC,SAAS,CAAC,uBAAuB,GAAG,UAAU,QAAQ,EAAE;AACrE,IAAI,MAAM,IAAI,KAAK,CAAC,2DAA2D,CAAC;AAChF,CAAC;AACD,YAAY,CAAC,SAAS,CAAC,eAAe,GAAG,UAAU,WAAW,EAAE;AAChE,IAAI,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE;AAChE,QAAQ;AACR;AACA,IAAI,IAAI,CAAC,eAAe,GAAG,WAAW;AACtC,IAAI,IAAI,IAAI,CAAC,kBAAkB,EAAE;AACjC;AACA,QAAQ,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,WAAW,CAAC;AAChE;AAIA,CAAC;AACD,YAAY,CAAC,SAAS,CAAC,kBAAkB,GAAG,UAAU,aAAa,EAAE;AACrE,IAAI,MAAM,MAAM,GAAG,EAAE;AACrB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnD,QAAQ,IAAI,aAAa,CAAC,CAAC,CAAC,EAAE;AAC9B,YAAY,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AAC9B;AACA,aAAa;AACb,YAAY,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAC1B;AACA;AACA,IAAI,OAAO,MAAM;AACjB,CAAC;AACD,YAAY,CAAC,SAAS,CAAC,uBAAuB,GAAG,YAAY;AAC7D;AACA,CAAC;AACD,YAAY,CAAC,SAAS,CAAC,sCAAsC,GAAG,YAAY;AAC5E;AACA,CAAC"}