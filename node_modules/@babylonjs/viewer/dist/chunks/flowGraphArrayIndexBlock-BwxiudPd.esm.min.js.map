{"version":3,"file":"flowGraphArrayIndexBlock-BwxiudPd.esm.min.js","sources":["../../../../../dev/core/dist/FlowGraph/Blocks/Data/Utils/flowGraphArrayIndexBlock.js"],"sourcesContent":["import { FlowGraphBlock } from \"core/FlowGraph/flowGraphBlock\";\nimport { RichTypeAny } from \"core/FlowGraph/flowGraphRichTypes\";\nimport { RegisterClass } from \"core/Misc/typeStore\";\nimport { FlowGraphInteger } from \"core/FlowGraph/CustomTypes/flowGraphInteger\";\nimport { getNumericValue } from \"core/FlowGraph/utils\";\n/**\n * This simple Util block takes an array as input and selects a single element from it.\n */\nexport class FlowGraphArrayIndexBlock extends FlowGraphBlock {\n    /**\n     * Construct a FlowGraphArrayIndexBlock.\n     * @param config construction parameters\n     */\n    constructor(config) {\n        super(config);\n        this.config = config;\n        this.array = this.registerDataInput(\"array\", RichTypeAny);\n        this.index = this.registerDataInput(\"index\", RichTypeAny, new FlowGraphInteger(-1));\n        this.value = this.registerDataOutput(\"value\", RichTypeAny);\n    }\n    /**\n     * @internal\n     */\n    _updateOutputs(context) {\n        const array = this.array.getValue(context);\n        const index = getNumericValue(this.index.getValue(context));\n        if (array && index >= 0 && index < array.length) {\n            this.value.setValue(array[index], context);\n        }\n        else {\n            this.value.setValue(null, context);\n        }\n    }\n    /**\n     * Serializes this block\n     * @param serializationObject the object to serialize to\n     */\n    serialize(serializationObject) {\n        super.serialize(serializationObject);\n    }\n    getClassName() {\n        return \"FlowGraphArrayIndexBlock\" /* FlowGraphBlockNames.ArrayIndex */;\n    }\n}\nRegisterClass(\"FlowGraphArrayIndexBlock\" /* FlowGraphBlockNames.ArrayIndex */, FlowGraphArrayIndexBlock);\n//# sourceMappingURL=flowGraphArrayIndexBlock.js.map"],"names":["FlowGraphArrayIndexBlock","FlowGraphBlock","constructor","config","super","this","array","registerDataInput","RichTypeAny","index","FlowGraphInteger","value","registerDataOutput","_updateOutputs","context","getValue","getNumericValue","length","setValue","serialize","serializationObject","getClassName","RegisterClass"],"mappings":"uOAQO,MAAMA,UAAiCC,EAK1C,WAAAC,CAAYC,GACRC,MAAMD,GACNE,KAAKF,OAASA,EACdE,KAAKC,MAAQD,KAAKE,kBAAkB,QAASC,GAC7CH,KAAKI,MAAQJ,KAAKE,kBAAkB,QAASC,EAAa,IAAIE,GAAiB,IAC/EL,KAAKM,MAAQN,KAAKO,mBAAmB,QAASJ,EACtD,CAII,cAAAK,CAAeC,GACX,MAAMR,EAAQD,KAAKC,MAAMS,SAASD,GAC5BL,EAAQO,EAAgBX,KAAKI,MAAMM,SAASD,IAC9CR,GAASG,GAAS,GAAKA,EAAQH,EAAMW,OACrCZ,KAAKM,MAAMO,SAASZ,EAAMG,GAAQK,GAGlCT,KAAKM,MAAMO,SAAS,KAAMJ,EAEtC,CAKI,SAAAK,CAAUC,GACNhB,MAAMe,UAAUC,EACxB,CACI,YAAAC,GACI,MAAO,0BACf,EAEAC,EAAc,2BAAiEtB"}