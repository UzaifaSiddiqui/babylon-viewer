{"version":3,"file":"flowGraphForLoopBlock-ByojbEIp.esm.min.js","sources":["../../../../../dev/core/dist/FlowGraph/Blocks/Execution/ControlFlow/flowGraphForLoopBlock.js"],"sourcesContent":["import { FlowGraphExecutionBlockWithOutSignal } from \"core/FlowGraph/flowGraphExecutionBlockWithOutSignal\";\nimport { RichTypeAny, RichTypeFlowGraphInteger, RichTypeNumber } from \"../../../flowGraphRichTypes\";\nimport { RegisterClass } from \"../../../../Misc/typeStore\";\nimport { getNumericValue } from \"core/FlowGraph/utils\";\nimport { FlowGraphInteger } from \"core/FlowGraph/CustomTypes/flowGraphInteger\";\n/**\n * Block that executes an action in a loop.\n */\nexport class FlowGraphForLoopBlock extends FlowGraphExecutionBlockWithOutSignal {\n    constructor(config) {\n        super(config);\n        this.startIndex = this.registerDataInput(\"startIndex\", RichTypeAny, 0);\n        this.endIndex = this.registerDataInput(\"endIndex\", RichTypeAny);\n        this.step = this.registerDataInput(\"step\", RichTypeNumber, 1);\n        this.index = this.registerDataOutput(\"index\", RichTypeFlowGraphInteger, new FlowGraphInteger(getNumericValue(config?.initialIndex ?? 0)));\n        this.executionFlow = this._registerSignalOutput(\"executionFlow\");\n        this.completed = this._registerSignalOutput(\"completed\");\n        this._unregisterSignalOutput(\"out\");\n    }\n    /**\n     * @internal\n     */\n    _execute(context) {\n        const index = getNumericValue(this.startIndex.getValue(context));\n        const step = this.step.getValue(context);\n        let endIndex = getNumericValue(this.endIndex.getValue(context));\n        for (let i = index; i < endIndex; i += step) {\n            this.index.setValue(new FlowGraphInteger(i), context);\n            this.executionFlow._activateSignal(context);\n            endIndex = getNumericValue(this.endIndex.getValue(context));\n            if (i > FlowGraphForLoopBlock.MaxLoopIterations * step) {\n                break;\n            }\n        }\n        if (this.config?.incrementIndexWhenLoopDone) {\n            this.index.setValue(new FlowGraphInteger(getNumericValue(this.index.getValue(context)) + step), context);\n        }\n        this.completed._activateSignal(context);\n    }\n    /**\n     * @returns class name of the block.\n     */\n    getClassName() {\n        return \"FlowGraphForLoopBlock\" /* FlowGraphBlockNames.ForLoop */;\n    }\n}\n/**\n * The maximum number of iterations allowed for the loop.\n * If the loop exceeds this number, it will stop. This number is configurable to avoid infinite loops.\n */\nFlowGraphForLoopBlock.MaxLoopIterations = 1000;\nRegisterClass(\"FlowGraphForLoopBlock\" /* FlowGraphBlockNames.ForLoop */, FlowGraphForLoopBlock);\n//# sourceMappingURL=flowGraphForLoopBlock.js.map"],"names":["FlowGraphForLoopBlock","FlowGraphExecutionBlockWithOutSignal","constructor","config","super","this","startIndex","registerDataInput","RichTypeAny","endIndex","step","RichTypeNumber","index","registerDataOutput","RichTypeFlowGraphInteger","FlowGraphInteger","getNumericValue","initialIndex","executionFlow","_registerSignalOutput","completed","_unregisterSignalOutput","_execute","context","getValue","i","setValue","_activateSignal","MaxLoopIterations","incrementIndexWhenLoopDone","getClassName","RegisterClass"],"mappings":"qPAQO,MAAMA,UAA8BC,EACvC,WAAAC,CAAYC,GACRC,MAAMD,GACNE,KAAKC,WAAaD,KAAKE,kBAAkB,aAAcC,EAAa,GACpEH,KAAKI,SAAWJ,KAAKE,kBAAkB,WAAYC,GACnDH,KAAKK,KAAOL,KAAKE,kBAAkB,OAAQI,EAAgB,GAC3DN,KAAKO,MAAQP,KAAKQ,mBAAmB,QAASC,EAA0B,IAAIC,EAAiBC,EAAgBb,GAAQc,cAAgB,KACrIZ,KAAKa,cAAgBb,KAAKc,sBAAsB,iBAChDd,KAAKe,UAAYf,KAAKc,sBAAsB,aAC5Cd,KAAKgB,wBAAwB,MACrC,CAII,QAAAC,CAASC,GACL,MAAMX,EAAQI,EAAgBX,KAAKC,WAAWkB,SAASD,IACjDb,EAAOL,KAAKK,KAAKc,SAASD,GAChC,IAAId,EAAWO,EAAgBX,KAAKI,SAASe,SAASD,IACtD,IAAK,IAAIE,EAAIb,EAAOa,EAAIhB,IACpBJ,KAAKO,MAAMc,SAAS,IAAIX,EAAiBU,GAAIF,GAC7ClB,KAAKa,cAAcS,gBAAgBJ,GACnCd,EAAWO,EAAgBX,KAAKI,SAASe,SAASD,MAC9CE,EAAIzB,EAAsB4B,kBAAoBlB,IAJpBe,GAAKf,GAQnCL,KAAKF,QAAQ0B,4BACbxB,KAAKO,MAAMc,SAAS,IAAIX,EAAiBC,EAAgBX,KAAKO,MAAMY,SAASD,IAAYb,GAAOa,GAEpGlB,KAAKe,UAAUO,gBAAgBJ,EACvC,CAII,YAAAO,GACI,MAAO,uBACf,EAMA9B,EAAsB4B,kBAAoB,IAC1CG,EAAc,wBAA2D/B"}