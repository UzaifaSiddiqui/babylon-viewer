{"version":3,"file":"discBuilder-Chok7I6c.esm.js","sources":["../../../../../dev/core/dist/Meshes/Builders/discBuilder.js"],"sourcesContent":["import { Mesh } from \"../mesh\";\nimport { VertexData } from \"../mesh.vertexData\";\nimport { useOpenGLOrientationForUV } from \"../../Compat/compatibilityOptions\";\n/**\n * Creates the VertexData of the Disc or regular Polygon\n * @param options an object used to set the following optional parameters for the disc, required but can be empty\n * * radius the radius of the disc, optional default 0.5\n * * tessellation the number of polygon sides, optional, default 64\n * * arc a number from 0 to 1, to create an unclosed polygon based on the fraction of the circumference given by the arc value, optional, default 1\n * * sideOrientation optional and takes the values : Mesh.FRONTSIDE (default), Mesh.BACKSIDE or Mesh.DOUBLESIDE\n * * frontUvs only usable when you create a double-sided mesh, used to choose what parts of the texture image to crop and apply on the front side, optional, default vector4 (0, 0, 1, 1)\n * * backUVs only usable when you create a double-sided mesh, used to choose what parts of the texture image to crop and apply on the back side, optional, default vector4 (0, 0, 1, 1)\n * @returns the VertexData of the box\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function CreateDiscVertexData(options) {\n    const positions = [];\n    const indices = [];\n    const normals = [];\n    const uvs = [];\n    const radius = options.radius || 0.5;\n    const tessellation = options.tessellation || 64;\n    const arc = options.arc && (options.arc <= 0 || options.arc > 1) ? 1.0 : options.arc || 1.0;\n    const sideOrientation = options.sideOrientation === 0 ? 0 : options.sideOrientation || VertexData.DEFAULTSIDE;\n    // positions and uvs\n    positions.push(0, 0, 0); // disc center first\n    uvs.push(0.5, 0.5);\n    const theta = Math.PI * 2 * arc;\n    const step = arc === 1 ? theta / tessellation : theta / (tessellation - 1);\n    let a = 0;\n    for (let t = 0; t < tessellation; t++) {\n        const x = Math.cos(a);\n        const y = Math.sin(a);\n        const u = (x + 1) / 2;\n        const v = (1 - y) / 2;\n        positions.push(radius * x, radius * y, 0);\n        uvs.push(u, useOpenGLOrientationForUV ? 1 - v : v);\n        a += step;\n    }\n    if (arc === 1) {\n        positions.push(positions[3], positions[4], positions[5]); // close the circle\n        uvs.push(uvs[2], useOpenGLOrientationForUV ? 1 - uvs[3] : uvs[3]);\n    }\n    //indices\n    const vertexNb = positions.length / 3;\n    for (let i = 1; i < vertexNb - 1; i++) {\n        indices.push(i + 1, 0, i);\n    }\n    // result\n    VertexData.ComputeNormals(positions, indices, normals);\n    VertexData._ComputeSides(sideOrientation, positions, indices, normals, uvs, options.frontUVs, options.backUVs);\n    const vertexData = new VertexData();\n    vertexData.indices = indices;\n    vertexData.positions = positions;\n    vertexData.normals = normals;\n    vertexData.uvs = uvs;\n    return vertexData;\n}\n/**\n * Creates a plane polygonal mesh.  By default, this is a disc\n * * The parameter `radius` sets the radius size (float) of the polygon (default 0.5)\n * * The parameter `tessellation` sets the number of polygon sides (positive integer, default 64). So a tessellation valued to 3 will build a triangle, to 4 a square, etc\n * * You can create an unclosed polygon with the parameter `arc` (positive float, default 1), valued between 0 and 1, what is the ratio of the circumference : 2 x PI x ratio\n * * You can also set the mesh side orientation with the values : BABYLON.Mesh.FRONTSIDE (default), BABYLON.Mesh.BACKSIDE or BABYLON.Mesh.DOUBLESIDE\n * * If you create a double-sided mesh, you can choose what parts of the texture image to crop and stick respectively on the front and the back sides with the parameters `frontUVs` and `backUVs` (Vector4). Detail here : https://doc.babylonjs.com/features/featuresDeepDive/mesh/creation/set#side-orientation\n * * The mesh can be set to updatable with the boolean parameter `updatable` (default false) if its internal geometry is supposed to change once created\n * @param name defines the name of the mesh\n * @param options defines the options used to create the mesh\n * @param scene defines the hosting scene\n * @returns the plane polygonal mesh\n * @see https://doc.babylonjs.com/features/featuresDeepDive/mesh/creation/set#disc-or-regular-polygon\n */\nexport function CreateDisc(name, options = {}, scene = null) {\n    const disc = new Mesh(name, scene);\n    options.sideOrientation = Mesh._GetDefaultSideOrientation(options.sideOrientation);\n    disc._originalBuilderSideOrientation = options.sideOrientation;\n    const vertexData = CreateDiscVertexData(options);\n    vertexData.applyToMesh(disc, options.updatable);\n    return disc;\n}\n/**\n * Class containing static functions to help procedurally build meshes\n * @deprecated please use CreateDisc directly\n */\nexport const DiscBuilder = {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    CreateDisc,\n};\nVertexData.CreateDisc = CreateDiscVertexData;\nMesh.CreateDisc = (name, radius, tessellation, scene = null, updatable, sideOrientation) => {\n    const options = {\n        radius,\n        tessellation,\n        sideOrientation,\n        updatable,\n    };\n    return CreateDisc(name, options, scene);\n};\n//# sourceMappingURL=discBuilder.js.map"],"names":[],"mappings":";;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,oBAAoB,CAAC,OAAO,EAAE;AAC9C,IAAI,MAAM,SAAS,GAAG,EAAE;AACxB,IAAI,MAAM,OAAO,GAAG,EAAE;AACtB,IAAI,MAAM,OAAO,GAAG,EAAE;AACtB,IAAI,MAAM,GAAG,GAAG,EAAE;AAClB,IAAI,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,GAAG;AACxC,IAAI,MAAM,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,EAAE;AACnD,IAAI,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,OAAO,CAAC,GAAG,IAAI,GAAG;AAC/F,IAAI,MAAM,eAAe,GAAG,OAAO,CAAC,eAAe,KAAK,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,eAAe,IAAI,UAAU,CAAC,WAAW;AACjH;AACA,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC5B,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AACtB,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG;AACnC,IAAI,MAAM,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,KAAK,GAAG,YAAY,GAAG,KAAK,IAAI,YAAY,GAAG,CAAC,CAAC;AAC9E,IAAI,IAAI,CAAC,GAAG,CAAC;AACb,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,CAAC,EAAE,EAAE;AAC3C,QAAQ,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7B,QAAQ,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7B,QAAQ,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;AAC7B,QAAQ,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;AAC7B,QAAQ,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC;AACjD,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,EAAsC,CAAC,CAAC;AAC1D,QAAQ,CAAC,IAAI,IAAI;AACjB;AACA,IAAI,IAAI,GAAG,KAAK,CAAC,EAAE;AACnB,QAAQ,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,QAAQ,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAA2C,GAAG,CAAC,CAAC,CAAC,CAAC;AACzE;AACA;AACA,IAAI,MAAM,QAAQ,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC;AACzC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC3C,QAAQ,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACjC;AACA;AACA,IAAI,UAAU,CAAC,cAAc,CAAC,SAAS,EAAE,OAAO,EAAE,OAAO,CAAC;AAC1D,IAAI,UAAU,CAAC,aAAa,CAAC,eAAe,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,OAAO,CAAC;AAClH,IAAI,MAAM,UAAU,GAAG,IAAI,UAAU,EAAE;AACvC,IAAI,UAAU,CAAC,OAAO,GAAG,OAAO;AAChC,IAAI,UAAU,CAAC,SAAS,GAAG,SAAS;AACpC,IAAI,UAAU,CAAC,OAAO,GAAG,OAAO;AAChC,IAAI,UAAU,CAAC,GAAG,GAAG,GAAG;AACxB,IAAI,OAAO,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,UAAU,CAAC,IAAI,EAAE,OAAO,GAAG,EAAE,EAAE,KAAK,GAAG,IAAI,EAAE;AAC7D,IAAI,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;AACtC,IAAI,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,eAAe,CAAC;AACtF,IAAI,IAAI,CAAC,+BAA+B,GAAG,OAAO,CAAC,eAAe;AAClE,IAAI,MAAM,UAAU,GAAG,oBAAoB,CAAC,OAAO,CAAC;AACpD,IAAI,UAAU,CAAC,WAAW,CAAC,IAAI,EAAE,OAAO,CAAC,SAAS,CAAC;AACnD,IAAI,OAAO,IAAI;AACf;AACA;AACA;AACA;AACA;AACY,MAAC,WAAW,GAAG;AAC3B;AACA,IAAI,UAAU;AACd;AACA,UAAU,CAAC,UAAU,GAAG,oBAAoB;AAC5C,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,EAAE,MAAM,EAAE,YAAY,EAAE,KAAK,GAAG,IAAI,EAAE,SAAS,EAAE,eAAe,KAAK;AAC5F,IAAI,MAAM,OAAO,GAAG;AACpB,QAAQ,MAAM;AACd,QAAQ,YAAY;AACpB,QAAQ,eAAe;AACvB,QAAQ,SAAS;AACjB,KAAK;AACL,IAAI,OAAO,UAAU,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC;AAC3C,CAAC;;;;"}