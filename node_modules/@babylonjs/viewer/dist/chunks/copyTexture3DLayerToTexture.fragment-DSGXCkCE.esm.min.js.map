{"version":3,"file":"copyTexture3DLayerToTexture.fragment-DSGXCkCE.esm.min.js","sources":["../../../../../dev/core/dist/ShadersWGSL/copyTexture3DLayerToTexture.fragment.js"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\nconst name = \"copyTexture3DLayerToTexturePixelShader\";\nconst shader = `var textureSampler: texture_3d<f32>;uniform layerNum: i32;varying vUV: vec2f;@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {let coord=vec3f(vec2f(input.vUV.x,input.vUV.y)*vec2f(textureDimensions(textureSampler,0).xy),f32(uniforms.layerNum));let color=textureLoad(textureSampler,vec3i(coord),0).rgb;fragmentOutputs.color= vec4f(color,1);}`;\n// Sideeffect\nif (!ShaderStore.ShadersStoreWGSL[name]) {\n    ShaderStore.ShadersStoreWGSL[name] = shader;\n}\n/** @internal */\nexport const copyTexture3DLayerToTexturePixelShaderWGSL = { name, shader };\n//# sourceMappingURL=copyTexture3DLayerToTexture.fragment.js.map"],"names":["name","ShaderStore","ShadersStoreWGSL"],"mappings":"gDAEA,MAAMA,EAAO,yCAIRC,EAAYC,iBAAiBF,KAC9BC,EAAYC,iBAAiBF,GAJlB"}