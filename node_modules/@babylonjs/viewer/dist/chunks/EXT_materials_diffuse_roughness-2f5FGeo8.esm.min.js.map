{"version":3,"file":"EXT_materials_diffuse_roughness-2f5FGeo8.esm.min.js","sources":["../../../../../dev/loaders/dist/glTF/2.0/Extensions/EXT_materials_diffuse_roughness.js"],"sourcesContent":["import { PBRMaterial } from \"core/Materials/PBR/pbrMaterial\";\nimport { GLTFLoader } from \"../glTFLoader\";\nimport { registerGLTFExtension, unregisterGLTFExtension } from \"../glTFLoaderExtensionRegistry\";\nimport { Constants } from \"core/Engines/constants\";\nconst NAME = \"EXT_materials_diffuse_roughness\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/fdee35425ae560ea378092e38977216d63a094ec/extensions/2.0/Khronos/EXT_materials_diffuse_roughness/README.md)\n * @experimental\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class EXT_materials_diffuse_roughness {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        /**\n         * Defines a number that determines the order the extensions are applied.\n         */\n        this.order = 190;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    // eslint-disable-next-line @typescript-eslint/promise-function-async, no-restricted-syntax\n    loadMaterialPropertiesAsync(context, material, babylonMaterial) {\n        return GLTFLoader.LoadExtensionAsync(context, material, this.name, async (extensionContext, extension) => {\n            const promises = new Array();\n            promises.push(this._loader.loadMaterialPropertiesAsync(context, material, babylonMaterial));\n            promises.push(this._loadDiffuseRoughnessPropertiesAsync(extensionContext, extension, babylonMaterial));\n            // eslint-disable-next-line github/no-then\n            return await Promise.all(promises).then(() => { });\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/promise-function-async, no-restricted-syntax\n    _loadDiffuseRoughnessPropertiesAsync(context, properties, babylonMaterial) {\n        if (!(babylonMaterial instanceof PBRMaterial)) {\n            throw new Error(`${context}: Material type not supported`);\n        }\n        const promises = new Array();\n        babylonMaterial.brdf.baseDiffuseModel = Constants.MATERIAL_DIFFUSE_MODEL_E_OREN_NAYAR;\n        if (properties.diffuseRoughnessFactor != undefined) {\n            babylonMaterial.baseDiffuseRoughness = properties.diffuseRoughnessFactor;\n        }\n        else {\n            babylonMaterial.baseDiffuseRoughness = 0;\n        }\n        if (properties.diffuseRoughnessTexture) {\n            promises.push(this._loader.loadTextureInfoAsync(`${context}/diffuseRoughnessTexture`, properties.diffuseRoughnessTexture, (texture) => {\n                texture.name = `${babylonMaterial.name} (Diffuse Roughness)`;\n                babylonMaterial.baseDiffuseRoughnessTexture = texture;\n            }));\n        }\n        // eslint-disable-next-line github/no-then\n        return Promise.all(promises).then(() => { });\n    }\n}\nunregisterGLTFExtension(NAME);\nregisterGLTFExtension(NAME, true, (loader) => new EXT_materials_diffuse_roughness(loader));\n//# sourceMappingURL=EXT_materials_diffuse_roughness.js.map"],"names":["NAME","EXT_materials_diffuse_roughness","constructor","loader","this","name","order","_loader","enabled","isExtensionUsed","dispose","loadMaterialPropertiesAsync","context","material","babylonMaterial","GLTFLoader","LoadExtensionAsync","async","extensionContext","extension","promises","Array","push","_loadDiffuseRoughnessPropertiesAsync","Promise","all","then","properties","PBRMaterial","Error","brdf","baseDiffuseModel","Constants","MATERIAL_DIFFUSE_MODEL_E_OREN_NAYAR","undefined","diffuseRoughnessFactor","baseDiffuseRoughness","diffuseRoughnessTexture","loadTextureInfoAsync","texture","baseDiffuseRoughnessTexture","unregisterGLTFExtension","registerGLTFExtension"],"mappings":"uVAIA,MAAMA,EAAO,kCAMN,MAAMC,EAIT,WAAAC,CAAYC,GAIRC,KAAKC,KAAOL,EAIZI,KAAKE,MAAQ,IACbF,KAAKG,QAAUJ,EACfC,KAAKI,QAAUJ,KAAKG,QAAQE,gBAAgBT,EACpD,CAEI,OAAAU,GACIN,KAAKG,QAAU,IACvB,CAKI,2BAAAI,CAA4BC,EAASC,EAAUC,GAC3C,OAAOC,EAAWC,mBAAmBJ,EAASC,EAAUT,KAAKC,MAAMY,MAAOC,EAAkBC,KACxF,MAAMC,EAAW,IAAIC,MAIrB,OAHAD,EAASE,KAAKlB,KAAKG,QAAQI,4BAA4BC,EAASC,EAAUC,IAC1EM,EAASE,KAAKlB,KAAKmB,qCAAqCL,EAAkBC,EAAWL,UAExEU,QAAQC,IAAIL,GAAUM,MAAK,WAEpD,CAEI,oCAAAH,CAAqCX,EAASe,EAAYb,GACtD,KAAMA,aAA2Bc,GAC7B,MAAM,IAAIC,MAAM,GAAGjB,kCAEvB,MAAMQ,EAAW,IAAIC,MAerB,OAdAP,EAAgBgB,KAAKC,iBAAmBC,EAAUC,oCACTC,MAArCP,EAAWQ,uBACXrB,EAAgBsB,qBAAuBT,EAAWQ,uBAGlDrB,EAAgBsB,qBAAuB,EAEvCT,EAAWU,yBACXjB,EAASE,KAAKlB,KAAKG,QAAQ+B,qBAAqB,GAAG1B,4BAAmCe,EAAWU,yBAA0BE,IACvHA,EAAQlC,KAAO,GAAGS,EAAgBT,2BAClCS,EAAgB0B,4BAA8BD,MAI/Cf,QAAQC,IAAIL,GAAUM,MAAK,QAC1C,EAEAe,EAAwBzC,GACxB0C,EAAsB1C,GAAM,GAAOG,GAAW,IAAIF,EAAgCE"}