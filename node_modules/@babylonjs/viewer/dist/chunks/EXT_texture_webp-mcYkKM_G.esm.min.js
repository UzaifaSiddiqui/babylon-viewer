import{GLTFLoader as e,ArrayItem as s}from"./glTFLoader-X6ZTOkAw.esm.min.js";import{bJ as t,bI as r}from"./index-VvGulz6u.esm.min.js";import"./bone-DPw1oOFK.esm.min.js";import"./skeleton-BDCw4yVL.esm.min.js";import"./rawTexture-B-F8SA5B.esm.min.js";import"./assetContainer-Da0Xx6Do.esm.min.js";import"./objectModelMapping-CghNRpa4.esm.min.js";const o="EXT_texture_webp";class n{constructor(e){this.name=o,this._loader=e,this.enabled=e.isExtensionUsed(o)}dispose(){this._loader=null}_loadTextureAsync(t,r,o){return e.LoadExtensionAsync(t,r,this.name,(async(n,i)=>{const a=null==r.sampler?e.DefaultSampler:s.Get(`${t}/sampler`,this._loader.gltf.samplers,r.sampler),m=s.Get(`${n}/source`,this._loader.gltf.images,i.source);return await this._loader._createTextureAsync(t,a,m,(e=>{o(e)}),void 0,!r._textureInfo.nonColorData)}))}}t(o),r(o,!0,(e=>new n(e)));export{n as EXT_texture_webp};
//# sourceMappingURL=EXT_texture_webp-mcYkKM_G.esm.min.js.map
