{"version":3,"file":"flowGraphForLoopBlock-cX3EliHQ.esm.js","sources":["../../../../../dev/core/dist/FlowGraph/Blocks/Execution/ControlFlow/flowGraphForLoopBlock.js"],"sourcesContent":["import { FlowGraphExecutionBlockWithOutSignal } from \"core/FlowGraph/flowGraphExecutionBlockWithOutSignal\";\nimport { RichTypeAny, RichTypeFlowGraphInteger, RichTypeNumber } from \"../../../flowGraphRichTypes\";\nimport { RegisterClass } from \"../../../../Misc/typeStore\";\nimport { getNumericValue } from \"core/FlowGraph/utils\";\nimport { FlowGraphInteger } from \"core/FlowGraph/CustomTypes/flowGraphInteger\";\n/**\n * Block that executes an action in a loop.\n */\nexport class FlowGraphForLoopBlock extends FlowGraphExecutionBlockWithOutSignal {\n    constructor(config) {\n        super(config);\n        this.startIndex = this.registerDataInput(\"startIndex\", RichTypeAny, 0);\n        this.endIndex = this.registerDataInput(\"endIndex\", RichTypeAny);\n        this.step = this.registerDataInput(\"step\", RichTypeNumber, 1);\n        this.index = this.registerDataOutput(\"index\", RichTypeFlowGraphInteger, new FlowGraphInteger(getNumericValue(config?.initialIndex ?? 0)));\n        this.executionFlow = this._registerSignalOutput(\"executionFlow\");\n        this.completed = this._registerSignalOutput(\"completed\");\n        this._unregisterSignalOutput(\"out\");\n    }\n    /**\n     * @internal\n     */\n    _execute(context) {\n        const index = getNumericValue(this.startIndex.getValue(context));\n        const step = this.step.getValue(context);\n        let endIndex = getNumericValue(this.endIndex.getValue(context));\n        for (let i = index; i < endIndex; i += step) {\n            this.index.setValue(new FlowGraphInteger(i), context);\n            this.executionFlow._activateSignal(context);\n            endIndex = getNumericValue(this.endIndex.getValue(context));\n            if (i > FlowGraphForLoopBlock.MaxLoopIterations * step) {\n                break;\n            }\n        }\n        if (this.config?.incrementIndexWhenLoopDone) {\n            this.index.setValue(new FlowGraphInteger(getNumericValue(this.index.getValue(context)) + step), context);\n        }\n        this.completed._activateSignal(context);\n    }\n    /**\n     * @returns class name of the block.\n     */\n    getClassName() {\n        return \"FlowGraphForLoopBlock\" /* FlowGraphBlockNames.ForLoop */;\n    }\n}\n/**\n * The maximum number of iterations allowed for the loop.\n * If the loop exceeds this number, it will stop. This number is configurable to avoid infinite loops.\n */\nFlowGraphForLoopBlock.MaxLoopIterations = 1000;\nRegisterClass(\"FlowGraphForLoopBlock\" /* FlowGraphBlockNames.ForLoop */, FlowGraphForLoopBlock);\n//# sourceMappingURL=flowGraphForLoopBlock.js.map"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACO,MAAM,qBAAqB,SAAS,oCAAoC,CAAC;AAChF,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC;AACrB,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,WAAW,EAAE,CAAC,CAAC;AAC9E,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,WAAW,CAAC;AACvE,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,cAAc,EAAE,CAAC,CAAC;AACrE,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,wBAAwB,EAAE,IAAI,gBAAgB,CAAC,eAAe,CAAC,MAAM,EAAE,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC;AACjJ,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAAC;AACxE,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC;AAChE,QAAQ,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC;AAC3C;AACA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,OAAO,EAAE;AACtB,QAAQ,MAAM,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AACxE,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;AAChD,QAAQ,IAAI,QAAQ,GAAG,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AACvE,QAAQ,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,IAAI,IAAI,EAAE;AACrD,YAAY,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,gBAAgB,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC;AACjE,YAAY,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,OAAO,CAAC;AACvD,YAAY,QAAQ,GAAG,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AACvE,YAAY,IAAI,CAAC,GAAG,qBAAqB,CAAC,iBAAiB,GAAG,IAAI,EAAE;AACpE,gBAAgB;AAChB;AACA;AACA,QAAQ,IAAI,IAAI,CAAC,MAAM,EAAE,0BAA0B,EAAE;AACrD,YAAY,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,OAAO,CAAC;AACpH;AACA,QAAQ,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,OAAO,CAAC;AAC/C;AACA;AACA;AACA;AACA,IAAI,YAAY,GAAG;AACnB,QAAQ,OAAO,uBAAuB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,CAAC,iBAAiB,GAAG,IAAI;AAC9C,aAAa,CAAC,uBAAuB,oCAAoC,qBAAqB,CAAC;;;;"}