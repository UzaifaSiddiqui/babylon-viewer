import{S as t}from"./index-VvGulz6u.esm.min.js";const e="envShadowGroundVertexShader",r="attribute position: vec3f;attribute uv: vec2f;uniform viewProjection: mat4x4f;uniform worldViewProjection: mat4x4f;varying vUV: vec2f;@vertex\nfn main(input : VertexInputs)->FragmentInputs {vertexOutputs.position=uniforms.worldViewProjection*vec4f(input.position,1.0);vertexOutputs.vUV=input.uv;}";t.ShadersStoreWGSL[e]||(t.ShadersStoreWGSL[e]=r);const n={name:e,shader:r};export{n as envShadowGroundVertexShaderWGSL};
//# sourceMappingURL=envShadowGround.vertex-BgzDPHik.esm.min.js.map
