{"version":3,"file":"flowGraphArrayIndexBlock-BeB38szC.esm.js","sources":["../../../../../dev/core/dist/FlowGraph/Blocks/Data/Utils/flowGraphArrayIndexBlock.js"],"sourcesContent":["import { FlowGraphBlock } from \"core/FlowGraph/flowGraphBlock\";\nimport { RichTypeAny } from \"core/FlowGraph/flowGraphRichTypes\";\nimport { RegisterClass } from \"core/Misc/typeStore\";\nimport { FlowGraphInteger } from \"core/FlowGraph/CustomTypes/flowGraphInteger\";\nimport { getNumericValue } from \"core/FlowGraph/utils\";\n/**\n * This simple Util block takes an array as input and selects a single element from it.\n */\nexport class FlowGraphArrayIndexBlock extends FlowGraphBlock {\n    /**\n     * Construct a FlowGraphArrayIndexBlock.\n     * @param config construction parameters\n     */\n    constructor(config) {\n        super(config);\n        this.config = config;\n        this.array = this.registerDataInput(\"array\", RichTypeAny);\n        this.index = this.registerDataInput(\"index\", RichTypeAny, new FlowGraphInteger(-1));\n        this.value = this.registerDataOutput(\"value\", RichTypeAny);\n    }\n    /**\n     * @internal\n     */\n    _updateOutputs(context) {\n        const array = this.array.getValue(context);\n        const index = getNumericValue(this.index.getValue(context));\n        if (array && index >= 0 && index < array.length) {\n            this.value.setValue(array[index], context);\n        }\n        else {\n            this.value.setValue(null, context);\n        }\n    }\n    /**\n     * Serializes this block\n     * @param serializationObject the object to serialize to\n     */\n    serialize(serializationObject) {\n        super.serialize(serializationObject);\n    }\n    getClassName() {\n        return \"FlowGraphArrayIndexBlock\" /* FlowGraphBlockNames.ArrayIndex */;\n    }\n}\nRegisterClass(\"FlowGraphArrayIndexBlock\" /* FlowGraphBlockNames.ArrayIndex */, FlowGraphArrayIndexBlock);\n//# sourceMappingURL=flowGraphArrayIndexBlock.js.map"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACO,MAAM,wBAAwB,SAAS,cAAc,CAAC;AAC7D;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC;AACrB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,WAAW,CAAC;AACjE,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,WAAW,EAAE,IAAI,gBAAgB,CAAC,EAAE,CAAC,CAAC;AAC3F,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,WAAW,CAAC;AAClE;AACA;AACA;AACA;AACA,IAAI,cAAc,CAAC,OAAO,EAAE;AAC5B,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC;AAClD,QAAQ,MAAM,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AACnE,QAAQ,IAAI,KAAK,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE;AACzD,YAAY,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;AACtD;AACA,aAAa;AACb,YAAY,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,mBAAmB,EAAE;AACnC,QAAQ,KAAK,CAAC,SAAS,CAAC,mBAAmB,CAAC;AAC5C;AACA,IAAI,YAAY,GAAG;AACnB,QAAQ,OAAO,0BAA0B;AACzC;AACA;AACA,aAAa,CAAC,0BAA0B,uCAAuC,wBAAwB,CAAC;;;;"}