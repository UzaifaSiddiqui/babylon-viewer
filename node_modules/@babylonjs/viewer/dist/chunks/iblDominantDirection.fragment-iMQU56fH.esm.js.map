{"version":3,"file":"iblDominantDirection.fragment-iMQU56fH.esm.js","sources":["../../../../../dev/core/dist/Shaders/iblDominantDirection.fragment.js"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\nimport \"./ShadersInclude/helperFunctions\";\nimport \"./ShadersInclude/importanceSampling\";\nimport \"./ShadersInclude/pbrBRDFFunctions\";\nimport \"./ShadersInclude/hdrFilteringFunctions\";\nconst name = \"iblDominantDirectionPixelShader\";\nconst shader = `precision highp sampler2D;precision highp samplerCube;\n#include<helperFunctions>\n#include<importanceSampling>\n#include<pbrBRDFFunctions>\n#include<hdrFilteringFunctions>\nvarying vec2 vUV;uniform sampler2D icdfSampler;void main(void) {vec3 lightDir=vec3(0.0,0.0,0.0);for(uint i=0u; i<NUM_SAMPLES; ++i)\n{vec2 Xi=hammersley(i,NUM_SAMPLES);vec2 T;T.x=texture2D(icdfSampler,vec2(Xi.x,0.0)).x;T.y=texture2D(icdfSampler,vec2(T.x,Xi.y)).y;vec3 Ls=uv_to_normal(vec2(1.0-fract(T.x+0.25),T.y));lightDir+=Ls;}\nlightDir/=float(NUM_SAMPLES);gl_FragColor=vec4(lightDir,1.0);}`;\n// Sideeffect\nif (!ShaderStore.ShadersStore[name]) {\n    ShaderStore.ShadersStore[name] = shader;\n}\n/** @internal */\nexport const iblDominantDirectionPixelShader = { name, shader };\n//# sourceMappingURL=iblDominantDirection.fragment.js.map"],"names":[],"mappings":";;;;;AAAA;AAMA,MAAM,IAAI,GAAG,iCAAiC;AAC9C,MAAM,MAAM,GAAG,CAAC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,CAAC;AAC/D;AACA,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;AACrC,IAAI,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,MAAM;AAC3C;AACA;AACY,MAAC,+BAA+B,GAAG,EAAE,IAAI,EAAE,MAAM;;;;"}