{"version":3,"file":"workerPool-DP4ZCjkC.esm.js","sources":["../../../../../dev/core/dist/Misc/workerPool.js"],"sourcesContent":["/**\n * Helper class to push actions to a pool of workers.\n */\nexport class WorkerPool {\n    /**\n     * Constructor\n     * @param workers Array of workers to use for actions\n     */\n    constructor(workers) {\n        this._pendingActions = new Array();\n        this._workerInfos = workers.map((worker) => ({\n            workerPromise: Promise.resolve(worker),\n            idle: true,\n        }));\n    }\n    /**\n     * Terminates all workers and clears any pending actions.\n     */\n    dispose() {\n        for (const workerInfo of this._workerInfos) {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises, github/no-then\n            workerInfo.workerPromise.then((worker) => {\n                worker.terminate();\n            });\n        }\n        this._workerInfos.length = 0;\n        this._pendingActions.length = 0;\n    }\n    /**\n     * Pushes an action to the worker pool. If all the workers are active, the action will be\n     * pended until a worker has completed its action.\n     * @param action The action to perform. Call onComplete when the action is complete.\n     */\n    push(action) {\n        if (!this._executeOnIdleWorker(action)) {\n            this._pendingActions.push(action);\n        }\n    }\n    _executeOnIdleWorker(action) {\n        for (const workerInfo of this._workerInfos) {\n            if (workerInfo.idle) {\n                this._execute(workerInfo, action);\n                return true;\n            }\n        }\n        return false;\n    }\n    _execute(workerInfo, action) {\n        workerInfo.idle = false;\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises, github/no-then\n        workerInfo.workerPromise.then((worker) => {\n            action(worker, () => {\n                const nextAction = this._pendingActions.shift();\n                if (nextAction) {\n                    this._execute(workerInfo, nextAction);\n                }\n                else {\n                    workerInfo.idle = true;\n                }\n            });\n        });\n    }\n}\n/**\n * Similar to the WorkerPool class except it creates and destroys workers automatically with a maximum of `maxWorkers` workers.\n * Workers are terminated when it is idle for at least `idleTimeElapsedBeforeRelease` milliseconds.\n */\nexport class AutoReleaseWorkerPool extends WorkerPool {\n    constructor(maxWorkers, createWorkerAsync, options = AutoReleaseWorkerPool.DefaultOptions) {\n        super([]);\n        this._maxWorkers = maxWorkers;\n        this._createWorkerAsync = createWorkerAsync;\n        this._options = options;\n    }\n    push(action) {\n        if (!this._executeOnIdleWorker(action)) {\n            if (this._workerInfos.length < this._maxWorkers) {\n                const workerInfo = {\n                    workerPromise: this._createWorkerAsync(),\n                    idle: false,\n                };\n                this._workerInfos.push(workerInfo);\n                this._execute(workerInfo, action);\n            }\n            else {\n                this._pendingActions.push(action);\n            }\n        }\n    }\n    _execute(workerInfo, action) {\n        // Reset the idle timeout.\n        if (workerInfo.timeoutId) {\n            clearTimeout(workerInfo.timeoutId);\n            delete workerInfo.timeoutId;\n        }\n        super._execute(workerInfo, (worker, onComplete) => {\n            action(worker, () => {\n                onComplete();\n                if (workerInfo.idle) {\n                    // Schedule the worker to be terminated after the elapsed time.\n                    workerInfo.timeoutId = setTimeout(() => {\n                        // eslint-disable-next-line @typescript-eslint/no-floating-promises, github/no-then\n                        workerInfo.workerPromise.then((worker) => {\n                            worker.terminate();\n                        });\n                        const indexOf = this._workerInfos.indexOf(workerInfo);\n                        if (indexOf !== -1) {\n                            this._workerInfos.splice(indexOf, 1);\n                        }\n                    }, this._options.idleTimeElapsedBeforeRelease);\n                }\n            });\n        });\n    }\n}\n/**\n * Default options for the constructor.\n * Override to change the defaults.\n */\nAutoReleaseWorkerPool.DefaultOptions = {\n    idleTimeElapsedBeforeRelease: 1000,\n};\n//# sourceMappingURL=workerPool.js.map"],"names":[],"mappings":"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"}