import{S as e}from"./index-VvGulz6u.esm.min.js";const r="depthBoxBlurPixelShader",t="varying vUV: vec2f;var textureSamplerSampler: sampler;var textureSampler: texture_2d<f32>;uniform screenSize: vec2f;\n#define CUSTOM_FRAGMENT_DEFINITIONS\n@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {var colorDepth: vec4f=vec4f(0.0);for (var x: i32=-OFFSET; x<=OFFSET; x++) {for (var y: i32=-OFFSET; y<=OFFSET; y++) {colorDepth+=textureSample(textureSampler,textureSamplerSampler,input.vUV+ vec2f(f32(x),f32(y))/uniforms.screenSize);}}\nfragmentOutputs.color=(colorDepth/ f32((OFFSET*2+1)*(OFFSET*2+1)));}";e.ShadersStoreWGSL[r]||(e.ShadersStoreWGSL[r]=t);const a={name:r,shader:t};export{a as depthBoxBlurPixelShaderWGSL};
//# sourceMappingURL=depthBoxBlur.fragment-CJ9Y48Hh.esm.min.js.map
