{"version":3,"file":"EXT_texture_webp-mcYkKM_G.esm.min.js","sources":["../../../../../dev/loaders/dist/glTF/2.0/Extensions/EXT_texture_webp.js"],"sourcesContent":["import { GLTFLoader, ArrayItem } from \"../glTFLoader\";\nimport { registerGLTFExtension, unregisterGLTFExtension } from \"../glTFLoaderExtensionRegistry\";\nconst NAME = \"EXT_texture_webp\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Vendor/EXT_texture_webp/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class EXT_texture_webp {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /** The name of this extension. */\n        this.name = NAME;\n        this._loader = loader;\n        this.enabled = loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    // eslint-disable-next-line no-restricted-syntax\n    _loadTextureAsync(context, texture, assign) {\n        return GLTFLoader.LoadExtensionAsync(context, texture, this.name, async (extensionContext, extension) => {\n            const sampler = texture.sampler == undefined ? GLTFLoader.DefaultSampler : ArrayItem.Get(`${context}/sampler`, this._loader.gltf.samplers, texture.sampler);\n            const image = ArrayItem.Get(`${extensionContext}/source`, this._loader.gltf.images, extension.source);\n            return await this._loader._createTextureAsync(context, sampler, image, (babylonTexture) => {\n                assign(babylonTexture);\n            }, undefined, !texture._textureInfo.nonColorData);\n        });\n    }\n}\nunregisterGLTFExtension(NAME);\nregisterGLTFExtension(NAME, true, (loader) => new EXT_texture_webp(loader));\n//# sourceMappingURL=EXT_texture_webp.js.map"],"names":["NAME","EXT_texture_webp","constructor","loader","this","name","_loader","enabled","isExtensionUsed","dispose","_loadTextureAsync","context","texture","assign","GLTFLoader","LoadExtensionAsync","async","extensionContext","extension","sampler","undefined","DefaultSampler","ArrayItem","Get","gltf","samplers","image","images","source","_createTextureAsync","babylonTexture","_textureInfo","nonColorData","unregisterGLTFExtension","registerGLTFExtension"],"mappings":"uVAEA,MAAMA,EAAO,mBAKN,MAAMC,EAIT,WAAAC,CAAYC,GAERC,KAAKC,KAAOL,EACZI,KAAKE,QAAUH,EACfC,KAAKG,QAAUJ,EAAOK,gBAAgBR,EAC9C,CAEI,OAAAS,GACIL,KAAKE,QAAU,IACvB,CAKI,iBAAAI,CAAkBC,EAASC,EAASC,GAChC,OAAOC,EAAWC,mBAAmBJ,EAASC,EAASR,KAAKC,MAAMW,MAAOC,EAAkBC,KACvF,MAAMC,EAA6BC,MAAnBR,EAAQO,QAAuBL,EAAWO,eAAiBC,EAAUC,IAAI,GAAGZ,YAAmBP,KAAKE,QAAQkB,KAAKC,SAAUb,EAAQO,SAC7IO,EAAQJ,EAAUC,IAAI,GAAGN,WAA2Bb,KAAKE,QAAQkB,KAAKG,OAAQT,EAAUU,QAC9F,aAAaxB,KAAKE,QAAQuB,oBAAoBlB,EAASQ,EAASO,GAAQI,IACpEjB,EAAOiB,UACRV,GAAYR,EAAQmB,aAAaC,gBAEhD,EAEAC,EAAwBjC,GACxBkC,EAAsBlC,GAAM,GAAOG,GAAW,IAAIF,EAAiBE"}