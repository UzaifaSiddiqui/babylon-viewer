{"version":3,"file":"EXT_lights_ies-C-_kFPIo.esm.min.js","sources":["../../../../../dev/loaders/dist/glTF/2.0/Extensions/EXT_lights_ies.js"],"sourcesContent":["import { Vector3 } from \"core/Maths/math.vector\";\nimport { Color3 } from \"core/Maths/math.color\";\nimport { SpotLight } from \"core/Lights/spotLight\";\nimport { Light } from \"core/Lights/light\";\nimport { GLTFLoader, ArrayItem } from \"../glTFLoader\";\nimport { registerGLTFExtension, unregisterGLTFExtension } from \"../glTFLoaderExtensionRegistry\";\nimport { Texture } from \"core/Materials/Textures/texture\";\nconst NAME = \"EXT_lights_ies\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Vendor/EXT_lights_ies)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class EXT_lights_ies {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n        delete this._lights;\n    }\n    /** @internal */\n    onLoading() {\n        const extensions = this._loader.gltf.extensions;\n        if (extensions && extensions[this.name]) {\n            const extension = extensions[this.name];\n            this._lights = extension.lights;\n            ArrayItem.Assign(this._lights);\n        }\n    }\n    /**\n     * @internal\n     */\n    // eslint-disable-next-line no-restricted-syntax\n    // eslint-disable-next-line no-restricted-syntax\n    loadNodeAsync(context, node, assign) {\n        return GLTFLoader.LoadExtensionAsync(context, node, this.name, async (extensionContext, extension) => {\n            this._loader._allMaterialsDirtyRequired = true;\n            let babylonSpotLight;\n            let light;\n            const transformNode = await this._loader.loadNodeAsync(context, node, (babylonMesh) => {\n                light = ArrayItem.Get(extensionContext, this._lights, extension.light);\n                const name = light.name || babylonMesh.name;\n                this._loader.babylonScene._blockEntityCollection = !!this._loader._assetContainer;\n                babylonSpotLight = new SpotLight(name, Vector3.Zero(), Vector3.Backward(), 0, 1, this._loader.babylonScene);\n                babylonSpotLight.angle = Math.PI / 2;\n                babylonSpotLight.innerAngle = 0;\n                babylonSpotLight._parentContainer = this._loader._assetContainer;\n                this._loader.babylonScene._blockEntityCollection = false;\n                light._babylonLight = babylonSpotLight;\n                babylonSpotLight.falloffType = Light.FALLOFF_GLTF;\n                babylonSpotLight.diffuse = extension.color ? Color3.FromArray(extension.color) : Color3.White();\n                babylonSpotLight.intensity = extension.multiplier || 1;\n                babylonSpotLight.range = Number.MAX_VALUE;\n                babylonSpotLight.parent = babylonMesh;\n                this._loader._babylonLights.push(babylonSpotLight);\n                GLTFLoader.AddPointerMetadata(babylonSpotLight, extensionContext);\n                assign(babylonMesh);\n            });\n            // Load the profile\n            let bufferData;\n            if (light.uri) {\n                bufferData = await this._loader.loadUriAsync(context, light, light.uri);\n            }\n            else {\n                const bufferView = ArrayItem.Get(`${context}/bufferView`, this._loader.gltf.bufferViews, light.bufferView);\n                bufferData = await this._loader.loadBufferViewAsync(`/bufferViews/${bufferView.index}`, bufferView);\n            }\n            babylonSpotLight.iesProfileTexture = new Texture(name + \"_iesProfile\", this._loader.babylonScene, true, false, undefined, null, null, bufferData, true, undefined, undefined, undefined, undefined, \".ies\");\n            return transformNode;\n        });\n    }\n}\nunregisterGLTFExtension(NAME);\nregisterGLTFExtension(NAME, true, (loader) => new EXT_lights_ies(loader));\n//# sourceMappingURL=EXT_lights_ies.js.map"],"names":["NAME","EXT_lights_ies","constructor","loader","this","name","_loader","enabled","isExtensionUsed","dispose","_lights","onLoading","extensions","gltf","extension","lights","ArrayItem","Assign","loadNodeAsync","context","node","assign","GLTFLoader","LoadExtensionAsync","async","extensionContext","babylonSpotLight","light","_allMaterialsDirtyRequired","transformNode","babylonMesh","Get","babylonScene","_blockEntityCollection","_assetContainer","SpotLight","Vector3","Zero","Backward","angle","Math","PI","innerAngle","_parentContainer","_babylonLight","falloffType","Light","FALLOFF_GLTF","diffuse","color","Color3","FromArray","White","intensity","multiplier","range","Number","MAX_VALUE","parent","_babylonLights","push","AddPointerMetadata","bufferData","uri","loadUriAsync","bufferView","bufferViews","loadBufferViewAsync","index","iesProfileTexture","Texture","undefined","unregisterGLTFExtension","registerGLTFExtension"],"mappings":"6XAOA,MAAMA,EAAO,iBAKN,MAAMC,EAIT,WAAAC,CAAYC,GAIRC,KAAKC,KAAOL,EACZI,KAAKE,QAAUH,EACfC,KAAKG,QAAUH,KAAKE,QAAQE,gBAAgBR,EACpD,CAEI,OAAAS,GACIL,KAAKE,QAAU,YACRF,KAAKM,OACpB,CAEI,SAAAC,GACI,MAAMC,EAAaR,KAAKE,QAAQO,KAAKD,WACrC,GAAIA,GAAcA,EAAWR,KAAKC,MAAO,CACrC,MAAMS,EAAYF,EAAWR,KAAKC,MAClCD,KAAKM,QAAUI,EAAUC,OACzBC,EAAUC,OAAOb,KAAKM,QAClC,CACA,CAMI,aAAAQ,CAAcC,EAASC,EAAMC,GACzB,OAAOC,EAAWC,mBAAmBJ,EAASC,EAAMhB,KAAKC,MAAMmB,MAAOC,EAAkBX,KAEpF,IAAIY,EACAC,EAFJvB,KAAKE,QAAQsB,4BAA6B,EAG1C,MAAMC,QAAsBzB,KAAKE,QAAQY,cAAcC,EAASC,GAAOU,IACnEH,EAAQX,EAAUe,IAAIN,EAAkBrB,KAAKM,QAASI,EAAUa,OAChE,MAAMtB,EAAOsB,EAAMtB,MAAQyB,EAAYzB,KACvCD,KAAKE,QAAQ0B,aAAaC,yBAA2B7B,KAAKE,QAAQ4B,gBAClER,EAAmB,IAAIS,EAAU9B,EAAM+B,EAAQC,OAAQD,EAAQE,WAAY,EAAG,EAAGlC,KAAKE,QAAQ0B,cAC9FN,EAAiBa,MAAQC,KAAKC,GAAK,EACnCf,EAAiBgB,WAAa,EAC9BhB,EAAiBiB,iBAAmBvC,KAAKE,QAAQ4B,gBACjD9B,KAAKE,QAAQ0B,aAAaC,wBAAyB,EACnDN,EAAMiB,cAAgBlB,EACtBA,EAAiBmB,YAAcC,EAAMC,aACrCrB,EAAiBsB,QAAUlC,EAAUmC,MAAQC,EAAOC,UAAUrC,EAAUmC,OAASC,EAAOE,QACxF1B,EAAiB2B,UAAYvC,EAAUwC,YAAc,EACrD5B,EAAiB6B,MAAQC,OAAOC,UAChC/B,EAAiBgC,OAAS5B,EAC1B1B,KAAKE,QAAQqD,eAAeC,KAAKlC,GACjCJ,EAAWuC,mBAAmBnC,EAAkBD,GAChDJ,EAAOS,MAGX,IAAIgC,EACJ,GAAInC,EAAMoC,IACND,QAAmB1D,KAAKE,QAAQ0D,aAAa7C,EAASQ,EAAOA,EAAMoC,SAElE,CACD,MAAME,EAAajD,EAAUe,IAAI,GAAGZ,eAAsBf,KAAKE,QAAQO,KAAKqD,YAAavC,EAAMsC,YAC/FH,QAAmB1D,KAAKE,QAAQ6D,oBAAoB,gBAAgBF,EAAWG,QAASH,EACxG,CAEY,OADAvC,EAAiB2C,kBAAoB,IAAIC,EAAQjE,KAAO,cAAeD,KAAKE,QAAQ0B,cAAc,GAAM,OAAOuC,EAAW,KAAM,KAAMT,GAAY,OAAMS,OAAWA,OAAWA,OAAWA,EAAW,QAC7L1C,IAEnB,EAEA2C,EAAwBxE,GACxByE,EAAsBzE,GAAM,GAAOG,GAAW,IAAIF,EAAeE"}