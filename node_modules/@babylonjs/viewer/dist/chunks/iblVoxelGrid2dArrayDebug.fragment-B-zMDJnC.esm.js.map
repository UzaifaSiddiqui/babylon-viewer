{"version":3,"file":"iblVoxelGrid2dArrayDebug.fragment-B-zMDJnC.esm.js","sources":["../../../../../dev/core/dist/ShadersWGSL/iblVoxelGrid2dArrayDebug.fragment.js"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\nconst name = \"iblVoxelGrid2dArrayDebugPixelShader\";\nconst shader = `varying vUV: vec2f;var voxelTextureSampler: sampler;var voxelTexture: texture_3d<f32>;var textureSamplerSampler: sampler;var textureSampler: texture_2d<f32>;uniform slice: i32;@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {var size: vec3u=textureDimensions(voxelTexture,0);var dimension: f32=sqrt( f32(size.z));var samplePos: vec2f=fract(input.vUV.xy* vec2f(dimension));var sampleIndex: u32= u32(floor(input.vUV.x* f32(dimension))+floor(input.vUV.y* f32(dimension))*dimension);var color=textureSample(voxelTexture,voxelTextureSampler, vec3f(samplePos.xy,sampleIndex)).rrr;color+=textureSample(textureSampler,textureSamplerSampler,input.vUV.xy).rgb;fragmentOutputs.color=vec4f(color,1.0);}`;\n// Sideeffect\nif (!ShaderStore.ShadersStoreWGSL[name]) {\n    ShaderStore.ShadersStoreWGSL[name] = shader;\n}\n/** @internal */\nexport const iblVoxelGrid2dArrayDebugPixelShaderWGSL = { name, shader };\n//# sourceMappingURL=iblVoxelGrid2dArrayDebug.fragment.js.map"],"names":[],"mappings":";;AAAA;AAEA,MAAM,IAAI,GAAG,qCAAqC;AAClD,MAAM,MAAM,GAAG,CAAC;AAChB,kgBAAkgB,CAAC;AACngB;AACA,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE;AACzC,IAAI,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,MAAM;AAC/C;AACA;AACY,MAAC,uCAAuC,GAAG,EAAE,IAAI,EAAE,MAAM;;;;"}