import{bM as e,bJ as s,bI as i}from"./index-VvGulz6u.esm.min.js";import{GLTFLoader as t}from"./glTFLoader-X6ZTOkAw.esm.min.js";import"./bone-DPw1oOFK.esm.min.js";import"./skeleton-BDCw4yVL.esm.min.js";import"./rawTexture-B-F8SA5B.esm.min.js";import"./assetContainer-Da0Xx6Do.esm.min.js";import"./objectModelMapping-CghNRpa4.esm.min.js";const r="KHR_materials_emissive_strength";class o{constructor(e){this.name=r,this.order=170,this._loader=e,this.enabled=this._loader.isExtensionUsed(r)}dispose(){this._loader=null}loadMaterialPropertiesAsync(e,s,i){return t.LoadExtensionAsync(e,s,this.name,(async(t,r)=>await this._loader.loadMaterialPropertiesAsync(e,s,i).then((()=>{this._loadEmissiveProperties(t,r,i)}))))}_loadEmissiveProperties(s,i,t){if(!(t instanceof e))throw new Error(`${s}: Material type not supported`);void 0!==i.emissiveStrength&&(t.emissiveIntensity=i.emissiveStrength)}}s(r),i(r,!0,(e=>new o(e)));export{o as KHR_materials_emissive_strength};
//# sourceMappingURL=KHR_materials_emissive_strength-DThc4tpF.esm.min.js.map
