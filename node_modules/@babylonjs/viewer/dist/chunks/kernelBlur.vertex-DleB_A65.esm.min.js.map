{"version":3,"file":"kernelBlur.vertex-DleB_A65.esm.min.js","sources":["../../../../../dev/core/dist/ShadersWGSL/ShadersInclude/kernelBlurVertex.js","../../../../../dev/core/dist/ShadersWGSL/kernelBlur.vertex.js"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\nconst name = \"kernelBlurVertex\";\nconst shader = `vertexOutputs.sampleCoord{X}=vertexOutputs.sampleCenter+uniforms.delta*KERNEL_OFFSET{X};`;\n// Sideeffect\nif (!ShaderStore.IncludesShadersStoreWGSL[name]) {\n    ShaderStore.IncludesShadersStoreWGSL[name] = shader;\n}\n/** @internal */\nexport const kernelBlurVertexWGSL = { name, shader };\n//# sourceMappingURL=kernelBlurVertex.js.map","// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\nimport \"./ShadersInclude/kernelBlurVaryingDeclaration\";\nimport \"./ShadersInclude/kernelBlurVertex\";\nconst name = \"kernelBlurVertexShader\";\nconst shader = `attribute position: vec2f;uniform delta: vec2f;varying sampleCenter: vec2f;\n#include<kernelBlurVaryingDeclaration>[0..varyingCount]\n#define CUSTOM_VERTEX_DEFINITIONS\n@vertex\nfn main(input : VertexInputs)->FragmentInputs {const madd: vec2f= vec2f(0.5,0.5);\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvertexOutputs.sampleCenter=(input.position*madd+madd);\n#include<kernelBlurVertex>[0..varyingCount]\nvertexOutputs.position= vec4f(input.position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}`;\n// Sideeffect\nif (!ShaderStore.ShadersStoreWGSL[name]) {\n    ShaderStore.ShadersStoreWGSL[name] = shader;\n}\n/** @internal */\nexport const kernelBlurVertexShaderWGSL = { name, shader };\n//# sourceMappingURL=kernelBlur.vertex.js.map"],"names":["name","ShaderStore","IncludesShadersStoreWGSL","shader","ShadersStoreWGSL","kernelBlurVertexShaderWGSL"],"mappings":"2GAEA,MAAMA,EAAO,mBAGRC,EAAYC,yBAAyBF,KACtCC,EAAYC,yBAAyBF,GAH1B,4FCCf,MAAMA,EAAO,yBACPG,EAAS,weAYVF,EAAYG,iBAAiBJ,KAC9BC,EAAYG,iBAAiBJ,GAAQG,GAG7B,MAACE,EAA6B,CAAEL,OAAMG"}