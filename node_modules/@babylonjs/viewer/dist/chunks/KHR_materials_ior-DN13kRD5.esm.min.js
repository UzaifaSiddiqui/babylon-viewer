import{bM as e,bJ as s,bI as r}from"./index-VvGulz6u.esm.min.js";import{GLTFLoader as o}from"./glTFLoader-X6ZTOkAw.esm.min.js";import"./bone-DPw1oOFK.esm.min.js";import"./skeleton-BDCw4yVL.esm.min.js";import"./rawTexture-B-F8SA5B.esm.min.js";import"./assetContainer-Da0Xx6Do.esm.min.js";import"./objectModelMapping-CghNRpa4.esm.min.js";const i="KHR_materials_ior";class t{constructor(e){this.name=i,this.order=180,this._loader=e,this.enabled=this._loader.isExtensionUsed(i)}dispose(){this._loader=null}loadMaterialPropertiesAsync(e,s,r){return o.LoadExtensionAsync(e,s,this.name,(async(o,i)=>{const t=new Array;return t.push(this._loader.loadMaterialPropertiesAsync(e,s,r)),t.push(this._loadIorPropertiesAsync(o,i,r)),await Promise.all(t).then((()=>{}))}))}_loadIorPropertiesAsync(s,r,o){if(!(o instanceof e))throw new Error(`${s}: Material type not supported`);return void 0!==r.ior?o.indexOfRefraction=r.ior:o.indexOfRefraction=t._DEFAULT_IOR,Promise.resolve()}}t._DEFAULT_IOR=1.5,s(i),r(i,!0,(e=>new t(e)));export{t as KHR_materials_ior};
//# sourceMappingURL=KHR_materials_ior-DN13kRD5.esm.min.js.map
