import{c as e,d as t}from"./KHR_interactivity-CxC8fKZd.esm.min.js";import{b as s,R as o}from"./index-VvGulz6u.esm.min.js";import"./declarationMapper-wc0CNyr2.esm.min.js";import"./objectModelMapping-CghNRpa4.esm.min.js";class n extends e{constructor(e){super(e),this.config=e,this.initPriority=1;for(const e in this.config.eventData)this.registerDataOutput(e,this.config.eventData[e].type)}_preparePendingTasks(e){const s=e.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(s&&s.hasObservers()&&s.observers.length>t.MaxEventsPerType)return void this._reportError(e,`FlowGraphReceiveCustomEventBlock: Too many observers for event ${this.config.eventId}. Max is ${t.MaxEventsPerType}.`);const o=s.add((t=>{const s=Object.keys(t);for(const o of s)this.getDataOutput(o)?.setValue(t[o],e);this._execute(e)}));e._setExecutionVariable(this,"_eventObserver",o)}_cancelPendingTasks(e){const t=e.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(t){const s=e._getExecutionVariable(this,"_eventObserver",null);t.remove(s)}else s.Warn(`FlowGraphReceiveCustomEventBlock: Missing observable for event ${this.config.eventId}`)}_executeEvent(e,t){return!0}getClassName(){return"FlowGraphReceiveCustomEventBlock"}}o("FlowGraphReceiveCustomEventBlock",n);export{n as FlowGraphReceiveCustomEventBlock};
//# sourceMappingURL=flowGraphReceiveCustomEventBlock-Bb_Yr6Eo.esm.min.js.map
