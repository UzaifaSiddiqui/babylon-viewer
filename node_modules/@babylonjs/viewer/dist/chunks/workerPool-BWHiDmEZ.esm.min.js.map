{"version":3,"file":"workerPool-BWHiDmEZ.esm.min.js","sources":["../../../../../dev/core/dist/Misc/workerPool.js"],"sourcesContent":["/**\n * Helper class to push actions to a pool of workers.\n */\nexport class WorkerPool {\n    /**\n     * Constructor\n     * @param workers Array of workers to use for actions\n     */\n    constructor(workers) {\n        this._pendingActions = new Array();\n        this._workerInfos = workers.map((worker) => ({\n            workerPromise: Promise.resolve(worker),\n            idle: true,\n        }));\n    }\n    /**\n     * Terminates all workers and clears any pending actions.\n     */\n    dispose() {\n        for (const workerInfo of this._workerInfos) {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises, github/no-then\n            workerInfo.workerPromise.then((worker) => {\n                worker.terminate();\n            });\n        }\n        this._workerInfos.length = 0;\n        this._pendingActions.length = 0;\n    }\n    /**\n     * Pushes an action to the worker pool. If all the workers are active, the action will be\n     * pended until a worker has completed its action.\n     * @param action The action to perform. Call onComplete when the action is complete.\n     */\n    push(action) {\n        if (!this._executeOnIdleWorker(action)) {\n            this._pendingActions.push(action);\n        }\n    }\n    _executeOnIdleWorker(action) {\n        for (const workerInfo of this._workerInfos) {\n            if (workerInfo.idle) {\n                this._execute(workerInfo, action);\n                return true;\n            }\n        }\n        return false;\n    }\n    _execute(workerInfo, action) {\n        workerInfo.idle = false;\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises, github/no-then\n        workerInfo.workerPromise.then((worker) => {\n            action(worker, () => {\n                const nextAction = this._pendingActions.shift();\n                if (nextAction) {\n                    this._execute(workerInfo, nextAction);\n                }\n                else {\n                    workerInfo.idle = true;\n                }\n            });\n        });\n    }\n}\n/**\n * Similar to the WorkerPool class except it creates and destroys workers automatically with a maximum of `maxWorkers` workers.\n * Workers are terminated when it is idle for at least `idleTimeElapsedBeforeRelease` milliseconds.\n */\nexport class AutoReleaseWorkerPool extends WorkerPool {\n    constructor(maxWorkers, createWorkerAsync, options = AutoReleaseWorkerPool.DefaultOptions) {\n        super([]);\n        this._maxWorkers = maxWorkers;\n        this._createWorkerAsync = createWorkerAsync;\n        this._options = options;\n    }\n    push(action) {\n        if (!this._executeOnIdleWorker(action)) {\n            if (this._workerInfos.length < this._maxWorkers) {\n                const workerInfo = {\n                    workerPromise: this._createWorkerAsync(),\n                    idle: false,\n                };\n                this._workerInfos.push(workerInfo);\n                this._execute(workerInfo, action);\n            }\n            else {\n                this._pendingActions.push(action);\n            }\n        }\n    }\n    _execute(workerInfo, action) {\n        // Reset the idle timeout.\n        if (workerInfo.timeoutId) {\n            clearTimeout(workerInfo.timeoutId);\n            delete workerInfo.timeoutId;\n        }\n        super._execute(workerInfo, (worker, onComplete) => {\n            action(worker, () => {\n                onComplete();\n                if (workerInfo.idle) {\n                    // Schedule the worker to be terminated after the elapsed time.\n                    workerInfo.timeoutId = setTimeout(() => {\n                        // eslint-disable-next-line @typescript-eslint/no-floating-promises, github/no-then\n                        workerInfo.workerPromise.then((worker) => {\n                            worker.terminate();\n                        });\n                        const indexOf = this._workerInfos.indexOf(workerInfo);\n                        if (indexOf !== -1) {\n                            this._workerInfos.splice(indexOf, 1);\n                        }\n                    }, this._options.idleTimeElapsedBeforeRelease);\n                }\n            });\n        });\n    }\n}\n/**\n * Default options for the constructor.\n * Override to change the defaults.\n */\nAutoReleaseWorkerPool.DefaultOptions = {\n    idleTimeElapsedBeforeRelease: 1000,\n};\n//# sourceMappingURL=workerPool.js.map"],"names":["WorkerPool","constructor","workers","this","_pendingActions","Array","_workerInfos","map","worker","workerPromise","Promise","resolve","idle","dispose","workerInfo","then","terminate","length","push","action","_executeOnIdleWorker","_execute","nextAction","shift","AutoReleaseWorkerPool","maxWorkers","createWorkerAsync","options","DefaultOptions","super","_maxWorkers","_createWorkerAsync","_options","timeoutId","clearTimeout","onComplete","setTimeout","indexOf","splice","idleTimeElapsedBeforeRelease"],"mappings":"AAGO,MAAMA,EAKT,WAAAC,CAAYC,GACRC,KAAKC,gBAAkB,IAAIC,MAC3BF,KAAKG,aAAeJ,EAAQK,KAAKC,IAAY,CACzCC,cAAeC,QAAQC,QAAQH,GAC/BI,MAAM,KAElB,CAII,OAAAC,GACI,IAAK,MAAMC,KAAcX,KAAKG,aAE1BQ,EAAWL,cAAcM,MAAMP,IAC3BA,EAAOQ,eAGfb,KAAKG,aAAaW,OAAS,EAC3Bd,KAAKC,gBAAgBa,OAAS,CACtC,CAMI,IAAAC,CAAKC,GACIhB,KAAKiB,qBAAqBD,IAC3BhB,KAAKC,gBAAgBc,KAAKC,EAEtC,CACI,oBAAAC,CAAqBD,GACjB,IAAK,MAAML,KAAcX,KAAKG,aAC1B,GAAIQ,EAAWF,KAEX,OADAT,KAAKkB,SAASP,EAAYK,IACnB,EAGf,OAAO,CACf,CACI,QAAAE,CAASP,EAAYK,GACjBL,EAAWF,MAAO,EAElBE,EAAWL,cAAcM,MAAMP,IAC3BW,EAAOX,GAAQ,KACX,MAAMc,EAAanB,KAAKC,gBAAgBmB,QACpCD,EACAnB,KAAKkB,SAASP,EAAYQ,GAG1BR,EAAWF,MAAO,OAItC,EAMO,MAAMY,UAA8BxB,EACvC,WAAAC,CAAYwB,EAAYC,EAAmBC,EAAUH,EAAsBI,gBACvEC,MAAM,IACN1B,KAAK2B,YAAcL,EACnBtB,KAAK4B,mBAAqBL,EAC1BvB,KAAK6B,SAAWL,CACxB,CACI,IAAAT,CAAKC,GACD,IAAKhB,KAAKiB,qBAAqBD,GAC3B,GAAIhB,KAAKG,aAAaW,OAASd,KAAK2B,YAAa,CAC7C,MAAMhB,EAAa,CACfL,cAAeN,KAAK4B,qBACpBnB,MAAM,GAEVT,KAAKG,aAAaY,KAAKJ,GACvBX,KAAKkB,SAASP,EAAYK,EAC1C,MAEgBhB,KAAKC,gBAAgBc,KAAKC,EAG1C,CACI,QAAAE,CAASP,EAAYK,GAEbL,EAAWmB,YACXC,aAAapB,EAAWmB,kBACjBnB,EAAWmB,WAEtBJ,MAAMR,SAASP,GAAY,CAACN,EAAQ2B,KAChChB,EAAOX,GAAQ,KACX2B,IACIrB,EAAWF,OAEXE,EAAWmB,UAAYG,YAAW,KAE9BtB,EAAWL,cAAcM,MAAMP,IAC3BA,EAAOQ,eAEX,MAAMqB,EAAUlC,KAAKG,aAAa+B,QAAQvB,IAC1B,IAAZuB,GACAlC,KAAKG,aAAagC,OAAOD,EAAS,KAEvClC,KAAK6B,SAASO,oCAIrC,EAMAf,EAAsBI,eAAiB,CACnCW,6BAA8B"}