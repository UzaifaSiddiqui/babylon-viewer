{"version":3,"file":"iblVoxelSlabDebug.vertex-D1jLh2qv.esm.min.js","sources":["../../../../../dev/core/dist/ShadersWGSL/iblVoxelSlabDebug.vertex.js"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\nconst name = \"iblVoxelSlabDebugVertexShader\";\nconst shader = `attribute position: vec3f;varying vNormalizedPosition: vec3f;uniform world: mat4x4f;uniform invWorldScale: mat4x4f;uniform cameraViewMatrix: mat4x4f;uniform projection: mat4x4f;uniform viewMatrix: mat4x4f;@vertex\nfn main(input : VertexInputs)->FragmentInputs {var worldPosition: vec4f=(uniforms.world* vec4f(input.position,1.));vertexOutputs.position=uniforms.projection*uniforms.cameraViewMatrix*worldPosition;vertexOutputs.vNormalizedPosition=(uniforms.viewMatrix*uniforms.invWorldScale*worldPosition).rgb;vertexOutputs.vNormalizedPosition=vertexOutputs.vNormalizedPosition* vec3f(0.5)+ vec3f(0.5);}`;\n// Sideeffect\nif (!ShaderStore.ShadersStoreWGSL[name]) {\n    ShaderStore.ShadersStoreWGSL[name] = shader;\n}\n/** @internal */\nexport const iblVoxelSlabDebugVertexShaderWGSL = { name, shader };\n//# sourceMappingURL=iblVoxelSlabDebug.vertex.js.map"],"names":["name","shader","ShaderStore","ShadersStoreWGSL","iblVoxelSlabDebugVertexShaderWGSL"],"mappings":"gDAEA,MAAMA,EAAO,gCACPC,EAAS,6lBAGVC,EAAYC,iBAAiBH,KAC9BE,EAAYC,iBAAiBH,GAAQC,GAG7B,MAACG,EAAoC,CAAEJ,OAAMC"}