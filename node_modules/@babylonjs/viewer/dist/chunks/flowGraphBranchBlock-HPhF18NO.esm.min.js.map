{"version":3,"file":"flowGraphBranchBlock-HPhF18NO.esm.min.js","sources":["../../../../../dev/core/dist/FlowGraph/Blocks/Execution/ControlFlow/flowGraphBranchBlock.js"],"sourcesContent":["import { RichTypeBoolean } from \"../../../flowGraphRichTypes\";\nimport { FlowGraphExecutionBlock } from \"../../../flowGraphExecutionBlock\";\nimport { RegisterClass } from \"../../../../Misc/typeStore\";\n/**\n * A block that evaluates a condition and activates one of two branches.\n */\nexport class FlowGraphBranchBlock extends FlowGraphExecutionBlock {\n    constructor(config) {\n        super(config);\n        this.condition = this.registerDataInput(\"condition\", RichTypeBoolean);\n        this.onTrue = this._registerSignalOutput(\"onTrue\");\n        this.onFalse = this._registerSignalOutput(\"onFalse\");\n    }\n    _execute(context) {\n        if (this.condition.getValue(context)) {\n            this.onTrue._activateSignal(context);\n        }\n        else {\n            this.onFalse._activateSignal(context);\n        }\n    }\n    /**\n     * @returns class name of the block.\n     */\n    getClassName() {\n        return \"FlowGraphBranchBlock\" /* FlowGraphBlockNames.Branch */;\n    }\n}\nRegisterClass(\"FlowGraphBranchBlock\" /* FlowGraphBlockNames.Branch */, FlowGraphBranchBlock);\n//# sourceMappingURL=flowGraphBranchBlock.js.map"],"names":["FlowGraphBranchBlock","FlowGraphExecutionBlock","constructor","config","super","this","condition","registerDataInput","RichTypeBoolean","onTrue","_registerSignalOutput","onFalse","_execute","context","getValue","_activateSignal","getClassName","RegisterClass"],"mappings":"yNAMO,MAAMA,UAA6BC,EACtC,WAAAC,CAAYC,GACRC,MAAMD,GACNE,KAAKC,UAAYD,KAAKE,kBAAkB,YAAaC,GACrDH,KAAKI,OAASJ,KAAKK,sBAAsB,UACzCL,KAAKM,QAAUN,KAAKK,sBAAsB,UAClD,CACI,QAAAE,CAASC,GACDR,KAAKC,UAAUQ,SAASD,GACxBR,KAAKI,OAAOM,gBAAgBF,GAG5BR,KAAKM,QAAQI,gBAAgBF,EAEzC,CAII,YAAAG,GACI,MAAO,sBACf,EAEAC,EAAc,uBAAyDjB"}