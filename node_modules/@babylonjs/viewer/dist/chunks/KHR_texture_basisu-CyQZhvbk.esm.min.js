import{GLTFLoader as e,ArrayItem as s}from"./glTFLoader-X6ZTOkAw.esm.min.js";import{bJ as t,bI as o}from"./index-VvGulz6u.esm.min.js";import"./bone-DPw1oOFK.esm.min.js";import"./skeleton-BDCw4yVL.esm.min.js";import"./rawTexture-B-F8SA5B.esm.min.js";import"./assetContainer-Da0Xx6Do.esm.min.js";import"./objectModelMapping-CghNRpa4.esm.min.js";const r="KHR_texture_basisu";class n{constructor(e){this.name=r,this._loader=e,this.enabled=e.isExtensionUsed(r)}dispose(){this._loader=null}_loadTextureAsync(t,o,r){return e.LoadExtensionAsync(t,o,this.name,(async(n,a)=>{const i=null==o.sampler?e.DefaultSampler:s.Get(`${t}/sampler`,this._loader.gltf.samplers,o.sampler),m=s.Get(`${n}/source`,this._loader.gltf.images,a.source);return await this._loader._createTextureAsync(t,i,m,(e=>{r(e)}),o._textureInfo.nonColorData?{useRGBAIfASTCBC7NotAvailableWhenUASTC:!0}:void 0,!o._textureInfo.nonColorData)}))}}t(r),o(r,!0,(e=>new n(e)));export{n as KHR_texture_basisu};
//# sourceMappingURL=KHR_texture_basisu-CyQZhvbk.esm.min.js.map
