{"version":3,"file":"flowGraphGetAssetBlock-CRd7Pdwa.esm.min.js","sources":["../../../../../dev/core/dist/FlowGraph/Blocks/Data/flowGraphGetAssetBlock.js"],"sourcesContent":["import { GetFlowGraphAssetWithType } from \"core/FlowGraph/flowGraphAssetsContext\";\nimport { FlowGraphBlock } from \"core/FlowGraph/flowGraphBlock\";\nimport { RichTypeAny } from \"core/FlowGraph/flowGraphRichTypes\";\nimport { RegisterClass } from \"core/Misc/typeStore\";\nimport { FlowGraphInteger } from \"core/FlowGraph/CustomTypes/flowGraphInteger\";\nimport { getNumericValue } from \"core/FlowGraph/utils\";\n/**\n * A block that will deliver an asset as an output, based on its type and place in the assets index.\n *\n * The assets are loaded from the assetsContext defined in the context running this block. The assetsContext is a class extending AbstractClass,\n * meaning it can be a Scene, an AssetsContainers, and any other class that extends AbstractClass.\n */\nexport class FlowGraphGetAssetBlock extends FlowGraphBlock {\n    constructor(\n    /**\n     * the configuration of the block\n     */\n    config) {\n        super(config);\n        this.config = config;\n        this.type = this.registerDataInput(\"type\", RichTypeAny, config.type);\n        this.value = this.registerDataOutput(\"value\", RichTypeAny);\n        this.index = this.registerDataInput(\"index\", RichTypeAny, new FlowGraphInteger(getNumericValue(config.index ?? -1)));\n    }\n    _updateOutputs(context) {\n        const type = this.type.getValue(context);\n        const index = this.index.getValue(context);\n        // get the asset from the context\n        const asset = GetFlowGraphAssetWithType(context.assetsContext, type, getNumericValue(index), this.config.useIndexAsUniqueId);\n        this.value.setValue(asset, context);\n    }\n    /**\n     * Gets the class name of this block\n     * @returns the class name\n     */\n    getClassName() {\n        return \"FlowGraphGetAssetBlock\" /* FlowGraphBlockNames.GetAsset */;\n    }\n}\nRegisterClass(\"FlowGraphGetAssetBlock\" /* FlowGraphBlockNames.GetAsset */, FlowGraphGetAssetBlock);\n//# sourceMappingURL=flowGraphGetAssetBlock.js.map"],"names":["FlowGraphGetAssetBlock","FlowGraphBlock","constructor","config","super","this","type","registerDataInput","RichTypeAny","value","registerDataOutput","index","FlowGraphInteger","getNumericValue","_updateOutputs","context","getValue","asset","GetFlowGraphAssetWithType","assetsContext","useIndexAsUniqueId","setValue","getClassName","RegisterClass"],"mappings":"8OAYO,MAAMA,UAA+BC,EACxC,WAAAC,CAIAC,GACIC,MAAMD,GACNE,KAAKF,OAASA,EACdE,KAAKC,KAAOD,KAAKE,kBAAkB,OAAQC,EAAaL,EAAOG,MAC/DD,KAAKI,MAAQJ,KAAKK,mBAAmB,QAASF,GAC9CH,KAAKM,MAAQN,KAAKE,kBAAkB,QAASC,EAAa,IAAII,EAAiBC,EAAgBV,EAAOQ,QAAS,IACvH,CACI,cAAAG,CAAeC,GACX,MAAMT,EAAOD,KAAKC,KAAKU,SAASD,GAC1BJ,EAAQN,KAAKM,MAAMK,SAASD,GAE5BE,EAAQC,EAA0BH,EAAQI,cAAeb,EAAMO,EAAgBF,GAAQN,KAAKF,OAAOiB,oBACzGf,KAAKI,MAAMY,SAASJ,EAAOF,EACnC,CAKI,YAAAO,GACI,MAAO,wBACf,EAEAC,EAAc,yBAA6DvB"}