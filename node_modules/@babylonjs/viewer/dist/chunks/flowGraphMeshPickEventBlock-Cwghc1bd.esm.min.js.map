{"version":3,"file":"flowGraphMeshPickEventBlock-Cwghc1bd.esm.min.js","sources":["../../../../../dev/core/dist/FlowGraph/Blocks/Event/flowGraphMeshPickEventBlock.js"],"sourcesContent":["import { FlowGraphEventBlock } from \"../../flowGraphEventBlock\";\nimport { PointerEventTypes } from \"../../../Events/pointerEvents\";\nimport { RegisterClass } from \"../../../Misc/typeStore\";\nimport { _IsDescendantOf } from \"../../utils\";\nimport { RichTypeAny, RichTypeNumber, RichTypeVector3 } from \"core/FlowGraph/flowGraphRichTypes\";\n/**\n * A block that activates when a mesh is picked.\n */\nexport class FlowGraphMeshPickEventBlock extends FlowGraphEventBlock {\n    constructor(\n    /**\n     * the configuration of the block\n     */\n    config) {\n        super(config);\n        this.config = config;\n        /**\n         * the type of the event this block reacts to\n         */\n        this.type = \"MeshPick\" /* FlowGraphEventType.MeshPick */;\n        this.asset = this.registerDataInput(\"asset\", RichTypeAny, config?.targetMesh);\n        this.pickedPoint = this.registerDataOutput(\"pickedPoint\", RichTypeVector3);\n        this.pickOrigin = this.registerDataOutput(\"pickOrigin\", RichTypeVector3);\n        this.pointerId = this.registerDataOutput(\"pointerId\", RichTypeNumber);\n        this.pickedMesh = this.registerDataOutput(\"pickedMesh\", RichTypeAny);\n        this.pointerType = this.registerDataInput(\"pointerType\", RichTypeAny, PointerEventTypes.POINTERPICK);\n    }\n    _getReferencedMesh(context) {\n        return this.asset.getValue(context);\n    }\n    _executeEvent(context, pickedInfo) {\n        // get the pointer type\n        const pointerType = this.pointerType.getValue(context);\n        if (pointerType !== pickedInfo.type) {\n            // returning true here to continue the propagation of the pointer event to the rest of the blocks\n            return true;\n        }\n        // check if the mesh is the picked mesh or a descendant\n        const mesh = this._getReferencedMesh(context);\n        if (mesh && pickedInfo.pickInfo?.pickedMesh && (pickedInfo.pickInfo?.pickedMesh === mesh || _IsDescendantOf(pickedInfo.pickInfo?.pickedMesh, mesh))) {\n            this.pointerId.setValue(pickedInfo.event.pointerId, context);\n            this.pickOrigin.setValue(pickedInfo.pickInfo.ray?.origin, context);\n            this.pickedPoint.setValue(pickedInfo.pickInfo.pickedPoint, context);\n            this.pickedMesh.setValue(pickedInfo.pickInfo.pickedMesh, context);\n            this._execute(context);\n            // stop the propagation if the configuration says so\n            return !this.config?.stopPropagation;\n        }\n        else {\n            // reset the outputs\n            this.pointerId.resetToDefaultValue(context);\n            this.pickOrigin.resetToDefaultValue(context);\n            this.pickedPoint.resetToDefaultValue(context);\n            this.pickedMesh.resetToDefaultValue(context);\n        }\n        return true;\n    }\n    /**\n     * @internal\n     */\n    _preparePendingTasks(_context) {\n        // no-op\n    }\n    /**\n     * @internal\n     */\n    _cancelPendingTasks(_context) {\n        // no-op\n    }\n    /**\n     * @returns class name of the block.\n     */\n    getClassName() {\n        return \"FlowGraphMeshPickEventBlock\" /* FlowGraphBlockNames.MeshPickEvent */;\n    }\n}\nRegisterClass(\"FlowGraphMeshPickEventBlock\" /* FlowGraphBlockNames.MeshPickEvent */, FlowGraphMeshPickEventBlock);\n//# sourceMappingURL=flowGraphMeshPickEventBlock.js.map"],"names":["FlowGraphMeshPickEventBlock","FlowGraphEventBlock","constructor","config","super","this","type","asset","registerDataInput","RichTypeAny","targetMesh","pickedPoint","registerDataOutput","RichTypeVector3","pickOrigin","pointerId","RichTypeNumber","pickedMesh","pointerType","PointerEventTypes","POINTERPICK","_getReferencedMesh","context","getValue","_executeEvent","pickedInfo","mesh","pickInfo","_IsDescendantOf","setValue","event","ray","origin","_execute","stopPropagation","resetToDefaultValue","_preparePendingTasks","_context","_cancelPendingTasks","getClassName","RegisterClass"],"mappings":"sPAQO,MAAMA,UAAoCC,EAC7C,WAAAC,CAIAC,GACIC,MAAMD,GACNE,KAAKF,OAASA,EAIdE,KAAKC,KAAO,WACZD,KAAKE,MAAQF,KAAKG,kBAAkB,QAASC,EAAaN,GAAQO,YAClEL,KAAKM,YAAcN,KAAKO,mBAAmB,cAAeC,GAC1DR,KAAKS,WAAaT,KAAKO,mBAAmB,aAAcC,GACxDR,KAAKU,UAAYV,KAAKO,mBAAmB,YAAaI,GACtDX,KAAKY,WAAaZ,KAAKO,mBAAmB,aAAcH,GACxDJ,KAAKa,YAAcb,KAAKG,kBAAkB,cAAeC,EAAaU,EAAkBC,YAChG,CACI,kBAAAC,CAAmBC,GACf,OAAOjB,KAAKE,MAAMgB,SAASD,EACnC,CACI,aAAAE,CAAcF,EAASG,GAGnB,GADoBpB,KAAKa,YAAYK,SAASD,KAC1BG,EAAWnB,KAE3B,OAAO,EAGX,MAAMoB,EAAOrB,KAAKgB,mBAAmBC,GACrC,OAAII,GAAQD,EAAWE,UAAUV,aAAeQ,EAAWE,UAAUV,aAAeS,GAAQE,EAAgBH,EAAWE,UAAUV,WAAYS,KACzIrB,KAAKU,UAAUc,SAASJ,EAAWK,MAAMf,UAAWO,GACpDjB,KAAKS,WAAWe,SAASJ,EAAWE,SAASI,KAAKC,OAAQV,GAC1DjB,KAAKM,YAAYkB,SAASJ,EAAWE,SAAShB,YAAaW,GAC3DjB,KAAKY,WAAWY,SAASJ,EAAWE,SAASV,WAAYK,GACzDjB,KAAK4B,SAASX,IAENjB,KAAKF,QAAQ+B,kBAIrB7B,KAAKU,UAAUoB,oBAAoBb,GACnCjB,KAAKS,WAAWqB,oBAAoBb,GACpCjB,KAAKM,YAAYwB,oBAAoBb,GACrCjB,KAAKY,WAAWkB,oBAAoBb,IAEjC,EACf,CAII,oBAAAc,CAAqBC,GAEzB,CAII,mBAAAC,CAAoBD,GAExB,CAII,YAAAE,GACI,MAAO,6BACf,EAEAC,EAAc,8BAAuExC"}