{"version":3,"file":"KHR_draco_mesh_compression-AmE41If_.esm.js","sources":["../../../../../dev/core/dist/Meshes/Compression/dracoCompressionWorker.js","../../../../../dev/core/dist/Meshes/Compression/dracoCodec.js","../../../../../dev/core/dist/Meshes/Compression/dracoDecoder.js","../../../../../dev/loaders/dist/glTF/2.0/Extensions/KHR_draco_mesh_compression.js"],"sourcesContent":["/**\n * @internal\n */\nexport function EncodeMesh(module /** EncoderModule */, attributes, indices, options) {\n    const encoderModule = module;\n    let encoder = null;\n    let meshBuilder = null;\n    let mesh = null;\n    let encodedNativeBuffer = null;\n    const attributeIDs = {}; // Babylon kind -> Draco unique id\n    // Double-check that at least a position attribute is provided\n    const positionAttribute = attributes.find((a) => a.dracoName === \"POSITION\");\n    if (!positionAttribute) {\n        throw new Error(\"Position attribute is required for Draco encoding\");\n    }\n    // If no indices are provided, assume mesh is unindexed. Let's generate them, since Draco meshes require them.\n    // TODO: This may be the POINT_CLOUD case, but need to investigate. Should work for now-- just less efficient.\n    if (!indices) {\n        // Assume position attribute is the largest attribute.\n        const positionVerticesCount = positionAttribute.data.length / positionAttribute.size;\n        indices = new (positionVerticesCount > 65535 ? Uint32Array : Uint16Array)(positionVerticesCount);\n        for (let i = 0; i < positionVerticesCount; i++) {\n            indices[i] = i;\n        }\n    }\n    try {\n        encoder = new encoderModule.Encoder();\n        meshBuilder = new encoderModule.MeshBuilder();\n        mesh = new encoderModule.Mesh();\n        // Add the faces\n        meshBuilder.AddFacesToMesh(mesh, indices.length / 3, indices);\n        const addAttributeMap = new Map([\n            [Float32Array, (mb, m, a, c, s, d) => mb.AddFloatAttribute(m, a, c, s, d)],\n            [Uint32Array, (mb, m, a, c, s, d) => mb.AddUInt32Attribute(m, a, c, s, d)],\n            [Uint16Array, (mb, m, a, c, s, d) => mb.AddUInt16Attribute(m, a, c, s, d)],\n            [Uint8Array, (mb, m, a, c, s, d) => mb.AddUInt8Attribute(m, a, c, s, d)],\n            [Int32Array, (mb, m, a, c, s, d) => mb.AddInt32Attribute(m, a, c, s, d)],\n            [Int16Array, (mb, m, a, c, s, d) => mb.AddInt16Attribute(m, a, c, s, d)],\n            [Int8Array, (mb, m, a, c, s, d) => mb.AddInt8Attribute(m, a, c, s, d)],\n        ]);\n        // Add the attributes\n        for (const attribute of attributes) {\n            if (attribute.data instanceof Uint8ClampedArray) {\n                attribute.data = new Uint8Array(attribute.data); // Draco does not support Uint8ClampedArray\n            }\n            const addAttribute = addAttributeMap.get(attribute.data.constructor);\n            const verticesCount = attribute.data.length / attribute.size;\n            attributeIDs[attribute.kind] = addAttribute(meshBuilder, mesh, encoderModule[attribute.dracoName], verticesCount, attribute.size, attribute.data);\n            if (options.quantizationBits && options.quantizationBits[attribute.dracoName]) {\n                encoder.SetAttributeQuantization(encoderModule[attribute.dracoName], options.quantizationBits[attribute.dracoName]);\n            }\n        }\n        // Set the options\n        if (options.method) {\n            encoder.SetEncodingMethod(encoderModule[options.method]);\n        }\n        if (options.encodeSpeed !== undefined && options.decodeSpeed !== undefined) {\n            encoder.SetSpeedOptions(options.encodeSpeed, options.decodeSpeed);\n        }\n        // Encode to native buffer\n        encodedNativeBuffer = new encoderModule.DracoInt8Array();\n        const encodedLength = encoder.EncodeMeshToDracoBuffer(mesh, encodedNativeBuffer);\n        if (encodedLength <= 0) {\n            throw new Error(\"Draco encoding failed.\");\n        }\n        // Copy the native buffer data to worker heap\n        const encodedData = new Int8Array(encodedLength);\n        for (let i = 0; i < encodedLength; i++) {\n            encodedData[i] = encodedNativeBuffer.GetValue(i);\n        }\n        return { data: encodedData, attributeIds: attributeIDs };\n    }\n    finally {\n        if (mesh) {\n            encoderModule.destroy(mesh);\n        }\n        if (meshBuilder) {\n            encoderModule.destroy(meshBuilder);\n        }\n        if (encoder) {\n            encoderModule.destroy(encoder);\n        }\n        if (encodedNativeBuffer) {\n            encoderModule.destroy(encodedNativeBuffer);\n        }\n    }\n}\n/**\n * The worker function that gets converted to a blob url to pass into a worker.\n * To be used if a developer wants to create their own worker instance and inject it instead of using the default worker.\n */\nexport function EncoderWorkerFunction() {\n    let encoderPromise;\n    onmessage = (event) => {\n        const message = event.data;\n        switch (message.id) {\n            case \"init\": {\n                // if URL is provided then load the script. Otherwise expect the script to be loaded already\n                if (message.url) {\n                    importScripts(message.url);\n                }\n                const initEncoderObject = message.wasmBinary ? { wasmBinary: message.wasmBinary } : {};\n                encoderPromise = DracoEncoderModule(initEncoderObject);\n                postMessage({ id: \"initDone\" });\n                break;\n            }\n            case \"encodeMesh\": {\n                if (!encoderPromise) {\n                    throw new Error(\"Draco encoder module is not available\");\n                }\n                // eslint-disable-next-line github/no-then\n                encoderPromise.then((encoder) => {\n                    const result = EncodeMesh(encoder, message.attributes, message.indices, message.options);\n                    postMessage({ id: \"encodeMeshDone\", encodedMeshData: result }, result ? [result.data.buffer] : undefined);\n                });\n                break;\n            }\n        }\n    };\n}\n/**\n * @internal\n */\nexport function DecodeMesh(module /** DecoderModule */, data, attributeIDs, onIndicesData, onAttributeData) {\n    const decoderModule = module;\n    let decoder = null;\n    let buffer = null;\n    let geometry = null;\n    try {\n        decoder = new decoderModule.Decoder();\n        buffer = new decoderModule.DecoderBuffer();\n        buffer.Init(data, data.byteLength);\n        let status;\n        const type = decoder.GetEncodedGeometryType(buffer);\n        switch (type) {\n            case decoderModule.TRIANGULAR_MESH: {\n                const mesh = new decoderModule.Mesh();\n                status = decoder.DecodeBufferToMesh(buffer, mesh);\n                if (!status.ok() || mesh.ptr === 0) {\n                    throw new Error(status.error_msg());\n                }\n                const numFaces = mesh.num_faces();\n                const numIndices = numFaces * 3;\n                const byteLength = numIndices * 4;\n                const ptr = decoderModule._malloc(byteLength);\n                try {\n                    decoder.GetTrianglesUInt32Array(mesh, byteLength, ptr);\n                    const indices = new Uint32Array(numIndices);\n                    indices.set(new Uint32Array(decoderModule.HEAPF32.buffer, ptr, numIndices));\n                    onIndicesData(indices);\n                }\n                finally {\n                    decoderModule._free(ptr);\n                }\n                geometry = mesh;\n                break;\n            }\n            case decoderModule.POINT_CLOUD: {\n                const pointCloud = new decoderModule.PointCloud();\n                status = decoder.DecodeBufferToPointCloud(buffer, pointCloud);\n                if (!status.ok() || !pointCloud.ptr) {\n                    throw new Error(status.error_msg());\n                }\n                geometry = pointCloud;\n                break;\n            }\n            default: {\n                throw new Error(`Invalid geometry type ${type}`);\n            }\n        }\n        const numPoints = geometry.num_points();\n        const processAttribute = (decoder, geometry, kind, attribute /** Attribute */) => {\n            const dataType = attribute.data_type();\n            const numComponents = attribute.num_components();\n            const normalized = attribute.normalized();\n            const byteStride = attribute.byte_stride();\n            const byteOffset = attribute.byte_offset();\n            const dataTypeInfo = {\n                [decoderModule.DT_FLOAT32]: { typedArrayConstructor: Float32Array, heap: decoderModule.HEAPF32 },\n                [decoderModule.DT_INT8]: { typedArrayConstructor: Int8Array, heap: decoderModule.HEAP8 },\n                [decoderModule.DT_INT16]: { typedArrayConstructor: Int16Array, heap: decoderModule.HEAP16 },\n                [decoderModule.DT_INT32]: { typedArrayConstructor: Int32Array, heap: decoderModule.HEAP32 },\n                [decoderModule.DT_UINT8]: { typedArrayConstructor: Uint8Array, heap: decoderModule.HEAPU8 },\n                [decoderModule.DT_UINT16]: { typedArrayConstructor: Uint16Array, heap: decoderModule.HEAPU16 },\n                [decoderModule.DT_UINT32]: { typedArrayConstructor: Uint32Array, heap: decoderModule.HEAPU32 },\n            };\n            const info = dataTypeInfo[dataType];\n            if (!info) {\n                throw new Error(`Invalid data type ${dataType}`);\n            }\n            const numValues = numPoints * numComponents;\n            const byteLength = numValues * info.typedArrayConstructor.BYTES_PER_ELEMENT;\n            const ptr = decoderModule._malloc(byteLength);\n            try {\n                decoder.GetAttributeDataArrayForAllPoints(geometry, attribute, dataType, byteLength, ptr);\n                const data = new info.typedArrayConstructor(info.heap.buffer, ptr, numValues);\n                onAttributeData(kind, data.slice(), numComponents, byteOffset, byteStride, normalized);\n            }\n            finally {\n                decoderModule._free(ptr);\n            }\n        };\n        if (attributeIDs) {\n            for (const kind in attributeIDs) {\n                const id = attributeIDs[kind];\n                const attribute = decoder.GetAttributeByUniqueId(geometry, id);\n                processAttribute(decoder, geometry, kind, attribute);\n            }\n        }\n        else {\n            const dracoAttributeTypes = {\n                position: decoderModule.POSITION,\n                normal: decoderModule.NORMAL,\n                color: decoderModule.COLOR,\n                uv: decoderModule.TEX_COORD,\n            };\n            for (const kind in dracoAttributeTypes) {\n                const id = decoder.GetAttributeId(geometry, dracoAttributeTypes[kind]);\n                if (id !== -1) {\n                    const attribute = decoder.GetAttribute(geometry, id);\n                    processAttribute(decoder, geometry, kind, attribute);\n                }\n            }\n        }\n        return numPoints;\n    }\n    finally {\n        if (geometry) {\n            decoderModule.destroy(geometry);\n        }\n        if (buffer) {\n            decoderModule.destroy(buffer);\n        }\n        if (decoder) {\n            decoderModule.destroy(decoder);\n        }\n    }\n}\n/**\n * The worker function that gets converted to a blob url to pass into a worker.\n * To be used if a developer wants to create their own worker instance and inject it instead of using the default worker.\n */\nexport function DecoderWorkerFunction() {\n    let decoderPromise;\n    onmessage = (event) => {\n        const message = event.data;\n        switch (message.id) {\n            case \"init\": {\n                // if URL is provided then load the script. Otherwise expect the script to be loaded already\n                if (message.url) {\n                    importScripts(message.url);\n                }\n                const initDecoderObject = message.wasmBinary ? { wasmBinary: message.wasmBinary } : {};\n                decoderPromise = DracoDecoderModule(initDecoderObject);\n                postMessage({ id: \"initDone\" });\n                break;\n            }\n            case \"decodeMesh\": {\n                if (!decoderPromise) {\n                    throw new Error(\"Draco decoder module is not available\");\n                }\n                // eslint-disable-next-line github/no-then\n                decoderPromise.then((decoder) => {\n                    const numPoints = DecodeMesh(decoder, message.dataView, message.attributes, (indices) => {\n                        postMessage({ id: \"indices\", data: indices }, [indices.buffer]);\n                    }, (kind, data, size, offset, stride, normalized) => {\n                        postMessage({ id: \"attribute\", kind, data, size, byteOffset: offset, byteStride: stride, normalized }, [data.buffer]);\n                    });\n                    postMessage({ id: \"decodeMeshDone\", totalVertices: numPoints });\n                });\n                break;\n            }\n        }\n    };\n}\n// For backwards compatibility\nexport { DecoderWorkerFunction as workerFunction };\n/**\n * Initializes a worker that was created for the draco agent pool\n * @param worker  The worker to initialize\n * @param wasmBinary The wasm binary to load into the worker\n * @param moduleUrl The url to the draco decoder module (optional)\n * @returns A promise that resolves when the worker is initialized\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport async function initializeWebWorker(worker, wasmBinary, moduleUrl) {\n    return await new Promise((resolve, reject) => {\n        const onError = (error) => {\n            worker.removeEventListener(\"error\", onError);\n            worker.removeEventListener(\"message\", onMessage);\n            // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n            reject(error);\n        };\n        const onMessage = (event) => {\n            if (event.data.id === \"initDone\") {\n                worker.removeEventListener(\"error\", onError);\n                worker.removeEventListener(\"message\", onMessage);\n                resolve(worker);\n            }\n        };\n        worker.addEventListener(\"error\", onError);\n        worker.addEventListener(\"message\", onMessage);\n        // Load with either JS-only or WASM version\n        if (!wasmBinary) {\n            worker.postMessage({\n                id: \"init\",\n                url: moduleUrl,\n            });\n        }\n        else {\n            // clone the array buffer to make it transferable\n            const clone = wasmBinary.slice(0);\n            worker.postMessage({\n                id: \"init\",\n                url: moduleUrl,\n                wasmBinary: clone,\n            }, [clone]);\n        }\n        // note: no transfer list as the ArrayBuffer is shared across main thread and pool workers\n    });\n}\n//# sourceMappingURL=dracoCompressionWorker.js.map","import { Tools } from \"../../Misc/tools\";\nimport { AutoReleaseWorkerPool } from \"../../Misc/workerPool\";\nimport { initializeWebWorker } from \"./dracoCompressionWorker\";\n/**\n * @internal\n */\nexport function _GetDefaultNumWorkers() {\n    if (typeof navigator !== \"object\" || !navigator.hardwareConcurrency) {\n        return 1;\n    }\n    // Use 50% of the available logical processors but capped at 4.\n    return Math.min(Math.floor(navigator.hardwareConcurrency * 0.5), 4);\n}\n/**\n * @internal\n */\nexport function _IsConfigurationAvailable(config) {\n    return !!((config.wasmUrl && (config.wasmBinary || config.wasmBinaryUrl) && typeof WebAssembly === \"object\") || config.fallbackUrl);\n    // TODO: Account for jsModule\n}\n/**\n * Base class for a Draco codec.\n * @internal\n */\nexport class DracoCodec {\n    /**\n     * Constructor\n     * @param configuration The configuration for the DracoCodec instance.\n     */\n    constructor(configuration) {\n        // check if the codec binary and worker pool was injected\n        // Note - it is expected that the developer checked if WebWorker, WebAssembly and the URL object are available\n        if (configuration.workerPool) {\n            // Set the promise accordingly\n            this._workerPoolPromise = Promise.resolve(configuration.workerPool);\n            return;\n        }\n        // to avoid making big changes to the code here, if wasmBinary is provided use it in the wasmBinaryPromise\n        const wasmBinaryProvided = configuration.wasmBinary;\n        const numberOfWorkers = configuration.numWorkers ?? _GetDefaultNumWorkers();\n        const useWorkers = numberOfWorkers && typeof Worker === \"function\" && typeof URL === \"function\";\n        const urlNeeded = useWorkers || !configuration.jsModule;\n        // code maintained here for back-compat with no changes\n        const codecInfo = configuration.wasmUrl && configuration.wasmBinaryUrl && typeof WebAssembly === \"object\"\n            ? {\n                url: urlNeeded ? Tools.GetBabylonScriptURL(configuration.wasmUrl, true) : \"\",\n                wasmBinaryPromise: wasmBinaryProvided\n                    ? Promise.resolve(wasmBinaryProvided)\n                    : Tools.LoadFileAsync(Tools.GetBabylonScriptURL(configuration.wasmBinaryUrl, true)),\n            }\n            : {\n                url: urlNeeded ? Tools.GetBabylonScriptURL(configuration.fallbackUrl) : \"\",\n                wasmBinaryPromise: Promise.resolve(undefined),\n            };\n        // If using workers, initialize a worker pool with either the wasm or url?\n        if (useWorkers) {\n            // eslint-disable-next-line github/no-then\n            this._workerPoolPromise = codecInfo.wasmBinaryPromise.then((wasmBinary) => {\n                const workerContent = this._getWorkerContent();\n                const workerBlobUrl = URL.createObjectURL(new Blob([workerContent], { type: \"application/javascript\" }));\n                // eslint-disable-next-line @typescript-eslint/promise-function-async\n                return new AutoReleaseWorkerPool(numberOfWorkers, () => {\n                    const worker = new Worker(workerBlobUrl);\n                    return initializeWebWorker(worker, wasmBinary, codecInfo.url);\n                });\n            });\n        }\n        else {\n            // eslint-disable-next-line github/no-then\n            this._modulePromise = codecInfo.wasmBinaryPromise.then(async (wasmBinary) => {\n                if (!this._isModuleAvailable()) {\n                    if (!configuration.jsModule) {\n                        if (!codecInfo.url) {\n                            throw new Error(\"Draco codec module is not available\");\n                        }\n                        await Tools.LoadBabylonScriptAsync(codecInfo.url);\n                    }\n                }\n                return await this._createModuleAsync(wasmBinary, configuration.jsModule);\n            });\n        }\n    }\n    /**\n     * Returns a promise that resolves when ready. Call this manually to ensure the draco codec is ready before use.\n     * @returns a promise that resolves when ready\n     */\n    async whenReadyAsync() {\n        if (this._workerPoolPromise) {\n            await this._workerPoolPromise;\n            return;\n        }\n        if (this._modulePromise) {\n            await this._modulePromise;\n            return;\n        }\n    }\n    /**\n     * Stop all async operations and release resources.\n     */\n    dispose() {\n        if (this._workerPoolPromise) {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises, github/no-then\n            this._workerPoolPromise.then((workerPool) => {\n                workerPool.dispose();\n            });\n        }\n        delete this._workerPoolPromise;\n        delete this._modulePromise;\n    }\n}\n//# sourceMappingURL=dracoCodec.js.map","import { _IsConfigurationAvailable, DracoCodec } from \"./dracoCodec\";\nimport { Tools } from \"../../Misc/tools\";\nimport { Geometry } from \"../geometry\";\nimport { VertexBuffer } from \"../buffer\";\nimport { Logger } from \"../../Misc/logger\";\nimport { DecodeMesh, DecoderWorkerFunction } from \"./dracoCompressionWorker\";\n/**\n * @experimental This class is an experimental version of `DracoCompression` and is subject to change.\n *\n * Draco Decoder (https://google.github.io/draco/)\n *\n * This class wraps the Draco decoder module.\n *\n * By default, the configuration points to a copy of the Draco decoder files for glTF from the Babylon.js cdn https://cdn.babylonjs.com/draco_wasm_wrapper_gltf.js.\n *\n * To update the configuration, use the following code:\n * ```javascript\n *     DracoDecoder.DefaultConfiguration = {\n *          wasmUrl: \"<url to the WebAssembly library>\",\n *          wasmBinaryUrl: \"<url to the WebAssembly binary>\",\n *          fallbackUrl: \"<url to the fallback JavaScript library>\",\n *     };\n * ```\n *\n * Draco has two versions, one for WebAssembly and one for JavaScript. The decoder configuration can be set to only support WebAssembly or only support the JavaScript version.\n * Decoding will automatically fallback to the JavaScript version if WebAssembly version is not configured or if WebAssembly is not supported by the browser.\n * Use `DracoDecoder.DefaultAvailable` to determine if the decoder configuration is available for the current context.\n *\n * To decode Draco compressed data, get the default DracoDecoder object and call decodeMeshToGeometryAsync:\n * ```javascript\n *     var geometry = await DracoDecoder.Default.decodeMeshToGeometryAsync(data);\n * ```\n */\nexport class DracoDecoder extends DracoCodec {\n    /**\n     * Returns true if the decoder's `DefaultConfiguration` is available.\n     */\n    static get DefaultAvailable() {\n        return _IsConfigurationAvailable(DracoDecoder.DefaultConfiguration);\n    }\n    /**\n     * Default instance for the DracoDecoder.\n     */\n    static get Default() {\n        DracoDecoder._Default ??= new DracoDecoder();\n        return DracoDecoder._Default;\n    }\n    /**\n     * Reset the default DracoDecoder object to null and disposing the removed default instance.\n     * Note that if the workerPool is a member of the static DefaultConfiguration object it is recommended not to run dispose,\n     * unless the static worker pool is no longer needed.\n     * @param skipDispose set to true to not dispose the removed default instance\n     */\n    static ResetDefault(skipDispose) {\n        if (DracoDecoder._Default) {\n            if (!skipDispose) {\n                DracoDecoder._Default.dispose();\n            }\n            DracoDecoder._Default = null;\n        }\n    }\n    _isModuleAvailable() {\n        return typeof DracoDecoderModule !== \"undefined\";\n    }\n    async _createModuleAsync(wasmBinary, jsModule /** DracoDecoderModule */) {\n        const module = await (jsModule || DracoDecoderModule)({ wasmBinary });\n        return { module };\n    }\n    _getWorkerContent() {\n        return `${DecodeMesh}(${DecoderWorkerFunction})()`;\n    }\n    /**\n     * Creates a new Draco decoder.\n     * @param configuration Optional override of the configuration for the DracoDecoder. If not provided, defaults to {@link DracoDecoder.DefaultConfiguration}.\n     */\n    constructor(configuration = DracoDecoder.DefaultConfiguration) {\n        super(configuration);\n    }\n    /**\n     * Decode Draco compressed mesh data to mesh data.\n     * @param data The ArrayBuffer or ArrayBufferView of the compressed Draco data\n     * @param attributes A map of attributes from vertex buffer kinds to Draco unique ids\n     * @param gltfNormalizedOverride A map of attributes from vertex buffer kinds to normalized flags to override the Draco normalization\n     * @returns A promise that resolves with the decoded mesh data\n     */\n    // eslint-disable-next-line @typescript-eslint/promise-function-async, no-restricted-syntax\n    decodeMeshToMeshDataAsync(data, attributes, gltfNormalizedOverride) {\n        const dataView = data instanceof ArrayBuffer ? new Int8Array(data) : new Int8Array(data.buffer, data.byteOffset, data.byteLength);\n        const applyGltfNormalizedOverride = (kind, normalized) => {\n            if (gltfNormalizedOverride && gltfNormalizedOverride[kind] !== undefined) {\n                if (normalized !== gltfNormalizedOverride[kind]) {\n                    Logger.Warn(`Normalized flag from Draco data (${normalized}) does not match normalized flag from glTF accessor (${gltfNormalizedOverride[kind]}). Using flag from glTF accessor.`);\n                }\n                return gltfNormalizedOverride[kind];\n            }\n            else {\n                return normalized;\n            }\n        };\n        if (this._workerPoolPromise) {\n            // eslint-disable-next-line github/no-then\n            return this._workerPoolPromise.then(async (workerPool) => {\n                return await new Promise((resolve, reject) => {\n                    workerPool.push((worker, onComplete) => {\n                        let resultIndices = null;\n                        const resultAttributes = [];\n                        const onError = (error) => {\n                            worker.removeEventListener(\"error\", onError);\n                            worker.removeEventListener(\"message\", onMessage);\n                            // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n                            reject(error);\n                            onComplete();\n                        };\n                        const onMessage = (event) => {\n                            const message = event.data;\n                            switch (message.id) {\n                                case \"indices\": {\n                                    resultIndices = message.data;\n                                    break;\n                                }\n                                case \"attribute\": {\n                                    resultAttributes.push({\n                                        kind: message.kind,\n                                        data: message.data,\n                                        size: message.size,\n                                        byteOffset: message.byteOffset,\n                                        byteStride: message.byteStride,\n                                        normalized: applyGltfNormalizedOverride(message.kind, message.normalized),\n                                    });\n                                    break;\n                                }\n                                case \"decodeMeshDone\": {\n                                    worker.removeEventListener(\"error\", onError);\n                                    worker.removeEventListener(\"message\", onMessage);\n                                    resolve({ indices: resultIndices, attributes: resultAttributes, totalVertices: message.totalVertices });\n                                    onComplete();\n                                    break;\n                                }\n                            }\n                        };\n                        worker.addEventListener(\"error\", onError);\n                        worker.addEventListener(\"message\", onMessage);\n                        const dataViewCopy = dataView.slice();\n                        worker.postMessage({ id: \"decodeMesh\", dataView: dataViewCopy, attributes: attributes }, [dataViewCopy.buffer]);\n                    });\n                });\n            });\n        }\n        if (this._modulePromise) {\n            // eslint-disable-next-line github/no-then\n            return this._modulePromise.then((decoder) => {\n                let resultIndices = null;\n                const resultAttributes = [];\n                const numPoints = DecodeMesh(decoder.module, dataView, attributes, (indices) => {\n                    resultIndices = indices;\n                }, (kind, data, size, byteOffset, byteStride, normalized) => {\n                    resultAttributes.push({\n                        kind,\n                        data,\n                        size,\n                        byteOffset,\n                        byteStride,\n                        normalized,\n                    });\n                });\n                return { indices: resultIndices, attributes: resultAttributes, totalVertices: numPoints };\n            });\n        }\n        throw new Error(\"Draco decoder module is not available\");\n    }\n    /**\n     * Decode Draco compressed mesh data to Babylon geometry.\n     * @param name The name to use when creating the geometry\n     * @param scene The scene to use when creating the geometry\n     * @param data The ArrayBuffer or ArrayBufferView of the Draco compressed data\n     * @param attributes A map of attributes from vertex buffer kinds to Draco unique ids\n     * @returns A promise that resolves with the decoded geometry\n     */\n    async decodeMeshToGeometryAsync(name, scene, data, attributes) {\n        const meshData = await this.decodeMeshToMeshDataAsync(data, attributes);\n        const geometry = new Geometry(name, scene);\n        if (meshData.indices) {\n            geometry.setIndices(meshData.indices);\n        }\n        for (const attribute of meshData.attributes) {\n            geometry.setVerticesBuffer(new VertexBuffer(scene.getEngine(), attribute.data, attribute.kind, false, undefined, attribute.byteStride, undefined, attribute.byteOffset, attribute.size, undefined, attribute.normalized, true), meshData.totalVertices);\n        }\n        return geometry;\n    }\n    /** @internal */\n    async _decodeMeshToGeometryForGltfAsync(name, scene, data, attributes, gltfNormalizedOverride, boundingInfo) {\n        const meshData = await this.decodeMeshToMeshDataAsync(data, attributes, gltfNormalizedOverride);\n        const geometry = new Geometry(name, scene);\n        if (boundingInfo) {\n            geometry._boundingInfo = boundingInfo;\n            geometry.useBoundingInfoFromGeometry = true;\n        }\n        if (meshData.indices) {\n            geometry.setIndices(meshData.indices);\n        }\n        for (const attribute of meshData.attributes) {\n            geometry.setVerticesBuffer(new VertexBuffer(scene.getEngine(), attribute.data, attribute.kind, false, undefined, attribute.byteStride, undefined, attribute.byteOffset, attribute.size, undefined, attribute.normalized, true), meshData.totalVertices);\n        }\n        return geometry;\n    }\n}\n/**\n * Default configuration for the DracoDecoder. Defaults to the following:\n * - numWorkers: 50% of the available logical processors, capped to 4. If no logical processors are available, defaults to 1.\n * - wasmUrl: `\"https://cdn.babylonjs.com/draco_wasm_wrapper_gltf.js\"`\n * - wasmBinaryUrl: `\"https://cdn.babylonjs.com/draco_decoder_gltf.wasm\"`\n * - fallbackUrl: `\"https://cdn.babylonjs.com/draco_decoder_gltf.js\"`\n */\nDracoDecoder.DefaultConfiguration = {\n    wasmUrl: `${Tools._DefaultCdnUrl}/draco_wasm_wrapper_gltf.js`,\n    wasmBinaryUrl: `${Tools._DefaultCdnUrl}/draco_decoder_gltf.wasm`,\n    fallbackUrl: `${Tools._DefaultCdnUrl}/draco_decoder_gltf.js`,\n};\nDracoDecoder._Default = null;\n//# sourceMappingURL=dracoDecoder.js.map","/* eslint-disable github/no-then */\nimport { DracoDecoder } from \"core/Meshes/Compression/dracoDecoder\";\nimport { VertexBuffer } from \"core/Buffers/buffer\";\nimport { GLTFLoader, ArrayItem, LoadBoundingInfoFromPositionAccessor } from \"../glTFLoader\";\nimport { registerGLTFExtension, unregisterGLTFExtension } from \"../glTFLoaderExtensionRegistry\";\nconst NAME = \"KHR_draco_mesh_compression\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_draco_mesh_compression/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class KHR_draco_mesh_compression {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        /**\n         * Defines whether to use the normalized flag from the glTF accessor instead of the Draco data. Defaults to true.\n         */\n        this.useNormalizedFlagFromAccessor = true;\n        this._loader = loader;\n        this.enabled = DracoDecoder.DefaultAvailable && this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        delete this.dracoDecoder;\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    // eslint-disable-next-line no-restricted-syntax\n    _loadVertexDataAsync(context, primitive, babylonMesh) {\n        return GLTFLoader.LoadExtensionAsync(context, primitive, this.name, async (extensionContext, extension) => {\n            if (primitive.mode != undefined) {\n                if (primitive.mode !== 4 /* MeshPrimitiveMode.TRIANGLES */ && primitive.mode !== 5 /* MeshPrimitiveMode.TRIANGLE_STRIP */) {\n                    throw new Error(`${context}: Unsupported mode ${primitive.mode}`);\n                }\n            }\n            const attributes = {};\n            const normalized = {};\n            const loadAttribute = (name, kind) => {\n                const uniqueId = extension.attributes[name];\n                if (uniqueId == undefined) {\n                    return;\n                }\n                babylonMesh._delayInfo = babylonMesh._delayInfo || [];\n                if (babylonMesh._delayInfo.indexOf(kind) === -1) {\n                    babylonMesh._delayInfo.push(kind);\n                }\n                attributes[kind] = uniqueId;\n                if (this.useNormalizedFlagFromAccessor) {\n                    const accessor = ArrayItem.TryGet(this._loader.gltf.accessors, primitive.attributes[name]);\n                    if (accessor) {\n                        normalized[kind] = accessor.normalized || false;\n                    }\n                }\n            };\n            loadAttribute(\"POSITION\", VertexBuffer.PositionKind);\n            loadAttribute(\"NORMAL\", VertexBuffer.NormalKind);\n            loadAttribute(\"TANGENT\", VertexBuffer.TangentKind);\n            loadAttribute(\"TEXCOORD_0\", VertexBuffer.UVKind);\n            loadAttribute(\"TEXCOORD_1\", VertexBuffer.UV2Kind);\n            loadAttribute(\"TEXCOORD_2\", VertexBuffer.UV3Kind);\n            loadAttribute(\"TEXCOORD_3\", VertexBuffer.UV4Kind);\n            loadAttribute(\"TEXCOORD_4\", VertexBuffer.UV5Kind);\n            loadAttribute(\"TEXCOORD_5\", VertexBuffer.UV6Kind);\n            loadAttribute(\"JOINTS_0\", VertexBuffer.MatricesIndicesKind);\n            loadAttribute(\"WEIGHTS_0\", VertexBuffer.MatricesWeightsKind);\n            loadAttribute(\"COLOR_0\", VertexBuffer.ColorKind);\n            const bufferView = ArrayItem.Get(extensionContext, this._loader.gltf.bufferViews, extension.bufferView);\n            if (!bufferView._dracoBabylonGeometry) {\n                bufferView._dracoBabylonGeometry = this._loader.loadBufferViewAsync(`/bufferViews/${bufferView.index}`, bufferView).then(async (data) => {\n                    const dracoDecoder = this.dracoDecoder || DracoDecoder.Default;\n                    const positionAccessor = ArrayItem.TryGet(this._loader.gltf.accessors, primitive.attributes[\"POSITION\"]);\n                    const babylonBoundingInfo = !this._loader.parent.alwaysComputeBoundingBox && !babylonMesh.skeleton && positionAccessor ? LoadBoundingInfoFromPositionAccessor(positionAccessor) : null;\n                    return await dracoDecoder\n                        ._decodeMeshToGeometryForGltfAsync(babylonMesh.name, this._loader.babylonScene, data, attributes, normalized, babylonBoundingInfo)\n                        .catch((error) => {\n                        throw new Error(`${context}: ${error.message}`);\n                    });\n                });\n            }\n            return await bufferView._dracoBabylonGeometry;\n        });\n    }\n}\nunregisterGLTFExtension(NAME);\nregisterGLTFExtension(NAME, true, (loader) => new KHR_draco_mesh_compression(loader));\n//# sourceMappingURL=KHR_draco_mesh_compression.js.map"],"names":[],"mappings":"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"}