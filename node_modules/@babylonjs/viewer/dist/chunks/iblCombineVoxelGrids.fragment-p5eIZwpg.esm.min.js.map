{"version":3,"file":"iblCombineVoxelGrids.fragment-p5eIZwpg.esm.min.js","sources":["../../../../../dev/core/dist/Shaders/iblCombineVoxelGrids.fragment.js"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\nconst name = \"iblCombineVoxelGridsPixelShader\";\nconst shader = `precision highp float;precision highp sampler3D;varying vec2 vUV;uniform sampler3D voxelXaxisSampler;uniform sampler3D voxelYaxisSampler;uniform sampler3D voxelZaxisSampler;uniform float layer;void main(void) {vec3 coordZ=vec3(vUV.x,vUV.y,layer);float voxelZ=texture(voxelZaxisSampler,coordZ).r;vec3 coordX=vec3(1.0-layer,vUV.y,vUV.x);float voxelX=texture(voxelXaxisSampler,coordX).r;vec3 coordY=vec3(layer,vUV.x,vUV.y);float voxelY=texture(voxelYaxisSampler,coordY).r;float voxel=(voxelX>0.0 || voxelY>0.0 || voxelZ>0.0) ? 1.0 : 0.0;glFragColor=vec4(vec3(voxel),1.0);}`;\n// Sideeffect\nif (!ShaderStore.ShadersStore[name]) {\n    ShaderStore.ShadersStore[name] = shader;\n}\n/** @internal */\nexport const iblCombineVoxelGridsPixelShader = { name, shader };\n//# sourceMappingURL=iblCombineVoxelGrids.fragment.js.map"],"names":["name","ShaderStore","ShadersStore"],"mappings":"gDAEA,MAAMA,EAAO,kCAGRC,EAAYC,aAAaF,KAC1BC,EAAYC,aAAaF,GAHd"}