{"version":3,"file":"flowGraphEasingBlock-h8lQzze4.esm.js","sources":["../../../../../dev/core/dist/FlowGraph/Blocks/Execution/Animation/flowGraphEasingBlock.js"],"sourcesContent":["import { BackEase, BezierCurveEase, BounceEase, CircleEase, CubicEase, ElasticEase, ExponentialEase } from \"core/Animations/easing\";\nimport { FlowGraphBlock } from \"core/FlowGraph/flowGraphBlock\";\nimport { RichTypeAny, RichTypeNumber } from \"core/FlowGraph/flowGraphRichTypes\";\nimport { RegisterClass } from \"core/Misc/typeStore\";\n/**\n * The type of the easing function.\n */\nexport var EasingFunctionType;\n(function (EasingFunctionType) {\n    EasingFunctionType[EasingFunctionType[\"CircleEase\"] = 0] = \"CircleEase\";\n    EasingFunctionType[EasingFunctionType[\"BackEase\"] = 1] = \"BackEase\";\n    EasingFunctionType[EasingFunctionType[\"BounceEase\"] = 2] = \"BounceEase\";\n    EasingFunctionType[EasingFunctionType[\"CubicEase\"] = 3] = \"CubicEase\";\n    EasingFunctionType[EasingFunctionType[\"ElasticEase\"] = 4] = \"ElasticEase\";\n    EasingFunctionType[EasingFunctionType[\"ExponentialEase\"] = 5] = \"ExponentialEase\";\n    EasingFunctionType[EasingFunctionType[\"PowerEase\"] = 6] = \"PowerEase\";\n    EasingFunctionType[EasingFunctionType[\"QuadraticEase\"] = 7] = \"QuadraticEase\";\n    EasingFunctionType[EasingFunctionType[\"QuarticEase\"] = 8] = \"QuarticEase\";\n    EasingFunctionType[EasingFunctionType[\"QuinticEase\"] = 9] = \"QuinticEase\";\n    EasingFunctionType[EasingFunctionType[\"SineEase\"] = 10] = \"SineEase\";\n    EasingFunctionType[EasingFunctionType[\"BezierCurveEase\"] = 11] = \"BezierCurveEase\";\n})(EasingFunctionType || (EasingFunctionType = {}));\n/**\n * @internal\n * Creates an easing function object based on the type and parameters provided.\n * This is not tree-shaking friendly, so if you need cubic bezier, use the dedicated bezier block.\n * @param type The type of the easing function.\n * @param controlPoint1 The first control point for the bezier curve.\n * @param controlPoint2 The second control point for the bezier curve.\n * @returns The easing function object.\n */\nfunction CreateEasingFunction(type, ...parameters) {\n    switch (type) {\n        case 11 /* EasingFunctionType.BezierCurveEase */:\n            return new BezierCurveEase(...parameters);\n        case 0 /* EasingFunctionType.CircleEase */:\n            return new CircleEase();\n        case 1 /* EasingFunctionType.BackEase */:\n            return new BackEase(...parameters);\n        case 2 /* EasingFunctionType.BounceEase */:\n            return new BounceEase(...parameters);\n        case 3 /* EasingFunctionType.CubicEase */:\n            return new CubicEase();\n        case 4 /* EasingFunctionType.ElasticEase */:\n            return new ElasticEase(...parameters);\n        case 5 /* EasingFunctionType.ExponentialEase */:\n            return new ExponentialEase(...parameters);\n        default:\n            throw new Error(\"Easing type not yet implemented\");\n    }\n}\n/**\n * An easing block that generates an easingFunction object based on the data provided.\n */\nexport class FlowGraphEasingBlock extends FlowGraphBlock {\n    constructor(\n    /**\n     * the configuration of the block\n     */\n    config) {\n        super(config);\n        this.config = config;\n        /**\n         * Internal cache of reusable easing functions.\n         * key is type-mode-properties\n         */\n        this._easingFunctions = {};\n        this.type = this.registerDataInput(\"type\", RichTypeAny, 11);\n        this.mode = this.registerDataInput(\"mode\", RichTypeNumber, 0);\n        this.parameters = this.registerDataInput(\"parameters\", RichTypeAny, [1, 0, 0, 1]);\n        this.easingFunction = this.registerDataOutput(\"easingFunction\", RichTypeAny);\n    }\n    _updateOutputs(context) {\n        const type = this.type.getValue(context);\n        const mode = this.mode.getValue(context);\n        const parameters = this.parameters.getValue(context);\n        if (type === undefined || mode === undefined) {\n            return;\n        }\n        const key = `${type}-${mode}-${parameters.join(\"-\")}`;\n        if (!this._easingFunctions[key]) {\n            const easing = CreateEasingFunction(type, ...parameters);\n            easing.setEasingMode(mode);\n            this._easingFunctions[key] = easing;\n        }\n        this.easingFunction.setValue(this._easingFunctions[key], context);\n    }\n    getClassName() {\n        return \"FlowGraphEasingBlock\" /* FlowGraphBlockNames.Easing */;\n    }\n}\nRegisterClass(\"FlowGraphEasingBlock\" /* FlowGraphBlockNames.Easing */, FlowGraphEasingBlock);\n//# sourceMappingURL=flowGraphEasingBlock.js.map"],"names":[],"mappings":"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"}