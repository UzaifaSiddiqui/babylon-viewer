{"version":3,"file":"KHR_materials_volume-JPbs4VJp.esm.min.js","sources":["../../../../../dev/loaders/dist/glTF/2.0/Extensions/KHR_materials_volume.js"],"sourcesContent":["import { PBRMaterial } from \"core/Materials/PBR/pbrMaterial\";\nimport { GLTFLoader } from \"../glTFLoader\";\nimport { registerGLTFExtension, unregisterGLTFExtension } from \"../glTFLoaderExtensionRegistry\";\nconst NAME = \"KHR_materials_volume\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_materials_volume/README.md)\n * @since 5.0.0\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class KHR_materials_volume {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        /**\n         * Defines a number that determines the order the extensions are applied.\n         */\n        this.order = 173;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n        if (this.enabled) {\n            // We need to disable instance usage because the attenuation factor depends on the node scale of each individual mesh\n            this._loader._disableInstancedMesh++;\n        }\n    }\n    /** @internal */\n    dispose() {\n        if (this.enabled) {\n            this._loader._disableInstancedMesh--;\n        }\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    // eslint-disable-next-line no-restricted-syntax\n    loadMaterialPropertiesAsync(context, material, babylonMaterial) {\n        return GLTFLoader.LoadExtensionAsync(context, material, this.name, async (extensionContext, extension) => {\n            const promises = new Array();\n            promises.push(this._loader.loadMaterialPropertiesAsync(context, material, babylonMaterial));\n            promises.push(this._loadVolumePropertiesAsync(extensionContext, material, babylonMaterial, extension));\n            // eslint-disable-next-line github/no-then\n            return await Promise.all(promises).then(() => { });\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/promise-function-async, no-restricted-syntax\n    _loadVolumePropertiesAsync(context, material, babylonMaterial, extension) {\n        if (!(babylonMaterial instanceof PBRMaterial)) {\n            throw new Error(`${context}: Material type not supported`);\n        }\n        // If transparency isn't enabled already, this extension shouldn't do anything.\n        // i.e. it requires either the KHR_materials_transmission or KHR_materials_diffuse_transmission extensions.\n        if ((!babylonMaterial.subSurface.isRefractionEnabled && !babylonMaterial.subSurface.isTranslucencyEnabled) || !extension.thicknessFactor) {\n            return Promise.resolve();\n        }\n        // IOR in this extension only affects interior.\n        babylonMaterial.subSurface.volumeIndexOfRefraction = babylonMaterial.indexOfRefraction;\n        const attenuationDistance = extension.attenuationDistance !== undefined ? extension.attenuationDistance : Number.MAX_VALUE;\n        babylonMaterial.subSurface.tintColorAtDistance = attenuationDistance;\n        if (extension.attenuationColor !== undefined && extension.attenuationColor.length == 3) {\n            babylonMaterial.subSurface.tintColor.copyFromFloats(extension.attenuationColor[0], extension.attenuationColor[1], extension.attenuationColor[2]);\n        }\n        babylonMaterial.subSurface.minimumThickness = 0.0;\n        babylonMaterial.subSurface.maximumThickness = extension.thicknessFactor;\n        babylonMaterial.subSurface.useThicknessAsDepth = true;\n        if (extension.thicknessTexture) {\n            extension.thicknessTexture.nonColorData = true;\n            // eslint-disable-next-line github/no-then\n            return this._loader.loadTextureInfoAsync(`${context}/thicknessTexture`, extension.thicknessTexture).then((texture) => {\n                texture.name = `${babylonMaterial.name} (Thickness)`;\n                babylonMaterial.subSurface.thicknessTexture = texture;\n                babylonMaterial.subSurface.useGltfStyleTextures = true;\n            });\n        }\n        else {\n            return Promise.resolve();\n        }\n    }\n}\nunregisterGLTFExtension(NAME);\nregisterGLTFExtension(NAME, true, (loader) => new KHR_materials_volume(loader));\n//# sourceMappingURL=KHR_materials_volume.js.map"],"names":["NAME","KHR_materials_volume","constructor","loader","this","name","order","_loader","enabled","isExtensionUsed","_disableInstancedMesh","dispose","loadMaterialPropertiesAsync","context","material","babylonMaterial","GLTFLoader","LoadExtensionAsync","async","extensionContext","extension","promises","Array","push","_loadVolumePropertiesAsync","Promise","all","then","PBRMaterial","Error","subSurface","isRefractionEnabled","isTranslucencyEnabled","thicknessFactor","resolve","volumeIndexOfRefraction","indexOfRefraction","attenuationDistance","undefined","Number","MAX_VALUE","tintColorAtDistance","attenuationColor","length","tintColor","copyFromFloats","minimumThickness","maximumThickness","useThicknessAsDepth","thicknessTexture","nonColorData","loadTextureInfoAsync","texture","useGltfStyleTextures","unregisterGLTFExtension","registerGLTFExtension"],"mappings":"gVAGA,MAAMA,EAAO,uBAMN,MAAMC,EAIT,WAAAC,CAAYC,GAIRC,KAAKC,KAAOL,EAIZI,KAAKE,MAAQ,IACbF,KAAKG,QAAUJ,EACfC,KAAKI,QAAUJ,KAAKG,QAAQE,gBAAgBT,GACxCI,KAAKI,SAELJ,KAAKG,QAAQG,uBAEzB,CAEI,OAAAC,GACQP,KAAKI,SACLJ,KAAKG,QAAQG,wBAEjBN,KAAKG,QAAU,IACvB,CAKI,2BAAAK,CAA4BC,EAASC,EAAUC,GAC3C,OAAOC,EAAWC,mBAAmBJ,EAASC,EAAUV,KAAKC,MAAMa,MAAOC,EAAkBC,KACxF,MAAMC,EAAW,IAAIC,MAIrB,OAHAD,EAASE,KAAKnB,KAAKG,QAAQK,4BAA4BC,EAASC,EAAUC,IAC1EM,EAASE,KAAKnB,KAAKoB,2BAA2BL,EAAkBL,EAAUC,EAAiBK,UAE9EK,QAAQC,IAAIL,GAAUM,MAAK,WAEpD,CAEI,0BAAAH,CAA2BX,EAASC,EAAUC,EAAiBK,GAC3D,KAAML,aAA2Ba,GAC7B,MAAM,IAAIC,MAAM,GAAGhB,kCAIvB,IAAME,EAAgBe,WAAWC,sBAAwBhB,EAAgBe,WAAWE,wBAA2BZ,EAAUa,gBACrH,OAAOR,QAAQS,UAGnBnB,EAAgBe,WAAWK,wBAA0BpB,EAAgBqB,kBACrE,MAAMC,OAAwDC,IAAlClB,EAAUiB,oBAAoCjB,EAAUiB,oBAAsBE,OAAOC,UAQjH,OAPAzB,EAAgBe,WAAWW,oBAAsBJ,OACdC,IAA/BlB,EAAUsB,kBAAuE,GAArCtB,EAAUsB,iBAAiBC,QACvE5B,EAAgBe,WAAWc,UAAUC,eAAezB,EAAUsB,iBAAiB,GAAItB,EAAUsB,iBAAiB,GAAItB,EAAUsB,iBAAiB,IAEjJ3B,EAAgBe,WAAWgB,iBAAmB,EAC9C/B,EAAgBe,WAAWiB,iBAAmB3B,EAAUa,gBACxDlB,EAAgBe,WAAWkB,qBAAsB,EAC7C5B,EAAU6B,kBACV7B,EAAU6B,iBAAiBC,cAAe,EAEnC9C,KAAKG,QAAQ4C,qBAAqB,GAAGtC,qBAA4BO,EAAU6B,kBAAkBtB,MAAMyB,IACtGA,EAAQ/C,KAAO,GAAGU,EAAgBV,mBAClCU,EAAgBe,WAAWmB,iBAAmBG,EAC9CrC,EAAgBe,WAAWuB,sBAAuB,MAI/C5B,QAAQS,SAE3B,EAEAoB,EAAwBtD,GACxBuD,EAAsBvD,GAAM,GAAOG,GAAW,IAAIF,EAAqBE"}