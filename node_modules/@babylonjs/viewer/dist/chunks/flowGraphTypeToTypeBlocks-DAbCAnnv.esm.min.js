import{F as o}from"./flowGraphUnaryOperationBlock-ROd-GDvV.esm.min.js";import{f as r,k as a,b as e,h as t}from"./declarationMapper-wc0CNyr2.esm.min.js";import{R as s}from"./index-VvGulz6u.esm.min.js";import"./flowGraphCachedOperationBlock-B8D-NpEb.esm.min.js";import"./KHR_interactivity-CxC8fKZd.esm.min.js";import"./objectModelMapping-CghNRpa4.esm.min.js";class l extends o{constructor(o){super(t,r,(o=>+o),"FlowGraphBooleanToFloat",o)}}s("FlowGraphBooleanToFloat",l);class n extends o{constructor(o){super(t,a,(o=>e.FromValue(+o)),"FlowGraphBooleanToInt",o)}}s("FlowGraphBooleanToInt",n);class p extends o{constructor(o){super(r,t,(o=>!!o),"FlowGraphFloatToBoolean",o)}}s("FlowGraphFloatToBoolean",p);class c extends o{constructor(o){super(a,t,(o=>!!o.value),"FlowGraphIntToBoolean",o)}}s("FlowGraphIntToBoolean",c);class u extends o{constructor(o){super(a,r,(o=>o.value),"FlowGraphIntToFloat",o)}}s("FlowGraphIntToFloat",u);class m extends o{constructor(o){super(r,a,(r=>{const a=o?.roundingMode;switch(a){case"floor":return e.FromValue(Math.floor(r));case"ceil":return e.FromValue(Math.ceil(r));case"round":return e.FromValue(Math.round(r));default:return e.FromValue(r)}}),"FlowGraphFloatToInt",o)}}s("FlowGraphFloatToInt",m);export{l as FlowGraphBooleanToFloat,n as FlowGraphBooleanToInt,p as FlowGraphFloatToBoolean,m as FlowGraphFloatToInt,c as FlowGraphIntToBoolean,u as FlowGraphIntToFloat};
//# sourceMappingURL=flowGraphTypeToTypeBlocks-DAbCAnnv.esm.min.js.map
