{"version":3,"file":"KHR_animation_pointer-BX0JEeQh.esm.min.js","sources":["../../../../../dev/loaders/dist/glTF/2.0/Extensions/KHR_animation_pointer.data.js","../../../../../dev/loaders/dist/glTF/2.0/Extensions/KHR_animation_pointer.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\nimport { Animation } from \"core/Animations/animation\";\nimport { AnimationPropertyInfo } from \"../glTFLoaderAnimation\";\nimport { Color3 } from \"core/Maths/math.color\";\nimport { SetInterpolationForKey } from \"./objectModelMapping\";\nfunction getColor3(_target, source, offset, scale) {\n    return Color3.FromArray(source, offset).scale(scale);\n}\nfunction getAlpha(_target, source, offset, scale) {\n    return source[offset + 3] * scale;\n}\nfunction getFloat(_target, source, offset, scale) {\n    return source[offset] * scale;\n}\nfunction getMinusFloat(_target, source, offset, scale) {\n    return -source[offset] * scale;\n}\nfunction getNextFloat(_target, source, offset, scale) {\n    return source[offset + 1] * scale;\n}\nfunction getFloatBy2(_target, source, offset, scale) {\n    return source[offset] * scale * 2;\n}\nfunction getTextureTransformTree(textureName) {\n    return {\n        scale: [\n            new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, `${textureName}.uScale`, getFloat, () => 2),\n            new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, `${textureName}.vScale`, getNextFloat, () => 2),\n        ],\n        offset: [\n            new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, `${textureName}.uOffset`, getFloat, () => 2),\n            new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, `${textureName}.vOffset`, getNextFloat, () => 2),\n        ],\n        rotation: [new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, `${textureName}.wAng`, getMinusFloat, () => 1)],\n    };\n}\nclass CameraAnimationPropertyInfo extends AnimationPropertyInfo {\n    /** @internal */\n    buildAnimations(target, name, fps, keys) {\n        return [{ babylonAnimatable: target._babylonCamera, babylonAnimation: this._buildAnimation(name, fps, keys) }];\n    }\n}\nclass MaterialAnimationPropertyInfo extends AnimationPropertyInfo {\n    /** @internal */\n    buildAnimations(target, name, fps, keys) {\n        const babylonAnimations = [];\n        for (const fillMode in target._data) {\n            babylonAnimations.push({\n                babylonAnimatable: target._data[fillMode].babylonMaterial,\n                babylonAnimation: this._buildAnimation(name, fps, keys),\n            });\n        }\n        return babylonAnimations;\n    }\n}\nclass LightAnimationPropertyInfo extends AnimationPropertyInfo {\n    /** @internal */\n    buildAnimations(target, name, fps, keys) {\n        return [{ babylonAnimatable: target._babylonLight, babylonAnimation: this._buildAnimation(name, fps, keys) }];\n    }\n}\nSetInterpolationForKey(\"/cameras/{}/orthographic/xmag\", [\n    new CameraAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"orthoLeft\", getMinusFloat, () => 1),\n    new CameraAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"orthoRight\", getNextFloat, () => 1),\n]);\nSetInterpolationForKey(\"/cameras/{}/orthographic/ymag\", [\n    new CameraAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"orthoBottom\", getMinusFloat, () => 1),\n    new CameraAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"orthoTop\", getNextFloat, () => 1),\n]);\nSetInterpolationForKey(\"/cameras/{}/orthographic/zfar\", [new CameraAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"maxZ\", getFloat, () => 1)]);\nSetInterpolationForKey(\"/cameras/{}/orthographic/znear\", [new CameraAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"minZ\", getFloat, () => 1)]);\nSetInterpolationForKey(\"/cameras/{}/perspective/yfov\", [new CameraAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"fov\", getFloat, () => 1)]);\nSetInterpolationForKey(\"/cameras/{}/perspective/zfar\", [new CameraAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"maxZ\", getFloat, () => 1)]);\nSetInterpolationForKey(\"/cameras/{}/perspective/znear\", [new CameraAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"minZ\", getFloat, () => 1)]);\n// add interpolation to the materials mapping\nSetInterpolationForKey(\"/materials/{}/pbrMetallicRoughness/baseColorFactor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_COLOR3, \"albedoColor\", getColor3, () => 4),\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"alpha\", getAlpha, () => 4),\n]);\nSetInterpolationForKey(\"/materials/{}/pbrMetallicRoughness/metallicFactor\", [new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"metallic\", getFloat, () => 1)]);\nSetInterpolationForKey(\"/materials/{}/pbrMetallicRoughness/metallicFactor\", [new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"roughness\", getFloat, () => 1)]);\nconst baseColorTextureInterpolation = getTextureTransformTree(\"albedoTexture\");\nSetInterpolationForKey(\"/materials/{}/pbrMetallicRoughness/baseColorTexture/extensions/KHR_texture_transform/scale\", baseColorTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/pbrMetallicRoughness/baseColorTexture/extensions/KHR_texture_transform/offset\", baseColorTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/pbrMetallicRoughness/baseColorTexture/extensions/KHR_texture_transform/rotation\", baseColorTextureInterpolation.rotation);\nconst metallicRoughnessTextureInterpolation = getTextureTransformTree(\"metallicTexture\");\nSetInterpolationForKey(\"//materials/{}/pbrMetallicRoughness/metallicRoughnessTexture/scale\", metallicRoughnessTextureInterpolation.scale);\nSetInterpolationForKey(\"//materials/{}/pbrMetallicRoughness/metallicRoughnessTexture/offset\", metallicRoughnessTextureInterpolation.offset);\nSetInterpolationForKey(\"//materials/{}/pbrMetallicRoughness/metallicRoughnessTexture/rotation\", metallicRoughnessTextureInterpolation.rotation);\nSetInterpolationForKey(\"/materials/{}/emissiveFactor\", [new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_COLOR3, \"emissiveColor\", getColor3, () => 3)]);\nconst normalTextureInterpolation = getTextureTransformTree(\"bumpTexture\");\nSetInterpolationForKey(\"/materials/{}/normalTexture/scale\", [new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"bumpTexture.level\", getFloat, () => 1)]);\nSetInterpolationForKey(\"/materials/{}/normalTexture/extensions/KHR_texture_transform/scale\", normalTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/normalTexture/extensions/KHR_texture_transform/offset\", normalTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/normalTexture/extensions/KHR_texture_transform/rotation\", normalTextureInterpolation.rotation);\nSetInterpolationForKey(\"/materials/{}/occlusionTexture/strength\", [new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"ambientTextureStrength\", getFloat, () => 1)]);\nconst occlusionTextureInterpolation = getTextureTransformTree(\"ambientTexture\");\nSetInterpolationForKey(\"/materials/{}/occlusionTexture/extensions/KHR_texture_transform/scale\", occlusionTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/occlusionTexture/extensions/KHR_texture_transform/offset\", occlusionTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/occlusionTexture/extensions/KHR_texture_transform/rotation\", occlusionTextureInterpolation.rotation);\nconst emissiveTextureInterpolation = getTextureTransformTree(\"emissiveTexture\");\nSetInterpolationForKey(\"/materials/{}/emissiveTexture/extensions/KHR_texture_transform/scale\", emissiveTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/emissiveTexture/extensions/KHR_texture_transform/offset\", emissiveTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/emissiveTexture/extensions/KHR_texture_transform/rotation\", emissiveTextureInterpolation.rotation);\n// materials extensions\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_anisotropy/anisotropyStrength\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"anisotropy.intensity\", getFloat, () => 1),\n]);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_anisotropy/anisotropyRotation\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"anisotropy.angle\", getFloat, () => 1),\n]);\nconst anisotropyTextureInterpolation = getTextureTransformTree(\"anisotropy.texture\");\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_anisotropy/anisotropyTexture/extensions/KHR_texture_transform/scale\", anisotropyTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_anisotropy/anisotropyTexture/extensions/KHR_texture_transform/offset\", anisotropyTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_anisotropy/anisotropyTexture/extensions/KHR_texture_transform/rotation\", anisotropyTextureInterpolation.rotation);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_clearcoat/clearcoatFactor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"clearCoat.intensity\", getFloat, () => 1),\n]);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_clearcoat/clearcoatRoughnessFactor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"clearCoat.roughness\", getFloat, () => 1),\n]);\nconst clearcoatTextureInterpolation = getTextureTransformTree(\"clearCoat.texture\");\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_clearcoat/clearcoatTexture/extensions/KHR_texture_transform/scale\", clearcoatTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_clearcoat/clearcoatTexture/extensions/KHR_texture_transform/offset\", clearcoatTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_clearcoat/clearcoatTexture/extensions/KHR_texture_transform/rotation\", clearcoatTextureInterpolation.rotation);\nconst clearcoatNormalTextureInterpolation = getTextureTransformTree(\"clearCoat.bumpTexture\");\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_clearcoat/clearcoatNormalTexture/scale\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"clearCoat.bumpTexture.level\", getFloat, () => 1),\n]);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_clearcoat/clearcoatNormalTexture/extensions/KHR_texture_transform/scale\", clearcoatNormalTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_clearcoat/clearcoatNormalTexture/extensions/KHR_texture_transform/offset\", clearcoatNormalTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_clearcoat/clearcoatNormalTexture/extensions/KHR_texture_transform/rotation\", clearcoatNormalTextureInterpolation.rotation);\nconst clearcoatRoughnessTextureInterpolation = getTextureTransformTree(\"clearCoat.textureRoughness\");\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_clearcoat/clearcoatRoughnessTexture/extensions/KHR_texture_transform/scale\", clearcoatRoughnessTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_clearcoat/clearcoatRoughnessTexture/extensions/KHR_texture_transform/offset\", clearcoatRoughnessTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_clearcoat/clearcoatRoughnessTexture/extensions/KHR_texture_transform/rotation\", clearcoatRoughnessTextureInterpolation.rotation);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_dispersion/dispersionFactor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"subSurface.dispersion\", getFloat, () => 1),\n]);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_emissive_strength/emissiveStrength\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"emissiveIntensity\", getFloat, () => 1),\n]);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_ior/ior\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"indexOfRefraction\", getFloat, () => 1),\n]);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_iridescence/iridescenceFactor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"iridescence.intensity\", getFloat, () => 1),\n]);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_iridescence/iridescenceIor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"iridescence.indexOfRefraction\", getFloat, () => 1),\n]);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_iridescence/iridescenceThicknessMinimum\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"iridescence.minimumThickness\", getFloat, () => 1),\n]);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_iridescence/iridescenceThicknessMaximum\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"iridescence.maximumThickness\", getFloat, () => 1),\n]);\nconst iridescenceTextureInterpolation = getTextureTransformTree(\"iridescence.texture\");\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_iridescence/iridescenceTexture/extensions/KHR_texture_transform/scale\", iridescenceTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_iridescence/iridescenceTexture/extensions/KHR_texture_transform/offset\", iridescenceTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_iridescence/iridescenceTexture/extensions/KHR_texture_transform/rotation\", iridescenceTextureInterpolation.rotation);\nconst iridescenceThicknessTextureInterpolation = getTextureTransformTree(\"iridescence.thicknessTexture\");\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_iridescence/iridescenceThicknessTexture/extensions/KHR_texture_transform/scale\", iridescenceThicknessTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_iridescence/iridescenceThicknessTexture/extensions/KHR_texture_transform/offset\", iridescenceThicknessTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_iridescence/iridescenceThicknessTexture/extensions/KHR_texture_transform/rotation\", iridescenceThicknessTextureInterpolation.rotation);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_sheen/sheenColorFactor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_COLOR3, \"sheen.color\", getColor3, () => 3),\n]);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_sheen/sheenRoughnessFactor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"sheen.roughness\", getFloat, () => 1),\n]);\nconst sheenTextureInterpolation = getTextureTransformTree(\"sheen.texture\");\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_sheen/sheenColorTexture/extensions/KHR_texture_transform/scale\", sheenTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_sheen/sheenColorTexture/extensions/KHR_texture_transform/offset\", sheenTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_sheen/sheenColorTexture/extensions/KHR_texture_transform/rotation\", sheenTextureInterpolation.rotation);\nconst sheenRoughnessTextureInterpolation = getTextureTransformTree(\"sheen.textureRoughness\");\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_sheen/sheenRoughnessTexture/extensions/KHR_texture_transform/scale\", sheenRoughnessTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_sheen/sheenRoughnessTexture/extensions/KHR_texture_transform/offset\", sheenRoughnessTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_sheen/sheenRoughnessTexture/extensions/KHR_texture_transform/rotation\", sheenRoughnessTextureInterpolation.rotation);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_specular/specularFactor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"metallicF0Factor\", getFloat, () => 1),\n]);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_specular/specularColorFactor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_COLOR3, \"metallicReflectanceColor\", getColor3, () => 3),\n]);\nconst specularTextureInterpolation = getTextureTransformTree(\"metallicReflectanceTexture\");\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_specular/specularTexture/extensions/KHR_texture_transform/scale\", specularTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_specular/specularTexture/extensions/KHR_texture_transform/offset\", specularTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_specular/specularTexture/extensions/KHR_texture_transform/rotation\", specularTextureInterpolation.rotation);\nconst specularColorTextureInterpolation = getTextureTransformTree(\"reflectanceTexture\");\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_specular/specularColorTexture/extensions/KHR_texture_transform/scale\", specularColorTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_specular/specularColorTexture/extensions/KHR_texture_transform/offset\", specularColorTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_specular/specularColorTexture/extensions/KHR_texture_transform/rotation\", specularColorTextureInterpolation.rotation);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_transmission/transmissionFactor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"subSurface.refractionIntensity\", getFloat, () => 1),\n]);\nconst transmissionTextureInterpolation = getTextureTransformTree(\"subSurface.refractionIntensityTexture\");\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_transmission/transmissionTexture/extensions/KHR_texture_transform/scale\", transmissionTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_transmission/transmissionTexture/extensions/KHR_texture_transform/offset\", transmissionTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_transmission/transmissionTexture/extensions/KHR_texture_transform/rotation\", transmissionTextureInterpolation.rotation);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_volume/attenuationColor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_COLOR3, \"subSurface.tintColor\", getColor3, () => 3),\n]);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_volume/attenuationDistance\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"subSurface.tintColorAtDistance\", getFloat, () => 1),\n]);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_volume/thicknessFactor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"subSurface.maximumThickness\", getFloat, () => 1),\n]);\nconst thicknessTextureInterpolation = getTextureTransformTree(\"subSurface.thicknessTexture\");\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_volume/thicknessTexture/extensions/KHR_texture_transform/scale\", thicknessTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_volume/thicknessTexture/extensions/KHR_texture_transform/offset\", thicknessTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_volume/thicknessTexture/extensions/KHR_texture_transform/rotation\", thicknessTextureInterpolation.rotation);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_diffuse_transmission/diffuseTransmissionFactor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"subSurface.translucencyIntensity\", getFloat, () => 1),\n]);\nconst diffuseTransmissionTextureInterpolation = getTextureTransformTree(\"subSurface.translucencyIntensityTexture\");\nSetInterpolationForKey(\"materials/{}/extensions/KHR_materials_diffuse_transmission/diffuseTransmissionTexture/extensions/KHR_texture_transform/scale\", diffuseTransmissionTextureInterpolation.scale);\nSetInterpolationForKey(\"materials/{}/extensions/KHR_materials_diffuse_transmission/diffuseTransmissionTexture/extensions/KHR_texture_transform/offset\", diffuseTransmissionTextureInterpolation.offset);\nSetInterpolationForKey(\"materials/{}/extensions/KHR_materials_diffuse_transmission/diffuseTransmissionTexture/extensions/KHR_texture_transform/rotation\", diffuseTransmissionTextureInterpolation.rotation);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_diffuse_transmission/diffuseTransmissionColorFactor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_COLOR3, \"subSurface.translucencyColor\", getColor3, () => 3),\n]);\nconst diffuseTransmissionColorTextureInterpolation = getTextureTransformTree(\"subSurface.translucencyColorTexture\");\nSetInterpolationForKey(\"materials/{}/extensions/KHR_materials_diffuse_transmission/diffuseTransmissionColorTexture/extensions/KHR_texture_transform/scale\", diffuseTransmissionColorTextureInterpolation.scale);\nSetInterpolationForKey(\"materials/{}/extensions/KHR_materials_diffuse_transmission/diffuseTransmissionColorTexture/extensions/KHR_texture_transform/offset\", diffuseTransmissionColorTextureInterpolation.offset);\nSetInterpolationForKey(\"materials/{}/extensions/KHR_materials_diffuse_transmission/diffuseTransmissionColorTexture/extensions/KHR_texture_transform/rotation\", diffuseTransmissionColorTextureInterpolation.rotation);\nSetInterpolationForKey(\"/extensions/KHR_lights_punctual/lights/{}/color\", [new LightAnimationPropertyInfo(Animation.ANIMATIONTYPE_COLOR3, \"diffuse\", getColor3, () => 3)]);\nSetInterpolationForKey(\"/extensions/KHR_lights_punctual/lights/{}/intensity\", [new LightAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"intensity\", getFloat, () => 1)]);\nSetInterpolationForKey(\"/extensions/KHR_lights_punctual/lights/{}/range\", [new LightAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"range\", getFloat, () => 1)]);\nSetInterpolationForKey(\"/extensions/KHR_lights_punctual/lights/{}/spot/innerConeAngle\", [\n    new LightAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"innerAngle\", getFloatBy2, () => 1),\n]);\nSetInterpolationForKey(\"/extensions/KHR_lights_punctual/lights/{}/spot/outerConeAngle\", [\n    new LightAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"angle\", getFloatBy2, () => 1),\n]);\nSetInterpolationForKey(\"/nodes/{}/extensions/EXT_lights_ies/color\", [new LightAnimationPropertyInfo(Animation.ANIMATIONTYPE_COLOR3, \"diffuse\", getColor3, () => 3)]);\nSetInterpolationForKey(\"/nodes/{}/extensions/EXT_lights_ies/multiplier\", [new LightAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"intensity\", getFloat, () => 1)]);\n//# sourceMappingURL=KHR_animation_pointer.data.js.map","import { Logger } from \"core/Misc/logger\";\nimport { registerGLTFExtension, unregisterGLTFExtension } from \"../glTFLoaderExtensionRegistry\";\nimport { GetPathToObjectConverter } from \"./objectModelMapping\";\nimport \"./KHR_animation_pointer.data\";\nconst NAME = \"KHR_animation_pointer\";\n/**\n * [Specification PR](https://github.com/KhronosGroup/glTF/pull/2147)\n * !!! Experimental Extension Subject to Changes !!!\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class KHR_animation_pointer {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        this._loader = loader;\n        this._pathToObjectConverter = GetPathToObjectConverter(this._loader.gltf);\n    }\n    /**\n     * Defines whether this extension is enabled.\n     */\n    get enabled() {\n        return this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n        delete this._pathToObjectConverter; // GC\n    }\n    /**\n     * Loads a glTF animation channel.\n     * @param context The context when loading the asset\n     * @param animationContext The context of the animation when loading the asset\n     * @param animation The glTF animation property\n     * @param channel The glTF animation channel property\n     * @param onLoad Called for each animation loaded\n     * @returns A void promise that resolves when the load is complete or null if not handled\n     */\n    // eslint-disable-next-line no-restricted-syntax\n    _loadAnimationChannelAsync(context, animationContext, animation, channel, onLoad) {\n        const extension = channel.target.extensions?.KHR_animation_pointer;\n        if (!extension || !this._pathToObjectConverter) {\n            return null;\n        }\n        if (channel.target.path !== \"pointer\" /* AnimationChannelTargetPath.POINTER */) {\n            Logger.Warn(`${context}/target/path: Value (${channel.target.path}) must be (${\"pointer\" /* AnimationChannelTargetPath.POINTER */}) when using the ${this.name} extension`);\n        }\n        if (channel.target.node != undefined) {\n            Logger.Warn(`${context}/target/node: Value (${channel.target.node}) must not be present when using the ${this.name} extension`);\n        }\n        const extensionContext = `${context}/extensions/${this.name}`;\n        const pointer = extension.pointer;\n        if (!pointer) {\n            throw new Error(`${extensionContext}: Pointer is missing`);\n        }\n        try {\n            const obj = this._pathToObjectConverter.convert(pointer);\n            if (!obj.info.interpolation) {\n                throw new Error(`${extensionContext}/pointer: Interpolation is missing`);\n            }\n            return this._loader._loadAnimationChannelFromTargetInfoAsync(context, animationContext, animation, channel, {\n                object: obj.object,\n                info: obj.info.interpolation,\n            }, onLoad);\n        }\n        catch (e) {\n            Logger.Warn(`${extensionContext}/pointer: Invalid pointer (${pointer}) skipped`);\n            return null;\n        }\n    }\n}\nunregisterGLTFExtension(NAME);\nregisterGLTFExtension(NAME, true, (loader) => new KHR_animation_pointer(loader));\n//# sourceMappingURL=KHR_animation_pointer.js.map"],"names":["getColor3","_target","source","offset","scale","Color3","FromArray","getFloat","getMinusFloat","getNextFloat","getFloatBy2","getTextureTransformTree","textureName","MaterialAnimationPropertyInfo","Animation","ANIMATIONTYPE_FLOAT","rotation","CameraAnimationPropertyInfo","AnimationPropertyInfo","buildAnimations","target","name","fps","keys","babylonAnimatable","_babylonCamera","babylonAnimation","this","_buildAnimation","babylonAnimations","fillMode","_data","push","babylonMaterial","LightAnimationPropertyInfo","_babylonLight","SetInterpolationForKey","ANIMATIONTYPE_COLOR3","baseColorTextureInterpolation","metallicRoughnessTextureInterpolation","normalTextureInterpolation","occlusionTextureInterpolation","emissiveTextureInterpolation","anisotropyTextureInterpolation","clearcoatTextureInterpolation","clearcoatNormalTextureInterpolation","clearcoatRoughnessTextureInterpolation","iridescenceTextureInterpolation","iridescenceThicknessTextureInterpolation","sheenTextureInterpolation","sheenRoughnessTextureInterpolation","specularTextureInterpolation","specularColorTextureInterpolation","transmissionTextureInterpolation","thicknessTextureInterpolation","diffuseTransmissionTextureInterpolation","diffuseTransmissionColorTextureInterpolation","NAME","KHR_animation_pointer","constructor","loader","_loader","_pathToObjectConverter","GetPathToObjectConverter","gltf","enabled","isExtensionUsed","dispose","_loadAnimationChannelAsync","context","animationContext","animation","channel","onLoad","extension","extensions","path","Logger","Warn","undefined","node","extensionContext","pointer","Error","obj","convert","info","interpolation","_loadAnimationChannelFromTargetInfoAsync","object","e","unregisterGLTFExtension","registerGLTFExtension"],"mappings":"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"}