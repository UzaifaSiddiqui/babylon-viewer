{"version":3,"file":"flowGraphSetPropertyBlock-D040FIdJ.esm.min.js","sources":["../../../../../dev/core/dist/FlowGraph/Blocks/Execution/flowGraphSetPropertyBlock.js"],"sourcesContent":["import { FlowGraphExecutionBlockWithOutSignal } from \"core/FlowGraph/flowGraphExecutionBlockWithOutSignal\";\nimport { RichTypeAny } from \"core/FlowGraph/flowGraphRichTypes\";\nimport { RegisterClass } from \"core/Misc/typeStore\";\n/**\n * This block will set a property on a given target asset.\n * The property name can include dots (\".\"), which will be interpreted as a path to the property.\n * The target asset is an input and can be changed at any time.\n * The value of the property is an input and can be changed at any time.\n *\n * For example, with an input of a mesh asset, the property name \"position.x\" will set the x component of the position of the mesh.\n *\n * Note that it is recommended to input the object on which you are working on (i.e. a material) than providing a mesh and then getting the material from it.\n */\nexport class FlowGraphSetPropertyBlock extends FlowGraphExecutionBlockWithOutSignal {\n    constructor(\n    /**\n     * the configuration of the block\n     */\n    config) {\n        super(config);\n        this.config = config;\n        this.object = this.registerDataInput(\"object\", RichTypeAny, config.target);\n        this.value = this.registerDataInput(\"value\", RichTypeAny);\n        this.propertyName = this.registerDataInput(\"propertyName\", RichTypeAny, config.propertyName);\n        this.customSetFunction = this.registerDataInput(\"customSetFunction\", RichTypeAny);\n    }\n    _execute(context, _callingSignal) {\n        try {\n            const target = this.object.getValue(context);\n            const value = this.value.getValue(context);\n            const propertyName = this.propertyName.getValue(context);\n            this._stopRunningAnimations(context, target, propertyName);\n            const setFunction = this.customSetFunction.getValue(context);\n            if (setFunction) {\n                setFunction(target, propertyName, value, context);\n            }\n            else {\n                this._setPropertyValue(target, propertyName, value);\n            }\n        }\n        catch (e) {\n            this._reportError(context, e);\n        }\n        this.out._activateSignal(context);\n    }\n    _stopRunningAnimations(context, target, propertyName) {\n        const currentlyRunningAnimationGroups = context._getGlobalContextVariable(\"currentlyRunningAnimationGroups\", []);\n        for (const uniqueId of currentlyRunningAnimationGroups) {\n            const animationGroup = context.assetsContext.animationGroups.find((animationGroup) => animationGroup.uniqueId === uniqueId);\n            if (animationGroup) {\n                for (const targetedAnimations of animationGroup.targetedAnimations) {\n                    if (targetedAnimations.target === target && targetedAnimations.animation.targetProperty === propertyName) {\n                        animationGroup.stop(true);\n                        animationGroup.dispose();\n                        const index = currentlyRunningAnimationGroups.indexOf(uniqueId);\n                        if (index !== -1) {\n                            currentlyRunningAnimationGroups.splice(index, 1);\n                            context._setGlobalContextVariable(\"currentlyRunningAnimationGroups\", currentlyRunningAnimationGroups);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    _setPropertyValue(target, propertyName, value) {\n        const path = propertyName.split(\".\");\n        let obj = target;\n        for (let i = 0; i < path.length - 1; i++) {\n            const prop = path[i];\n            if (obj[prop] === undefined) {\n                obj[prop] = {};\n            }\n            obj = obj[prop];\n        }\n        obj[path[path.length - 1]] = value;\n    }\n    getClassName() {\n        return \"FlowGraphSetPropertyBlock\" /* FlowGraphBlockNames.SetProperty */;\n    }\n}\nRegisterClass(\"FlowGraphSetPropertyBlock\" /* FlowGraphBlockNames.SetProperty */, FlowGraphSetPropertyBlock);\n//# sourceMappingURL=flowGraphSetPropertyBlock.js.map"],"names":["FlowGraphSetPropertyBlock","FlowGraphExecutionBlockWithOutSignal","constructor","config","super","this","object","registerDataInput","RichTypeAny","target","value","propertyName","customSetFunction","_execute","context","_callingSignal","getValue","_stopRunningAnimations","setFunction","_setPropertyValue","e","_reportError","out","_activateSignal","currentlyRunningAnimationGroups","_getGlobalContextVariable","uniqueId","animationGroup","assetsContext","animationGroups","find","targetedAnimations","animation","targetProperty","stop","dispose","index","indexOf","splice","_setGlobalContextVariable","path","split","obj","i","length","prop","undefined","getClassName","RegisterClass"],"mappings":"yNAaO,MAAMA,UAAkCC,EAC3C,WAAAC,CAIAC,GACIC,MAAMD,GACNE,KAAKF,OAASA,EACdE,KAAKC,OAASD,KAAKE,kBAAkB,SAAUC,EAAaL,EAAOM,QACnEJ,KAAKK,MAAQL,KAAKE,kBAAkB,QAASC,GAC7CH,KAAKM,aAAeN,KAAKE,kBAAkB,eAAgBC,EAAaL,EAAOQ,cAC/EN,KAAKO,kBAAoBP,KAAKE,kBAAkB,oBAAqBC,EAC7E,CACI,QAAAK,CAASC,EAASC,GACd,IACI,MAAMN,EAASJ,KAAKC,OAAOU,SAASF,GAC9BJ,EAAQL,KAAKK,MAAMM,SAASF,GAC5BH,EAAeN,KAAKM,aAAaK,SAASF,GAChDT,KAAKY,uBAAuBH,EAASL,EAAQE,GAC7C,MAAMO,EAAcb,KAAKO,kBAAkBI,SAASF,GAChDI,EACAA,EAAYT,EAAQE,EAAcD,EAAOI,GAGzCT,KAAKc,kBAAkBV,EAAQE,EAAcD,EAE7D,CACQ,MAAOU,GACHf,KAAKgB,aAAaP,EAASM,EACvC,CACQf,KAAKiB,IAAIC,gBAAgBT,EACjC,CACI,sBAAAG,CAAuBH,EAASL,EAAQE,GACpC,MAAMa,EAAkCV,EAAQW,0BAA0B,kCAAmC,IAC7G,IAAK,MAAMC,KAAYF,EAAiC,CACpD,MAAMG,EAAiBb,EAAQc,cAAcC,gBAAgBC,MAAMH,GAAmBA,EAAeD,WAAaA,IAClH,GAAIC,EACA,IAAK,MAAMI,KAAsBJ,EAAeI,mBAC5C,GAAIA,EAAmBtB,SAAWA,GAAUsB,EAAmBC,UAAUC,iBAAmBtB,EAAc,CACtGgB,EAAeO,MAAK,GACpBP,EAAeQ,UACf,MAAMC,EAAQZ,EAAgCa,QAAQX,IACxC,IAAVU,IACAZ,EAAgCc,OAAOF,EAAO,GAC9CtB,EAAQyB,0BAA0B,kCAAmCf,GAEjG,CAGA,CACA,CACI,iBAAAL,CAAkBV,EAAQE,EAAcD,GACpC,MAAM8B,EAAO7B,EAAa8B,MAAM,KAChC,IAAIC,EAAMjC,EACV,IAAK,IAAIkC,EAAI,EAAGA,EAAIH,EAAKI,OAAS,EAAGD,IAAK,CACtC,MAAME,EAAOL,EAAKG,QACAG,IAAdJ,EAAIG,KACJH,EAAIG,GAAQ,CAAE,GAElBH,EAAMA,EAAIG,EACtB,CACQH,EAAIF,EAAKA,EAAKI,OAAS,IAAMlC,CACrC,CACI,YAAAqC,GACI,MAAO,2BACf,EAEAC,EAAc,4BAAmEhD"}