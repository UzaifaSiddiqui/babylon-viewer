{"version":3,"file":"flowGraphMathCombineExtractBlocks-3hvkaXdd.esm.js","sources":["../../../../../dev/core/dist/FlowGraph/Blocks/Data/Math/flowGraphMathCombineExtractBlocks.js"],"sourcesContent":["import { FlowGraphCachedOperationBlock } from \"../flowGraphCachedOperationBlock\";\nimport { RichTypeMatrix, RichTypeMatrix2D, RichTypeMatrix3D, RichTypeNumber, RichTypeVector2, RichTypeVector3, RichTypeVector4, } from \"core/FlowGraph/flowGraphRichTypes\";\nimport { FlowGraphBlock } from \"core/FlowGraph/flowGraphBlock\";\nimport { Matrix, Vector2, Vector3, Vector4 } from \"core/Maths/math.vector\";\nimport { RegisterClass } from \"core/Misc/typeStore\";\nimport { FlowGraphMatrix2D, FlowGraphMatrix3D } from \"core/FlowGraph/CustomTypes/flowGraphMatrix\";\nclass FlowGraphMathCombineBlock extends FlowGraphCachedOperationBlock {\n    /**\n     * Base class for blocks that combine multiple numeric inputs into a single result.\n     * Handles registering data inputs and managing cached outputs.\n     * @param numberOfInputs The number of input values to combine.\n     * @param type The type of the result.\n     * @param config The block configuration.\n     */\n    constructor(numberOfInputs, type, config) {\n        super(type, config);\n        for (let i = 0; i < numberOfInputs; i++) {\n            this.registerDataInput(`input_${i}`, RichTypeNumber, 0);\n        }\n    }\n}\n/**\n * Abstract class representing a flow graph block that extracts multiple outputs from a single input.\n */\nclass FlowGraphMathExtractBlock extends FlowGraphBlock {\n    /**\n     * Creates an instance of FlowGraphMathExtractBlock.\n     *\n     * @param numberOfOutputs - The number of outputs to be extracted from the input.\n     * @param type - The type of the input data.\n     * @param config - Optional configuration for the flow graph block.\n     */\n    constructor(numberOfOutputs, type, config) {\n        super(config);\n        this.registerDataInput(\"input\", type);\n        for (let i = 0; i < numberOfOutputs; i++) {\n            this.registerDataOutput(`output_${i}`, RichTypeNumber, 0);\n        }\n    }\n}\n/**\n * Combines two floats into a new Vector2\n */\nexport class FlowGraphCombineVector2Block extends FlowGraphMathCombineBlock {\n    constructor(config) {\n        super(2, RichTypeVector2, config);\n    }\n    /**\n     * @internal\n     * Combines two floats into a new Vector2\n     */\n    _doOperation(context) {\n        if (!context._hasExecutionVariable(this, \"cachedVector\")) {\n            context._setExecutionVariable(this, \"cachedVector\", new Vector2());\n        }\n        const vector = context._getExecutionVariable(this, \"cachedVector\", null);\n        vector.set(this.getDataInput(\"input_0\").getValue(context), this.getDataInput(\"input_1\").getValue(context));\n        return vector;\n    }\n    getClassName() {\n        return \"FlowGraphCombineVector2Block\" /* FlowGraphBlockNames.CombineVector2 */;\n    }\n}\nRegisterClass(\"FlowGraphCombineVector2Block\" /* FlowGraphBlockNames.CombineVector2 */, FlowGraphCombineVector2Block);\n/**\n * Combines three floats into a new Vector3\n */\nexport class FlowGraphCombineVector3Block extends FlowGraphMathCombineBlock {\n    constructor(config) {\n        super(3, RichTypeVector3, config);\n    }\n    _doOperation(context) {\n        if (!context._hasExecutionVariable(this, \"cachedVector\")) {\n            context._setExecutionVariable(this, \"cachedVector\", new Vector3());\n        }\n        const vector = context._getExecutionVariable(this, \"cachedVector\", null);\n        vector.set(this.getDataInput(\"input_0\").getValue(context), this.getDataInput(\"input_1\").getValue(context), this.getDataInput(\"input_2\").getValue(context));\n        return vector;\n    }\n    getClassName() {\n        return \"FlowGraphCombineVector3Block\" /* FlowGraphBlockNames.CombineVector3 */;\n    }\n}\nRegisterClass(\"FlowGraphCombineVector3Block\" /* FlowGraphBlockNames.CombineVector3 */, FlowGraphCombineVector3Block);\n/**\n * Combines four floats into a new Vector4\n */\nexport class FlowGraphCombineVector4Block extends FlowGraphMathCombineBlock {\n    constructor(config) {\n        super(4, RichTypeVector4, config);\n    }\n    _doOperation(context) {\n        if (!context._hasExecutionVariable(this, \"cachedVector\")) {\n            context._setExecutionVariable(this, \"cachedVector\", new Vector4());\n        }\n        const vector = context._getExecutionVariable(this, \"cachedVector\", null);\n        vector.set(this.getDataInput(\"input_0\").getValue(context), this.getDataInput(\"input_1\").getValue(context), this.getDataInput(\"input_2\").getValue(context), this.getDataInput(\"input_3\").getValue(context));\n        return vector;\n    }\n    getClassName() {\n        return \"FlowGraphCombineVector4Block\" /* FlowGraphBlockNames.CombineVector4 */;\n    }\n}\nRegisterClass(\"FlowGraphCombineVector4Block\" /* FlowGraphBlockNames.CombineVector4 */, FlowGraphCombineVector4Block);\n/**\n * Combines 16 floats into a new Matrix\n *\n * Note that glTF interactivity's combine4x4 uses column-major order, while Babylon.js uses row-major order.\n */\nexport class FlowGraphCombineMatrixBlock extends FlowGraphMathCombineBlock {\n    constructor(config) {\n        super(16, RichTypeMatrix, config);\n    }\n    _doOperation(context) {\n        if (!context._hasExecutionVariable(this, \"cachedMatrix\")) {\n            context._setExecutionVariable(this, \"cachedMatrix\", new Matrix());\n        }\n        const matrix = context._getExecutionVariable(this, \"cachedMatrix\", null);\n        if (this.config?.inputIsColumnMajor) {\n            matrix.set(this.getDataInput(\"input_0\").getValue(context), this.getDataInput(\"input_4\").getValue(context), this.getDataInput(\"input_8\").getValue(context), this.getDataInput(\"input_12\").getValue(context), this.getDataInput(\"input_1\").getValue(context), this.getDataInput(\"input_5\").getValue(context), this.getDataInput(\"input_9\").getValue(context), this.getDataInput(\"input_13\").getValue(context), this.getDataInput(\"input_2\").getValue(context), this.getDataInput(\"input_6\").getValue(context), this.getDataInput(\"input_10\").getValue(context), this.getDataInput(\"input_14\").getValue(context), this.getDataInput(\"input_3\").getValue(context), this.getDataInput(\"input_7\").getValue(context), this.getDataInput(\"input_11\").getValue(context), this.getDataInput(\"input_15\").getValue(context));\n        }\n        else {\n            matrix.set(this.getDataInput(\"input_0\").getValue(context), this.getDataInput(\"input_1\").getValue(context), this.getDataInput(\"input_2\").getValue(context), this.getDataInput(\"input_3\").getValue(context), this.getDataInput(\"input_4\").getValue(context), this.getDataInput(\"input_5\").getValue(context), this.getDataInput(\"input_6\").getValue(context), this.getDataInput(\"input_7\").getValue(context), this.getDataInput(\"input_8\").getValue(context), this.getDataInput(\"input_9\").getValue(context), this.getDataInput(\"input_10\").getValue(context), this.getDataInput(\"input_11\").getValue(context), this.getDataInput(\"input_12\").getValue(context), this.getDataInput(\"input_13\").getValue(context), this.getDataInput(\"input_14\").getValue(context), this.getDataInput(\"input_15\").getValue(context));\n        }\n        return matrix;\n    }\n    getClassName() {\n        return \"FlowGraphCombineMatrixBlock\" /* FlowGraphBlockNames.CombineMatrix */;\n    }\n}\nRegisterClass(\"FlowGraphCombineMatrixBlock\" /* FlowGraphBlockNames.CombineMatrix */, FlowGraphCombineMatrixBlock);\n/**\n * Combines 4 floats into a new Matrix\n */\nexport class FlowGraphCombineMatrix2DBlock extends FlowGraphMathCombineBlock {\n    constructor(config) {\n        super(4, RichTypeMatrix2D, config);\n    }\n    _doOperation(context) {\n        if (!context._hasExecutionVariable(this, \"cachedMatrix\")) {\n            context._setExecutionVariable(this, \"cachedMatrix\", new FlowGraphMatrix2D());\n        }\n        const matrix = context._getExecutionVariable(this, \"cachedMatrix\", null);\n        const array = this.config?.inputIsColumnMajor\n            ? [\n                // column to row-major\n                this.getDataInput(\"input_0\").getValue(context),\n                this.getDataInput(\"input_2\").getValue(context),\n                this.getDataInput(\"input_1\").getValue(context),\n                this.getDataInput(\"input_3\").getValue(context),\n            ]\n            : [\n                this.getDataInput(\"input_0\").getValue(context),\n                this.getDataInput(\"input_1\").getValue(context),\n                this.getDataInput(\"input_2\").getValue(context),\n                this.getDataInput(\"input_3\").getValue(context),\n            ];\n        matrix.fromArray(array);\n        return matrix;\n    }\n    getClassName() {\n        return \"FlowGraphCombineMatrix2DBlock\" /* FlowGraphBlockNames.CombineMatrix2D */;\n    }\n}\nRegisterClass(\"FlowGraphCombineMatrix2DBlock\" /* FlowGraphBlockNames.CombineMatrix2D */, FlowGraphCombineMatrix2DBlock);\n/**\n * Combines 9 floats into a new Matrix3D\n */\nexport class FlowGraphCombineMatrix3DBlock extends FlowGraphMathCombineBlock {\n    constructor(config) {\n        super(9, RichTypeMatrix3D, config);\n    }\n    _doOperation(context) {\n        if (!context._hasExecutionVariable(this, \"cachedMatrix\")) {\n            context._setExecutionVariable(this, \"cachedMatrix\", new FlowGraphMatrix3D());\n        }\n        const matrix = context._getExecutionVariable(this, \"cachedMatrix\", null);\n        const array = this.config?.inputIsColumnMajor\n            ? [\n                // column to row major\n                this.getDataInput(\"input_0\").getValue(context),\n                this.getDataInput(\"input_3\").getValue(context),\n                this.getDataInput(\"input_6\").getValue(context),\n                this.getDataInput(\"input_1\").getValue(context),\n                this.getDataInput(\"input_4\").getValue(context),\n                this.getDataInput(\"input_7\").getValue(context),\n                this.getDataInput(\"input_2\").getValue(context),\n                this.getDataInput(\"input_5\").getValue(context),\n                this.getDataInput(\"input_8\").getValue(context),\n            ]\n            : [\n                this.getDataInput(\"input_0\").getValue(context),\n                this.getDataInput(\"input_1\").getValue(context),\n                this.getDataInput(\"input_2\").getValue(context),\n                this.getDataInput(\"input_3\").getValue(context),\n                this.getDataInput(\"input_4\").getValue(context),\n                this.getDataInput(\"input_5\").getValue(context),\n                this.getDataInput(\"input_6\").getValue(context),\n                this.getDataInput(\"input_7\").getValue(context),\n                this.getDataInput(\"input_8\").getValue(context),\n            ];\n        matrix.fromArray(array);\n        return matrix;\n    }\n    getClassName() {\n        return \"FlowGraphCombineMatrix3DBlock\" /* FlowGraphBlockNames.CombineMatrix3D */;\n    }\n}\nRegisterClass(\"FlowGraphCombineMatrix3DBlock\" /* FlowGraphBlockNames.CombineMatrix3D */, FlowGraphCombineMatrix3DBlock);\n/**\n * Extracts two floats from a Vector2\n */\nexport class FlowGraphExtractVector2Block extends FlowGraphMathExtractBlock {\n    constructor(config) {\n        super(2, RichTypeVector2, config);\n    }\n    _updateOutputs(context) {\n        let input = this.getDataInput(\"input\")?.getValue(context);\n        if (!input) {\n            input = Vector2.Zero();\n            this.getDataInput(\"input\").setValue(input, context);\n        }\n        this.getDataOutput(\"output_0\").setValue(input.x, context);\n        this.getDataOutput(\"output_1\").setValue(input.y, context);\n    }\n    getClassName() {\n        return \"FlowGraphExtractVector2Block\" /* FlowGraphBlockNames.ExtractVector2 */;\n    }\n}\nRegisterClass(\"FlowGraphExtractVector2Block\" /* FlowGraphBlockNames.ExtractVector2 */, FlowGraphExtractVector2Block);\n/**\n * Extracts three floats from a Vector3\n */\nexport class FlowGraphExtractVector3Block extends FlowGraphMathExtractBlock {\n    constructor(config) {\n        super(3, RichTypeVector3, config);\n    }\n    _updateOutputs(context) {\n        let input = this.getDataInput(\"input\")?.getValue(context);\n        if (!input) {\n            input = Vector3.Zero();\n            this.getDataInput(\"input\").setValue(input, context);\n        }\n        this.getDataOutput(\"output_0\").setValue(input.x, context);\n        this.getDataOutput(\"output_1\").setValue(input.y, context);\n        this.getDataOutput(\"output_2\").setValue(input.z, context);\n    }\n    getClassName() {\n        return \"FlowGraphExtractVector3Block\" /* FlowGraphBlockNames.ExtractVector3 */;\n    }\n}\nRegisterClass(\"FlowGraphExtractVector3Block\" /* FlowGraphBlockNames.ExtractVector3 */, FlowGraphExtractVector3Block);\n/**\n * Extracts four floats from a Vector4\n */\nexport class FlowGraphExtractVector4Block extends FlowGraphMathExtractBlock {\n    constructor(config) {\n        super(4, RichTypeVector4, config);\n    }\n    _updateOutputs(context) {\n        let input = this.getDataInput(\"input\")?.getValue(context);\n        if (!input) {\n            input = Vector4.Zero();\n            this.getDataInput(\"input\").setValue(input, context);\n        }\n        this.getDataOutput(\"output_0\").setValue(input.x, context);\n        this.getDataOutput(\"output_1\").setValue(input.y, context);\n        this.getDataOutput(\"output_2\").setValue(input.z, context);\n        this.getDataOutput(\"output_3\").setValue(input.w, context);\n    }\n    getClassName() {\n        return \"FlowGraphExtractVector4Block\" /* FlowGraphBlockNames.ExtractVector4 */;\n    }\n}\nRegisterClass(\"FlowGraphExtractVector4Block\" /* FlowGraphBlockNames.ExtractVector4 */, FlowGraphExtractVector4Block);\n/**\n * Extracts 16 floats from a Matrix\n */\nexport class FlowGraphExtractMatrixBlock extends FlowGraphMathExtractBlock {\n    constructor(config) {\n        super(16, RichTypeMatrix, config);\n    }\n    _updateOutputs(context) {\n        let input = this.getDataInput(\"input\")?.getValue(context);\n        if (!input) {\n            input = Matrix.Identity();\n            this.getDataInput(\"input\").setValue(input, context);\n        }\n        for (let i = 0; i < 16; i++) {\n            this.getDataOutput(`output_${i}`).setValue(input.m[i], context);\n        }\n    }\n    getClassName() {\n        return \"FlowGraphExtractMatrixBlock\" /* FlowGraphBlockNames.ExtractMatrix */;\n    }\n}\nRegisterClass(\"FlowGraphExtractMatrixBlock\" /* FlowGraphBlockNames.ExtractMatrix */, FlowGraphExtractMatrixBlock);\n/**\n * Extracts 4 floats from a Matrix2D\n */\nexport class FlowGraphExtractMatrix2DBlock extends FlowGraphMathExtractBlock {\n    constructor(config) {\n        super(4, RichTypeMatrix2D, config);\n    }\n    _updateOutputs(context) {\n        let input = this.getDataInput(\"input\")?.getValue(context);\n        if (!input) {\n            input = new FlowGraphMatrix2D();\n            this.getDataInput(\"input\").setValue(input, context);\n        }\n        for (let i = 0; i < 4; i++) {\n            this.getDataOutput(`output_${i}`).setValue(input.m[i], context);\n        }\n    }\n    getClassName() {\n        return \"FlowGraphExtractMatrix2DBlock\" /* FlowGraphBlockNames.ExtractMatrix2D */;\n    }\n}\nRegisterClass(\"FlowGraphExtractMatrix2DBlock\" /* FlowGraphBlockNames.ExtractMatrix2D */, FlowGraphExtractMatrix2DBlock);\n/**\n * Extracts 4 floats from a Matrix2D\n */\nexport class FlowGraphExtractMatrix3DBlock extends FlowGraphMathExtractBlock {\n    constructor(config) {\n        super(9, RichTypeMatrix3D, config);\n    }\n    _updateOutputs(context) {\n        let input = this.getDataInput(\"input\")?.getValue(context);\n        if (!input) {\n            input = new FlowGraphMatrix3D();\n            this.getDataInput(\"input\").setValue(input, context);\n        }\n        for (let i = 0; i < 9; i++) {\n            this.getDataOutput(`output_${i}`).setValue(input.m[i], context);\n        }\n    }\n    getClassName() {\n        return \"FlowGraphExtractMatrix3DBlock\" /* FlowGraphBlockNames.ExtractMatrix3D */;\n    }\n}\nRegisterClass(\"FlowGraphExtractMatrix3DBlock\" /* FlowGraphBlockNames.ExtractMatrix3D */, FlowGraphExtractMatrix3DBlock);\n//# sourceMappingURL=flowGraphMathCombineExtractBlocks.js.map"],"names":[],"mappings":";;;;;;AAMA,MAAM,yBAAyB,SAAS,6BAA6B,CAAC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,cAAc,EAAE,IAAI,EAAE,MAAM,EAAE;AAC9C,QAAQ,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC;AAC3B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;AACjD,YAAY,IAAI,CAAC,iBAAiB,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,yBAAyB,SAAS,cAAc,CAAC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,eAAe,EAAE,IAAI,EAAE,MAAM,EAAE;AAC/C,QAAQ,KAAK,CAAC,MAAM,CAAC;AACrB,QAAQ,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,IAAI,CAAC;AAC7C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,EAAE,CAAC,EAAE,EAAE;AAClD,YAAY,IAAI,CAAC,kBAAkB,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;AACrE;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,4BAA4B,SAAS,yBAAyB,CAAC;AAC5E,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,CAAC,EAAE,eAAe,EAAE,MAAM,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,OAAO,EAAE;AAC1B,QAAQ,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,cAAc,CAAC,EAAE;AAClE,YAAY,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,OAAO,EAAE,CAAC;AAC9E;AACA,QAAQ,MAAM,MAAM,GAAG,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,CAAC;AAChF,QAAQ,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AAClH,QAAQ,OAAO,MAAM;AACrB;AACA,IAAI,YAAY,GAAG;AACnB,QAAQ,OAAO,8BAA8B;AAC7C;AACA;AACA,aAAa,CAAC,8BAA8B,2CAA2C,4BAA4B,CAAC;AACpH;AACA;AACA;AACO,MAAM,4BAA4B,SAAS,yBAAyB,CAAC;AAC5E,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,CAAC,EAAE,eAAe,EAAE,MAAM,CAAC;AACzC;AACA,IAAI,YAAY,CAAC,OAAO,EAAE;AAC1B,QAAQ,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,cAAc,CAAC,EAAE;AAClE,YAAY,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,OAAO,EAAE,CAAC;AAC9E;AACA,QAAQ,MAAM,MAAM,GAAG,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,CAAC;AAChF,QAAQ,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AAClK,QAAQ,OAAO,MAAM;AACrB;AACA,IAAI,YAAY,GAAG;AACnB,QAAQ,OAAO,8BAA8B;AAC7C;AACA;AACA,aAAa,CAAC,8BAA8B,2CAA2C,4BAA4B,CAAC;AACpH;AACA;AACA;AACO,MAAM,4BAA4B,SAAS,yBAAyB,CAAC;AAC5E,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,CAAC,EAAE,eAAe,EAAE,MAAM,CAAC;AACzC;AACA,IAAI,YAAY,CAAC,OAAO,EAAE;AAC1B,QAAQ,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,cAAc,CAAC,EAAE;AAClE,YAAY,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,OAAO,EAAE,CAAC;AAC9E;AACA,QAAQ,MAAM,MAAM,GAAG,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,CAAC;AAChF,QAAQ,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AAClN,QAAQ,OAAO,MAAM;AACrB;AACA,IAAI,YAAY,GAAG;AACnB,QAAQ,OAAO,8BAA8B;AAC7C;AACA;AACA,aAAa,CAAC,8BAA8B,2CAA2C,4BAA4B,CAAC;AACpH;AACA;AACA;AACA;AACA;AACO,MAAM,2BAA2B,SAAS,yBAAyB,CAAC;AAC3E,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,EAAE,EAAE,cAAc,EAAE,MAAM,CAAC;AACzC;AACA,IAAI,YAAY,CAAC,OAAO,EAAE;AAC1B,QAAQ,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,cAAc,CAAC,EAAE;AAClE,YAAY,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,MAAM,EAAE,CAAC;AAC7E;AACA,QAAQ,MAAM,MAAM,GAAG,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,CAAC;AAChF,QAAQ,IAAI,IAAI,CAAC,MAAM,EAAE,kBAAkB,EAAE;AAC7C,YAAY,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AAC5xB;AACA,aAAa;AACb,YAAY,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AAC5xB;AACA,QAAQ,OAAO,MAAM;AACrB;AACA,IAAI,YAAY,GAAG;AACnB,QAAQ,OAAO,6BAA6B;AAC5C;AACA;AACA,aAAa,CAAC,6BAA6B,0CAA0C,2BAA2B,CAAC;AACjH;AACA;AACA;AACO,MAAM,6BAA6B,SAAS,yBAAyB,CAAC;AAC7E,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,CAAC,EAAE,gBAAgB,EAAE,MAAM,CAAC;AAC1C;AACA,IAAI,YAAY,CAAC,OAAO,EAAE;AAC1B,QAAQ,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,cAAc,CAAC,EAAE;AAClE,YAAY,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,iBAAiB,EAAE,CAAC;AACxF;AACA,QAAQ,MAAM,MAAM,GAAG,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,CAAC;AAChF,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE;AACnC,cAAc;AACd;AACA,gBAAgB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC9D,gBAAgB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC9D,gBAAgB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC9D,gBAAgB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC9D;AACA,cAAc;AACd,gBAAgB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC9D,gBAAgB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC9D,gBAAgB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC9D,gBAAgB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC9D,aAAa;AACb,QAAQ,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC;AAC/B,QAAQ,OAAO,MAAM;AACrB;AACA,IAAI,YAAY,GAAG;AACnB,QAAQ,OAAO,+BAA+B;AAC9C;AACA;AACA,aAAa,CAAC,+BAA+B,4CAA4C,6BAA6B,CAAC;AACvH;AACA;AACA;AACO,MAAM,6BAA6B,SAAS,yBAAyB,CAAC;AAC7E,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,CAAC,EAAE,gBAAgB,EAAE,MAAM,CAAC;AAC1C;AACA,IAAI,YAAY,CAAC,OAAO,EAAE;AAC1B,QAAQ,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,cAAc,CAAC,EAAE;AAClE,YAAY,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,iBAAiB,EAAE,CAAC;AACxF;AACA,QAAQ,MAAM,MAAM,GAAG,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,CAAC;AAChF,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE;AACnC,cAAc;AACd;AACA,gBAAgB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC9D,gBAAgB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC9D,gBAAgB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC9D,gBAAgB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC9D,gBAAgB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC9D,gBAAgB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC9D,gBAAgB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC9D,gBAAgB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC9D,gBAAgB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC9D;AACA,cAAc;AACd,gBAAgB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC9D,gBAAgB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC9D,gBAAgB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC9D,gBAAgB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC9D,gBAAgB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC9D,gBAAgB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC9D,gBAAgB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC9D,gBAAgB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC9D,gBAAgB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC9D,aAAa;AACb,QAAQ,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC;AAC/B,QAAQ,OAAO,MAAM;AACrB;AACA,IAAI,YAAY,GAAG;AACnB,QAAQ,OAAO,+BAA+B;AAC9C;AACA;AACA,aAAa,CAAC,+BAA+B,4CAA4C,6BAA6B,CAAC;AACvH;AACA;AACA;AACO,MAAM,4BAA4B,SAAS,yBAAyB,CAAC;AAC5E,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,CAAC,EAAE,eAAe,EAAE,MAAM,CAAC;AACzC;AACA,IAAI,cAAc,CAAC,OAAO,EAAE;AAC5B,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,QAAQ,CAAC,OAAO,CAAC;AACjE,QAAQ,IAAI,CAAC,KAAK,EAAE;AACpB,YAAY,KAAK,GAAG,OAAO,CAAC,IAAI,EAAE;AAClC,YAAY,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC;AAC/D;AACA,QAAQ,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC;AACjE,QAAQ,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC;AACjE;AACA,IAAI,YAAY,GAAG;AACnB,QAAQ,OAAO,8BAA8B;AAC7C;AACA;AACA,aAAa,CAAC,8BAA8B,2CAA2C,4BAA4B,CAAC;AACpH;AACA;AACA;AACO,MAAM,4BAA4B,SAAS,yBAAyB,CAAC;AAC5E,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,CAAC,EAAE,eAAe,EAAE,MAAM,CAAC;AACzC;AACA,IAAI,cAAc,CAAC,OAAO,EAAE;AAC5B,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,QAAQ,CAAC,OAAO,CAAC;AACjE,QAAQ,IAAI,CAAC,KAAK,EAAE;AACpB,YAAY,KAAK,GAAG,OAAO,CAAC,IAAI,EAAE;AAClC,YAAY,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC;AAC/D;AACA,QAAQ,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC;AACjE,QAAQ,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC;AACjE,QAAQ,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC;AACjE;AACA,IAAI,YAAY,GAAG;AACnB,QAAQ,OAAO,8BAA8B;AAC7C;AACA;AACA,aAAa,CAAC,8BAA8B,2CAA2C,4BAA4B,CAAC;AACpH;AACA;AACA;AACO,MAAM,4BAA4B,SAAS,yBAAyB,CAAC;AAC5E,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,CAAC,EAAE,eAAe,EAAE,MAAM,CAAC;AACzC;AACA,IAAI,cAAc,CAAC,OAAO,EAAE;AAC5B,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,QAAQ,CAAC,OAAO,CAAC;AACjE,QAAQ,IAAI,CAAC,KAAK,EAAE;AACpB,YAAY,KAAK,GAAG,OAAO,CAAC,IAAI,EAAE;AAClC,YAAY,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC;AAC/D;AACA,QAAQ,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC;AACjE,QAAQ,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC;AACjE,QAAQ,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC;AACjE,QAAQ,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC;AACjE;AACA,IAAI,YAAY,GAAG;AACnB,QAAQ,OAAO,8BAA8B;AAC7C;AACA;AACA,aAAa,CAAC,8BAA8B,2CAA2C,4BAA4B,CAAC;AACpH;AACA;AACA;AACO,MAAM,2BAA2B,SAAS,yBAAyB,CAAC;AAC3E,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,EAAE,EAAE,cAAc,EAAE,MAAM,CAAC;AACzC;AACA,IAAI,cAAc,CAAC,OAAO,EAAE;AAC5B,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,QAAQ,CAAC,OAAO,CAAC;AACjE,QAAQ,IAAI,CAAC,KAAK,EAAE;AACpB,YAAY,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE;AACrC,YAAY,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC;AAC/D;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AACrC,YAAY,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC;AAC3E;AACA;AACA,IAAI,YAAY,GAAG;AACnB,QAAQ,OAAO,6BAA6B;AAC5C;AACA;AACA,aAAa,CAAC,6BAA6B,0CAA0C,2BAA2B,CAAC;AACjH;AACA;AACA;AACO,MAAM,6BAA6B,SAAS,yBAAyB,CAAC;AAC7E,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,CAAC,EAAE,gBAAgB,EAAE,MAAM,CAAC;AAC1C;AACA,IAAI,cAAc,CAAC,OAAO,EAAE;AAC5B,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,QAAQ,CAAC,OAAO,CAAC;AACjE,QAAQ,IAAI,CAAC,KAAK,EAAE;AACpB,YAAY,KAAK,GAAG,IAAI,iBAAiB,EAAE;AAC3C,YAAY,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC;AAC/D;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACpC,YAAY,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC;AAC3E;AACA;AACA,IAAI,YAAY,GAAG;AACnB,QAAQ,OAAO,+BAA+B;AAC9C;AACA;AACA,aAAa,CAAC,+BAA+B,4CAA4C,6BAA6B,CAAC;AACvH;AACA;AACA;AACO,MAAM,6BAA6B,SAAS,yBAAyB,CAAC;AAC7E,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,CAAC,EAAE,gBAAgB,EAAE,MAAM,CAAC;AAC1C;AACA,IAAI,cAAc,CAAC,OAAO,EAAE;AAC5B,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,QAAQ,CAAC,OAAO,CAAC;AACjE,QAAQ,IAAI,CAAC,KAAK,EAAE;AACpB,YAAY,KAAK,GAAG,IAAI,iBAAiB,EAAE;AAC3C,YAAY,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC;AAC/D;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACpC,YAAY,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC;AAC3E;AACA;AACA,IAAI,YAAY,GAAG;AACnB,QAAQ,OAAO,+BAA+B;AAC9C;AACA;AACA,aAAa,CAAC,+BAA+B,4CAA4C,6BAA6B,CAAC;;;;"}