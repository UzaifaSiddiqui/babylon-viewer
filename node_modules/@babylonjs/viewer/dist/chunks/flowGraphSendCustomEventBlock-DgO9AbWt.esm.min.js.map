{"version":3,"file":"flowGraphSendCustomEventBlock-DgO9AbWt.esm.min.js","sources":["../../../../../dev/core/dist/FlowGraph/Blocks/Event/flowGraphSendCustomEventBlock.js"],"sourcesContent":["import { FlowGraphExecutionBlockWithOutSignal } from \"../../flowGraphExecutionBlockWithOutSignal\";\nimport { RegisterClass } from \"../../../Misc/typeStore\";\n/**\n * A block that sends a custom event.\n * To receive this event you need to use the ReceiveCustomEvent block.\n * This block has no output, but does have inputs based on the eventData from the configuration.\n * @see FlowGraphReceiveCustomEventBlock\n */\nexport class FlowGraphSendCustomEventBlock extends FlowGraphExecutionBlockWithOutSignal {\n    constructor(\n    /**\n     * the configuration of the block\n     */\n    config) {\n        super(config);\n        this.config = config;\n        for (const key in this.config.eventData) {\n            this.registerDataInput(key, this.config.eventData[key].type, this.config.eventData[key].value);\n        }\n    }\n    _execute(context) {\n        const eventId = this.config.eventId;\n        // eventData is a map with the key being the data input's name, and value being the data input's value\n        const eventData = {};\n        for (const port of this.dataInputs) {\n            eventData[port.name] = port.getValue(context);\n        }\n        context.configuration.coordinator.notifyCustomEvent(eventId, eventData);\n        this.out._activateSignal(context);\n    }\n    /**\n     * @returns class name of the block.\n     */\n    getClassName() {\n        return \"FlowGraphReceiveCustomEventBlock\" /* FlowGraphBlockNames.ReceiveCustomEvent */;\n    }\n}\nRegisterClass(\"FlowGraphReceiveCustomEventBlock\" /* FlowGraphBlockNames.ReceiveCustomEvent */, FlowGraphSendCustomEventBlock);\n//# sourceMappingURL=flowGraphSendCustomEventBlock.js.map"],"names":["FlowGraphSendCustomEventBlock","FlowGraphExecutionBlockWithOutSignal","constructor","config","super","this","key","eventData","registerDataInput","type","value","_execute","context","eventId","port","dataInputs","name","getValue","configuration","coordinator","notifyCustomEvent","out","_activateSignal","getClassName","RegisterClass"],"mappings":"6MAQO,MAAMA,UAAsCC,EAC/C,WAAAC,CAIAC,GACIC,MAAMD,GACNE,KAAKF,OAASA,EACd,IAAK,MAAMG,KAAOD,KAAKF,OAAOI,UAC1BF,KAAKG,kBAAkBF,EAAKD,KAAKF,OAAOI,UAAUD,GAAKG,KAAMJ,KAAKF,OAAOI,UAAUD,GAAKI,MAEpG,CACI,QAAAC,CAASC,GACL,MAAMC,EAAUR,KAAKF,OAAOU,QAEtBN,EAAY,CAAE,EACpB,IAAK,MAAMO,KAAQT,KAAKU,WACpBR,EAAUO,EAAKE,MAAQF,EAAKG,SAASL,GAEzCA,EAAQM,cAAcC,YAAYC,kBAAkBP,EAASN,GAC7DF,KAAKgB,IAAIC,gBAAgBV,EACjC,CAII,YAAAW,GACI,MAAO,kCACf,EAEAC,EAAc,mCAAiFxB"}