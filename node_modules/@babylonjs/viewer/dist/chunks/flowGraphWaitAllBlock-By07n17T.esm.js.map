{"version":3,"file":"flowGraphWaitAllBlock-By07n17T.esm.js","sources":["../../../../../dev/core/dist/FlowGraph/Blocks/Execution/ControlFlow/flowGraphWaitAllBlock.js"],"sourcesContent":["import { FlowGraphExecutionBlockWithOutSignal } from \"../../../flowGraphExecutionBlockWithOutSignal\";\nimport { RegisterClass } from \"../../../../Misc/typeStore\";\nimport { RichTypeFlowGraphInteger } from \"core/FlowGraph/flowGraphRichTypes\";\nimport { FlowGraphInteger } from \"core/FlowGraph/CustomTypes/flowGraphInteger\";\n/**\n * A block that waits for all input flows to be activated before activating its output flow.\n */\nexport class FlowGraphWaitAllBlock extends FlowGraphExecutionBlockWithOutSignal {\n    constructor(\n    /**\n     * the configuration of the block\n     */\n    config) {\n        super(config);\n        this.config = config;\n        /**\n         * An array of input signals\n         */\n        this.inFlows = [];\n        this._cachedActivationState = [];\n        this.reset = this._registerSignalInput(\"reset\");\n        this.completed = this._registerSignalOutput(\"completed\");\n        this.remainingInputs = this.registerDataOutput(\"remainingInputs\", RichTypeFlowGraphInteger, new FlowGraphInteger(this.config.inputSignalCount || 0));\n        // The first inFlow is the default input signal all execution blocks have\n        for (let i = 0; i < this.config.inputSignalCount; i++) {\n            this.inFlows.push(this._registerSignalInput(`in_${i}`));\n        }\n        // no need for in\n        this._unregisterSignalInput(\"in\");\n    }\n    _getCurrentActivationState(context) {\n        const activationState = this._cachedActivationState;\n        activationState.length = 0;\n        if (!context._hasExecutionVariable(this, \"activationState\")) {\n            for (let i = 0; i < this.config.inputSignalCount; i++) {\n                activationState.push(false);\n            }\n        }\n        else {\n            const contextActivationState = context._getExecutionVariable(this, \"activationState\", []);\n            for (let i = 0; i < contextActivationState.length; i++) {\n                activationState.push(contextActivationState[i]);\n            }\n        }\n        return activationState;\n    }\n    _execute(context, callingSignal) {\n        const activationState = this._getCurrentActivationState(context);\n        if (callingSignal === this.reset) {\n            for (let i = 0; i < this.config.inputSignalCount; i++) {\n                activationState[i] = false;\n            }\n        }\n        else {\n            const index = this.inFlows.indexOf(callingSignal);\n            if (index >= 0) {\n                activationState[index] = true;\n            }\n        }\n        this.remainingInputs.setValue(new FlowGraphInteger(activationState.filter((v) => !v).length), context);\n        context._setExecutionVariable(this, \"activationState\", activationState.slice());\n        if (!activationState.includes(false)) {\n            this.completed._activateSignal(context);\n            for (let i = 0; i < this.config.inputSignalCount; i++) {\n                activationState[i] = false;\n            }\n        }\n        else {\n            callingSignal !== this.reset && this.out._activateSignal(context);\n        }\n    }\n    /**\n     * @returns class name of the block.\n     */\n    getClassName() {\n        return \"FlowGraphWaitAllBlock\" /* FlowGraphBlockNames.WaitAll */;\n    }\n    /**\n     * Serializes this block into a object\n     * @param serializationObject the object to serialize to\n     */\n    serialize(serializationObject) {\n        super.serialize(serializationObject);\n        serializationObject.config.inputFlows = this.config.inputSignalCount;\n    }\n}\nRegisterClass(\"FlowGraphWaitAllBlock\" /* FlowGraphBlockNames.WaitAll */, FlowGraphWaitAllBlock);\n//# sourceMappingURL=flowGraphWaitAllBlock.js.map"],"names":[],"mappings":"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"}