import{aC as e}from"./index-VvGulz6u.esm.min.js";import{DDSTools as i}from"./dds-BCkAK3OP.esm.min.js";import"./abstractEngine.cubeTexture-n3SIAyxH.esm.min.js";class t{constructor(){this.supportCascades=!0}loadCubeData(t,a,s,n){const o=a.getEngine();let p,m=!1,r=1e3;if(Array.isArray(t))for(let e=0;e<t.length;e++){const s=t[e];p=i.GetDDSInfo(s),a.width=p.width,a.height=p.height,m=(p.isRGB||p.isLuminance||p.mipmapCount>1)&&a.generateMipMaps,o._unpackFlipY(p.isCompressed),i.UploadDDSLevels(o,a,s,p,m,6,-1,e),p.isFourCC||1!==p.mipmapCount?r=p.mipmapCount-1:o.generateMipMapsForCubemap(a)}else{const n=t;p=i.GetDDSInfo(n),a.width=p.width,a.height=p.height,s&&(p.sphericalPolynomial=new e),m=(p.isRGB||p.isLuminance||p.mipmapCount>1)&&a.generateMipMaps,o._unpackFlipY(p.isCompressed),i.UploadDDSLevels(o,a,n,p,m,6),p.isFourCC||1!==p.mipmapCount?r=p.mipmapCount-1:o.generateMipMapsForCubemap(a,!1)}o._setCubeMapTextureParams(a,m,r),a.isReady=!0,a.onLoadedObservable.notifyObservers(a),a.onLoadedObservable.clear(),n&&n({isDDS:!0,width:a.width,info:p,data:t,texture:a})}loadData(e,t,a){const s=i.GetDDSInfo(e),n=(s.isRGB||s.isLuminance||s.mipmapCount>1)&&t.generateMipMaps&&Math.max(s.width,s.height)>>s.mipmapCount-1==1;a(s.width,s.height,n,s.isFourCC,(()=>{i.UploadDDSLevels(t.getEngine(),t,e,s,n,1)}))}}export{t as _DDSTextureLoader};
//# sourceMappingURL=ddsTextureLoader-DgHLBqqM.esm.min.js.map
