{"version":3,"file":"hdrFiltering.fragment-dUYrDIEq.esm.js","sources":["../../../../../dev/core/dist/Shaders/hdrFiltering.fragment.js"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\nimport \"./ShadersInclude/helperFunctions\";\nimport \"./ShadersInclude/importanceSampling\";\nimport \"./ShadersInclude/pbrBRDFFunctions\";\nimport \"./ShadersInclude/hdrFilteringFunctions\";\nconst name = \"hdrFilteringPixelShader\";\nconst shader = `#include<helperFunctions>\n#include<importanceSampling>\n#include<pbrBRDFFunctions>\n#include<hdrFilteringFunctions>\nuniform float alphaG;uniform samplerCube inputTexture;uniform vec2 vFilteringInfo;uniform float hdrScale;varying vec3 direction;void main() {vec3 color=radiance(alphaG,inputTexture,direction,vFilteringInfo);gl_FragColor=vec4(color*hdrScale,1.0);}`;\n// Sideeffect\nif (!ShaderStore.ShadersStore[name]) {\n    ShaderStore.ShadersStore[name] = shader;\n}\n/** @internal */\nexport const hdrFilteringPixelShader = { name, shader };\n//# sourceMappingURL=hdrFiltering.fragment.js.map"],"names":[],"mappings":";;;;;AAAA;AAMA,MAAM,IAAI,GAAG,yBAAyB;AACtC,MAAM,MAAM,GAAG,CAAC;AAChB;AACA;AACA;AACA,sPAAsP,CAAC;AACvP;AACA,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;AACrC,IAAI,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,MAAM;AAC3C;AACA;AACY,MAAC,uBAAuB,GAAG,EAAE,IAAI,EAAE,MAAM;;;;"}