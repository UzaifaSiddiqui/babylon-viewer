{"version":3,"file":"flowGraphCancelDelayBlock-8pLHl6sm.esm.min.js","sources":["../../../../../dev/core/dist/FlowGraph/Blocks/Execution/ControlFlow/flowGraphCancelDelayBlock.js"],"sourcesContent":["import { RegisterClass } from \"core/Misc/typeStore\";\nimport { FlowGraphExecutionBlockWithOutSignal } from \"../../../flowGraphExecutionBlockWithOutSignal\";\nimport { RichTypeFlowGraphInteger } from \"../../../flowGraphRichTypes\";\nimport { getNumericValue } from \"core/FlowGraph/utils\";\n/**\n * This block cancels a delay that was previously scheduled.\n */\nexport class FlowGraphCancelDelayBlock extends FlowGraphExecutionBlockWithOutSignal {\n    constructor(config) {\n        super(config);\n        this.delayIndex = this.registerDataInput(\"delayIndex\", RichTypeFlowGraphInteger);\n    }\n    _execute(context, _callingSignal) {\n        const delayIndex = getNumericValue(this.delayIndex.getValue(context));\n        if (delayIndex <= 0 || isNaN(delayIndex) || !isFinite(delayIndex)) {\n            return this._reportError(context, \"Invalid delay index\");\n        }\n        const timers = context._getGlobalContextVariable(\"pendingDelays\", []);\n        const timer = timers[delayIndex];\n        if (timer) {\n            timer.dispose();\n            // not removing it from the array. Disposing it will clear all of its resources\n        }\n        // activate the out output flow\n        this.out._activateSignal(context);\n    }\n    getClassName() {\n        return \"FlowGraphCancelDelayBlock\" /* FlowGraphBlockNames.CancelDelay */;\n    }\n}\nRegisterClass(\"FlowGraphCancelDelayBlock\" /* FlowGraphBlockNames.CancelDelay */, FlowGraphCancelDelayBlock);\n//# sourceMappingURL=flowGraphCancelDelayBlock.js.map"],"names":["FlowGraphCancelDelayBlock","FlowGraphExecutionBlockWithOutSignal","constructor","config","super","this","delayIndex","registerDataInput","RichTypeFlowGraphInteger","_execute","context","_callingSignal","getNumericValue","getValue","isNaN","isFinite","_reportError","timer","_getGlobalContextVariable","dispose","out","_activateSignal","getClassName","RegisterClass"],"mappings":"gOAOO,MAAMA,UAAkCC,EAC3C,WAAAC,CAAYC,GACRC,MAAMD,GACNE,KAAKC,WAAaD,KAAKE,kBAAkB,aAAcC,EAC/D,CACI,QAAAC,CAASC,EAASC,GACd,MAAML,EAAaM,EAAgBP,KAAKC,WAAWO,SAASH,IAC5D,GAAIJ,GAAc,GAAKQ,MAAMR,KAAgBS,SAAST,GAClD,OAAOD,KAAKW,aAAaN,EAAS,uBAEtC,MACMO,EADSP,EAAQQ,0BAA0B,gBAAiB,IAC7CZ,GACjBW,GACAA,EAAME,UAIVd,KAAKe,IAAIC,gBAAgBX,EACjC,CACI,YAAAY,GACI,MAAO,2BACf,EAEAC,EAAc,4BAAmEvB"}