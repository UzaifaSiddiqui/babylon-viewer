import { F as FlowGraphBlock, l as defaultValueSerializationFunction } from './KHR_interactivity-B2ikxW0Z.esm.js';
import { o as getRichTypeFromValue } from './declarationMapper-ZR2ND5pQ.esm.js';
import { R as RegisterClass } from './index-D3asnK0t.esm.js';
import './objectModelMapping-j2gX4FqK.esm.js';

/**
 * Block that returns a constant value.
 */
class FlowGraphConstantBlock extends FlowGraphBlock {
    constructor(
    /**
     * the configuration of the block
     */
    config) {
        super(config);
        this.config = config;
        this.output = this.registerDataOutput("output", getRichTypeFromValue(config.value));
    }
    _updateOutputs(context) {
        this.output.setValue(this.config.value, context);
    }
    /**
     * Gets the class name of this block
     * @returns the class name
     */
    getClassName() {
        return "FlowGraphConstantBlock" /* FlowGraphBlockNames.Constant */;
    }
    /**
     * Serializes this block
     * @param serializationObject the object to serialize to
     * @param valueSerializeFunction the function to use to serialize the value
     */
    serialize(serializationObject = {}, valueSerializeFunction = defaultValueSerializationFunction) {
        super.serialize(serializationObject);
        valueSerializeFunction("value", this.config.value, serializationObject.config);
    }
}
RegisterClass("FlowGraphConstantBlock" /* FlowGraphBlockNames.Constant */, FlowGraphConstantBlock);

export { FlowGraphConstantBlock };
//# sourceMappingURL=flowGraphConstantBlock-AH3YPSVy.esm.js.map
