import{J as e,aG as t,b1 as i,b2 as s,b3 as r,t as a,b4 as o,b5 as n,b6 as l,b7 as u,b8 as h,C as E,b9 as T,T as f,aJ as d,aK as _,aL as c,Z as p,ba as m,bb as A,m as R,aM as P,bc as x,K as I,bd as S,aN as C,A as g,N as L,be as b,r as M,bf as O,D as v,W as N,s as F,U as D,X as y,l as U,y as B,u as G,bg as H,z as k,bh as V,v as X,bi as w,R as Y}from"./index-VvGulz6u.esm.min.js";const W={effect:null,subMesh:null};class z extends B{constructor(e){super(e),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(e){const t=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const i of t)this[i]=i===e}}class Q extends e{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(e){this._attachImageProcessingConfiguration(e),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(e){e!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=e||this.getScene().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(e){this.imageProcessingConfiguration.colorCurvesEnabled=e}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(e){this.imageProcessingConfiguration.colorGradingEnabled=e}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(e){this._imageProcessingConfiguration.toneMappingEnabled=e}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(e){this._imageProcessingConfiguration.exposure=e}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(e){this._imageProcessingConfiguration.contrast=e}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(e){this._imageProcessingConfiguration.colorGradingTexture=e}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(e){this._imageProcessingConfiguration.colorCurves=e}get canRenderToMRT(){return!0}constructor(e,a,o=!1){super(e,a,void 0,o||Q.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new t(0,0,0),this.diffuseColor=new t(1,1,1),this.specularColor=new t(1,1,1),this.emissiveColor=new t(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new i(16),this._globalAmbientColor=new t(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new s(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new r,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),Q.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),Q.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(Q.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(Q.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"StandardMaterial"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===a.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.hasAlpha&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==a.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.hasAlpha||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(e,t,i=!1){this._uniformBufferLayoutBuilt||this.buildUniformLayout();const s=t._drawWrapper;if(s.effect&&this.isFrozen&&s._wasPreviouslyReady&&s._wasPreviouslyUsingInstances===i)return!0;t.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),t.materialDefines=new z(this._eventInfo.defineNames));const a=this.getScene(),L=t.materialDefines;if(this._isReadyForSubMesh(t))return!0;const b=a.getEngine();L._needNormals=o(a,e,L,!0,this._maxSimultaneousLights,this._disableLighting),n(a,L);const M=this.needAlphaBlendingForMesh(e)&&this.getScene().useOrderIndependentTransparency;if(l(a,L,this.canRenderToMRT&&!M),u(a,L,M),h.PrepareDefines(b.currentRenderPassId,e,L),L._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,L._needUVs=!1;for(let e=1;e<=E.MAX_SUPPORTED_UV_SETS;++e)L["MAINUV"+e]=!1;if(a.texturesEnabled){if(L.DIFFUSEDIRECTUV=0,L.BUMPDIRECTUV=0,L.AMBIENTDIRECTUV=0,L.OPACITYDIRECTUV=0,L.EMISSIVEDIRECTUV=0,L.SPECULARDIRECTUV=0,L.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&Q.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;T(this._diffuseTexture,L,"DIFFUSE")}else L.DIFFUSE=!1;if(this._ambientTexture&&Q.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;T(this._ambientTexture,L,"AMBIENT")}else L.AMBIENT=!1;if(this._opacityTexture&&Q.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;T(this._opacityTexture,L,"OPACITY"),L.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else L.OPACITY=!1;if(this._reflectionTexture&&Q.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(L._needNormals=!0,L.REFLECTION=!0,L.ROUGHNESS=this._roughness>0,L.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,L.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===f.INVCUBIC_MODE,L.REFLECTIONMAP_3D=this._reflectionTexture.isCube,L.REFLECTIONMAP_OPPOSITEZ=L.REFLECTIONMAP_3D&&this.getScene().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,L.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case f.EXPLICIT_MODE:L.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case f.PLANAR_MODE:L.setReflectionMode("REFLECTIONMAP_PLANAR");break;case f.PROJECTION_MODE:L.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case f.SKYBOX_MODE:L.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case f.SPHERICAL_MODE:L.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case f.EQUIRECTANGULAR_MODE:L.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case f.FIXED_EQUIRECTANGULAR_MODE:L.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case f.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:L.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case f.CUBIC_MODE:case f.INVCUBIC_MODE:default:L.setReflectionMode("REFLECTIONMAP_CUBIC")}L.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else L.REFLECTION=!1,L.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&Q.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;T(this._emissiveTexture,L,"EMISSIVE")}else L.EMISSIVE=!1;if(this._lightmapTexture&&Q.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;T(this._lightmapTexture,L,"LIGHTMAP"),L.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,L.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else L.LIGHTMAP=!1;if(this._specularTexture&&Q.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;T(this._specularTexture,L,"SPECULAR"),L.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else L.SPECULAR=!1;if(a.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&Q.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;T(this._bumpTexture,L,"BUMP"),L.PARALLAX=this._useParallax,L.PARALLAX_RHS=a.useRightHandedSystem,L.PARALLAXOCCLUSION=this._useParallaxOcclusion,L.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else L.BUMP=!1,L.PARALLAX=!1,L.PARALLAX_RHS=!1,L.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&Q.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;L._needUVs=!0,L.REFRACTION=!0,L.REFRACTIONMAP_3D=this._refractionTexture.isCube,L.RGBDREFRACTION=this._refractionTexture.isRGBD,L.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else L.REFRACTION=!1;L.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else L.DIFFUSE=!1,L.AMBIENT=!1,L.OPACITY=!1,L.REFLECTION=!1,L.EMISSIVE=!1,L.LIGHTMAP=!1,L.BUMP=!1,L.REFRACTION=!1;L.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),L.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,L.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,L.SPECULAROVERALPHA=this._useSpecularOverAlpha,L.PREMULTIPLYALPHA=this.alphaMode===E.ALPHA_PREMULTIPLIED||this.alphaMode===E.ALPHA_PREMULTIPLIED_PORTERDUFF,L.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,L.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(e)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=L,this._eventInfo.subMesh=t,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(L._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(L),L.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,L.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(L._areFresnelDirty&&(Q.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(L.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,L.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,L.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,L.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,L.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,L.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,L._needNormals=!0,L.FRESNEL=!0):L.FRESNEL=!1),L.AREALIGHTUSED)for(let t=0;t<e.lightSources.length;t++)if(!e.lightSources[t]._isReady())return!1;d(e,a,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(e),L,this._applyDecalMapAfterDetailMap),_(a,b,this,L,i,null,t.getRenderingMesh().hasThinInstances),this._eventInfo.defines=L,this._eventInfo.mesh=e,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),c(e,L,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let O=!1;if(L.isDirty){const i=L._areLightsDisposed;L.markAsProcessed();const s=new p;L.REFLECTION&&s.addFallback(0,"REFLECTION"),L.SPECULAR&&s.addFallback(0,"SPECULAR"),L.BUMP&&s.addFallback(0,"BUMP"),L.PARALLAX&&s.addFallback(1,"PARALLAX"),L.PARALLAX_RHS&&s.addFallback(1,"PARALLAX_RHS"),L.PARALLAXOCCLUSION&&s.addFallback(0,"PARALLAXOCCLUSION"),L.SPECULAROVERALPHA&&s.addFallback(0,"SPECULAROVERALPHA"),L.FOG&&s.addFallback(1,"FOG"),L.POINTSIZE&&s.addFallback(0,"POINTSIZE"),L.LOGARITHMICDEPTH&&s.addFallback(0,"LOGARITHMICDEPTH"),m(L,s,this._maxSimultaneousLights),L.SPECULARTERM&&s.addFallback(0,"SPECULARTERM"),L.DIFFUSEFRESNEL&&s.addFallback(1,"DIFFUSEFRESNEL"),L.OPACITYFRESNEL&&s.addFallback(2,"OPACITYFRESNEL"),L.REFLECTIONFRESNEL&&s.addFallback(3,"REFLECTIONFRESNEL"),L.EMISSIVEFRESNEL&&s.addFallback(4,"EMISSIVEFRESNEL"),L.FRESNEL&&s.addFallback(4,"FRESNEL"),L.MULTIVIEW&&s.addFallback(0,"MULTIVIEW");const o=[R.PositionKind];L.NORMAL&&o.push(R.NormalKind),L.TANGENT&&o.push(R.TangentKind);for(let e=1;e<=E.MAX_SUPPORTED_UV_SETS;++e)L["UV"+e]&&o.push(`uv${1===e?"":e}`);L.VERTEXCOLOR&&o.push(R.ColorKind),A(o,e,L,s),P(o,L),x(o,e,L),I(o,e,L);let n="default";const l=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],u=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],T=["Material","Scene","Mesh"],f={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:L.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=s,this._eventInfo.fallbackRank=0,this._eventInfo.defines=L,this._eventInfo.uniforms=l,this._eventInfo.attributes=o,this._eventInfo.samplers=u,this._eventInfo.uniformBuffersNames=T,this._eventInfo.customCode=void 0,this._eventInfo.mesh=e,this._eventInfo.indexParameters=f,this._callbackPluginEventGeneric(128,this._eventInfo),h.AddUniformsAndSamplers(l,u),r.AddUniforms(l),S&&(S.PrepareUniforms(l,L),S.PrepareSamplers(u,L)),C({uniformsNames:l,uniformBuffersNames:T,samplers:u,defines:L,maxSimultaneousLights:this._maxSimultaneousLights}),g(l);const d={};this.customShaderNameResolve&&(n=this.customShaderNameResolve(n,l,T,u,L,o,d));const _=L.toString(),c=t.effect;let M=a.getEngine().createEffect(n,{attributes:o,uniformsNames:l,uniformBuffersNames:T,samplers:u,defines:_,fallbacks:s,onCompiled:this.onCompiled,onError:this.onError,indexParameters:f,processFinalCode:d.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:L.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([import("./default.vertex-CuzQCokz.esm.min.js"),import("./default.fragment-DmCboKGD.esm.min.js")]):await Promise.all([import("./default.vertex-QqLphwuP.esm.min.js"),import("./default.fragment-O3MOUSWN.esm.min.js")]),this._shadersLoaded=!0}},b);if(this._eventInfo.customCode=void 0,M)if(this._onEffectCreatedObservable&&(W.effect=M,W.subMesh=t,this._onEffectCreatedObservable.notifyObservers(W)),this.allowShaderHotSwapping&&c&&!M.isReady()){if(M=c,L.markAsUnprocessed(),O=this.isFrozen,i)return L._areLightsDisposed=!0,!1}else a.resetCachedMaterial(),t.setEffect(M,L,this._materialContext)}return!(!t.effect||!t.effect.isReady())&&(L._renderId=a.getRenderId(),s._wasPreviouslyReady=!O,s._wasPreviouslyUsingInstances=i,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const e=this._uniformBuffer;e.addUniform("diffuseLeftColor",4),e.addUniform("diffuseRightColor",4),e.addUniform("opacityParts",4),e.addUniform("reflectionLeftColor",4),e.addUniform("reflectionRightColor",4),e.addUniform("refractionLeftColor",4),e.addUniform("refractionRightColor",4),e.addUniform("emissiveLeftColor",4),e.addUniform("emissiveRightColor",4),e.addUniform("vDiffuseInfos",2),e.addUniform("vAmbientInfos",2),e.addUniform("vOpacityInfos",2),e.addUniform("vReflectionInfos",2),e.addUniform("vReflectionPosition",3),e.addUniform("vReflectionSize",3),e.addUniform("vEmissiveInfos",2),e.addUniform("vLightmapInfos",2),e.addUniform("vSpecularInfos",2),e.addUniform("vBumpInfos",3),e.addUniform("diffuseMatrix",16),e.addUniform("ambientMatrix",16),e.addUniform("opacityMatrix",16),e.addUniform("reflectionMatrix",16),e.addUniform("emissiveMatrix",16),e.addUniform("lightmapMatrix",16),e.addUniform("specularMatrix",16),e.addUniform("bumpMatrix",16),e.addUniform("vTangentSpaceParams",2),e.addUniform("pointSize",1),e.addUniform("alphaCutOff",1),e.addUniform("refractionMatrix",16),e.addUniform("vRefractionInfos",4),e.addUniform("vRefractionPosition",3),e.addUniform("vRefractionSize",3),e.addUniform("vSpecularColor",4),e.addUniform("vEmissiveColor",3),e.addUniform("vDiffuseColor",4),e.addUniform("vAmbientColor",3),e.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(e,i,s){const r=this.getScene(),a=s.materialDefines;if(!a)return;const o=s.effect;if(!o)return;this._activeEffect=o,i.getMeshUniformBuffer().bindToEffect(o,"Mesh"),i.transferToEffect(e),this._uniformBuffer.bindToEffect(o,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,r,i,e,this.isFrozen),h.Bind(r.getEngine().currentRenderPassId,this._activeEffect,i,e,this);const n=r.activeCamera;n?this._uniformBuffer.updateFloat4("cameraInfo",n.minZ,n.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=s,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),a.OBJECTSPACE_NORMALMAP&&(e.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const l=this._mustRebind(r,o,s,i.visibility);L(i,o);const u=this._uniformBuffer;if(l){if(this.bindViewProjection(o),!u.useUbo||!this.isFrozen||!u.isSync||s._drawWrapper._forceRebindOnNextCall){if(Q.FresnelEnabled&&a.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(u.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),u.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&u.updateColor4("opacityParts",new t(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(u.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),u.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(u.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),u.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(u.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),u.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),r.texturesEnabled){if(this._diffuseTexture&&Q.DiffuseTextureEnabled&&(u.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),b(this._diffuseTexture,u,"diffuse")),this._ambientTexture&&Q.AmbientTextureEnabled&&(u.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),b(this._ambientTexture,u,"ambient")),this._opacityTexture&&Q.OpacityTextureEnabled&&(u.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),b(this._opacityTexture,u,"opacity")),this._hasAlphaChannel()&&u.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&Q.ReflectionTextureEnabled){if(u.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),u.updateMatrix("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const e=this._reflectionTexture;u.updateVector3("vReflectionPosition",e.boundingBoxPosition),u.updateVector3("vReflectionSize",e.boundingBoxSize)}}else u.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&Q.EmissiveTextureEnabled&&(u.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),b(this._emissiveTexture,u,"emissive")),this._lightmapTexture&&Q.LightmapTextureEnabled&&(u.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),b(this._lightmapTexture,u,"lightmap")),this._specularTexture&&Q.SpecularTextureEnabled&&(u.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),b(this._specularTexture,u,"specular")),this._bumpTexture&&r.getEngine().getCaps().standardDerivatives&&Q.BumpTextureEnabled&&(u.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),b(this._bumpTexture,u,"bump"),r._mirroredCameraPosition?u.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):u.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&Q.RefractionTextureEnabled){let e=1;if(this._refractionTexture.isCube||(u.updateMatrix("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(e=this._refractionTexture.depth)),u.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,e,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const e=this._refractionTexture;u.updateVector3("vRefractionPosition",e.boundingBoxPosition),u.updateVector3("vRefractionSize",e.boundingBoxSize)}}}this.pointsCloud&&u.updateFloat("pointSize",this.pointSize),u.updateColor4("vSpecularColor",this.specularColor,this.specularPower),u.updateColor3("vEmissiveColor",Q.EmissiveTextureEnabled?this.emissiveColor:t.BlackReadOnly),u.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),r.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),u.updateColor3("vAmbientColor",this._globalAmbientColor)}r.texturesEnabled&&(this._diffuseTexture&&Q.DiffuseTextureEnabled&&o.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&Q.AmbientTextureEnabled&&o.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&Q.OpacityTextureEnabled&&o.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&Q.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?o.setTexture("reflectionCubeSampler",this._reflectionTexture):o.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&Q.EmissiveTextureEnabled&&o.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&Q.LightmapTextureEnabled&&o.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&Q.SpecularTextureEnabled&&o.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&r.getEngine().getCaps().standardDerivatives&&Q.BumpTextureEnabled&&o.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&Q.RefractionTextureEnabled&&(this._refractionTexture.isCube?o.setTexture("refractionCubeSampler",this._refractionTexture):o.setTexture("refraction2DSampler",this._refractionTexture))),this.getScene().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(i)&&this.getScene().depthPeelingRenderer.bind(o),this._eventInfo.subMesh=s,this._callbackPluginEventBindForSubMesh(this._eventInfo),M(o,this,r),this.bindEyePosition(o)}else r.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);!l&&this.isFrozen||(r.lightsEnabled&&!this._disableLighting&&O(r,i,o,a,this._maxSimultaneousLights),(r.fogEnabled&&i.applyFog&&r.fogMode!==v.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||i.receiveShadows||a.PREPASS)&&this.bindView(o),N(r,i,o),a.NUM_MORPH_INFLUENCERS&&F(i,o),a.BAKED_VERTEX_ANIMATION_TEXTURE&&i.bakedVertexAnimationManager?.bind(o,a.INSTANCES),this.useLogarithmicDepth&&D(a,o,r),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)),this._afterBind(i,this._activeEffect,s),u.update()}getAnimatables(){const e=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&e.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&e.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&e.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&e.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&e.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&e.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&e.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&e.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&e.push(this._refractionTexture),e}getActiveTextures(){const e=super.getActiveTextures();return this._diffuseTexture&&e.push(this._diffuseTexture),this._ambientTexture&&e.push(this._ambientTexture),this._opacityTexture&&e.push(this._opacityTexture),this._reflectionTexture&&e.push(this._reflectionTexture),this._emissiveTexture&&e.push(this._emissiveTexture),this._specularTexture&&e.push(this._specularTexture),this._bumpTexture&&e.push(this._bumpTexture),this._lightmapTexture&&e.push(this._lightmapTexture),this._refractionTexture&&e.push(this._refractionTexture),e}hasTexture(e){return!!super.hasTexture(e)||(this._diffuseTexture===e||(this._ambientTexture===e||(this._opacityTexture===e||(this._reflectionTexture===e||(this._emissiveTexture===e||(this._specularTexture===e||(this._bumpTexture===e||(this._lightmapTexture===e||this._refractionTexture===e))))))))}dispose(e,t){t&&(this._diffuseTexture?.dispose(),this._ambientTexture?.dispose(),this._opacityTexture?.dispose(),this._reflectionTexture?.dispose(),this._emissiveTexture?.dispose(),this._specularTexture?.dispose(),this._bumpTexture?.dispose(),this._lightmapTexture?.dispose(),this._refractionTexture?.dispose()),this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(e,t)}clone(e,t=!0,i=""){const s=y.Clone((()=>new Q(e,this.getScene())),this,{cloneTexturesOnlyOnce:t});return s.name=e,s.id=e,this.stencil.copyTo(s.stencil),this._clonePlugins(s,i),s}static Parse(e,t,i){const s=y.Parse((()=>new Q(e.name,t)),e,t,i);return e.stencil&&s.stencil.parse(e.stencil,t,i),a._ParsePlugins(e,s,t,i),s}static get DiffuseTextureEnabled(){return U.DiffuseTextureEnabled}static set DiffuseTextureEnabled(e){U.DiffuseTextureEnabled=e}static get DetailTextureEnabled(){return U.DetailTextureEnabled}static set DetailTextureEnabled(e){U.DetailTextureEnabled=e}static get AmbientTextureEnabled(){return U.AmbientTextureEnabled}static set AmbientTextureEnabled(e){U.AmbientTextureEnabled=e}static get OpacityTextureEnabled(){return U.OpacityTextureEnabled}static set OpacityTextureEnabled(e){U.OpacityTextureEnabled=e}static get ReflectionTextureEnabled(){return U.ReflectionTextureEnabled}static set ReflectionTextureEnabled(e){U.ReflectionTextureEnabled=e}static get EmissiveTextureEnabled(){return U.EmissiveTextureEnabled}static set EmissiveTextureEnabled(e){U.EmissiveTextureEnabled=e}static get SpecularTextureEnabled(){return U.SpecularTextureEnabled}static set SpecularTextureEnabled(e){U.SpecularTextureEnabled=e}static get BumpTextureEnabled(){return U.BumpTextureEnabled}static set BumpTextureEnabled(e){U.BumpTextureEnabled=e}static get LightmapTextureEnabled(){return U.LightmapTextureEnabled}static set LightmapTextureEnabled(e){U.LightmapTextureEnabled=e}static get RefractionTextureEnabled(){return U.RefractionTextureEnabled}static set RefractionTextureEnabled(e){U.RefractionTextureEnabled=e}static get ColorGradingTextureEnabled(){return U.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(e){U.ColorGradingTextureEnabled=e}static get FresnelEnabled(){return U.FresnelEnabled}static set FresnelEnabled(e){U.FresnelEnabled=e}}Q.ForceGLSL=!1,G([H("diffuseTexture")],Q.prototype,"_diffuseTexture",void 0),G([k("_markAllSubMeshesAsTexturesAndMiscDirty")],Q.prototype,"diffuseTexture",void 0),G([H("ambientTexture")],Q.prototype,"_ambientTexture",void 0),G([k("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"ambientTexture",void 0),G([H("opacityTexture")],Q.prototype,"_opacityTexture",void 0),G([k("_markAllSubMeshesAsTexturesAndMiscDirty")],Q.prototype,"opacityTexture",void 0),G([H("reflectionTexture")],Q.prototype,"_reflectionTexture",void 0),G([k("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"reflectionTexture",void 0),G([H("emissiveTexture")],Q.prototype,"_emissiveTexture",void 0),G([k("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"emissiveTexture",void 0),G([H("specularTexture")],Q.prototype,"_specularTexture",void 0),G([k("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"specularTexture",void 0),G([H("bumpTexture")],Q.prototype,"_bumpTexture",void 0),G([k("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"bumpTexture",void 0),G([H("lightmapTexture")],Q.prototype,"_lightmapTexture",void 0),G([k("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"lightmapTexture",void 0),G([H("refractionTexture")],Q.prototype,"_refractionTexture",void 0),G([k("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"refractionTexture",void 0),G([V("ambient")],Q.prototype,"ambientColor",void 0),G([V("diffuse")],Q.prototype,"diffuseColor",void 0),G([V("specular")],Q.prototype,"specularColor",void 0),G([V("emissive")],Q.prototype,"emissiveColor",void 0),G([X()],Q.prototype,"specularPower",void 0),G([X("useAlphaFromDiffuseTexture")],Q.prototype,"_useAlphaFromDiffuseTexture",void 0),G([k("_markAllSubMeshesAsTexturesAndMiscDirty")],Q.prototype,"useAlphaFromDiffuseTexture",void 0),G([X("useEmissiveAsIllumination")],Q.prototype,"_useEmissiveAsIllumination",void 0),G([k("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"useEmissiveAsIllumination",void 0),G([X("linkEmissiveWithDiffuse")],Q.prototype,"_linkEmissiveWithDiffuse",void 0),G([k("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"linkEmissiveWithDiffuse",void 0),G([X("useSpecularOverAlpha")],Q.prototype,"_useSpecularOverAlpha",void 0),G([k("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"useSpecularOverAlpha",void 0),G([X("useReflectionOverAlpha")],Q.prototype,"_useReflectionOverAlpha",void 0),G([k("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"useReflectionOverAlpha",void 0),G([X("disableLighting")],Q.prototype,"_disableLighting",void 0),G([k("_markAllSubMeshesAsLightsDirty")],Q.prototype,"disableLighting",void 0),G([X("useObjectSpaceNormalMap")],Q.prototype,"_useObjectSpaceNormalMap",void 0),G([k("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"useObjectSpaceNormalMap",void 0),G([X("useParallax")],Q.prototype,"_useParallax",void 0),G([k("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"useParallax",void 0),G([X("useParallaxOcclusion")],Q.prototype,"_useParallaxOcclusion",void 0),G([k("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"useParallaxOcclusion",void 0),G([X()],Q.prototype,"parallaxScaleBias",void 0),G([X("roughness")],Q.prototype,"_roughness",void 0),G([k("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"roughness",void 0),G([X()],Q.prototype,"indexOfRefraction",void 0),G([X()],Q.prototype,"invertRefractionY",void 0),G([X()],Q.prototype,"alphaCutOff",void 0),G([X("useLightmapAsShadowmap")],Q.prototype,"_useLightmapAsShadowmap",void 0),G([k("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"useLightmapAsShadowmap",void 0),G([w("diffuseFresnelParameters")],Q.prototype,"_diffuseFresnelParameters",void 0),G([k("_markAllSubMeshesAsFresnelDirty")],Q.prototype,"diffuseFresnelParameters",void 0),G([w("opacityFresnelParameters")],Q.prototype,"_opacityFresnelParameters",void 0),G([k("_markAllSubMeshesAsFresnelAndMiscDirty")],Q.prototype,"opacityFresnelParameters",void 0),G([w("reflectionFresnelParameters")],Q.prototype,"_reflectionFresnelParameters",void 0),G([k("_markAllSubMeshesAsFresnelDirty")],Q.prototype,"reflectionFresnelParameters",void 0),G([w("refractionFresnelParameters")],Q.prototype,"_refractionFresnelParameters",void 0),G([k("_markAllSubMeshesAsFresnelDirty")],Q.prototype,"refractionFresnelParameters",void 0),G([w("emissiveFresnelParameters")],Q.prototype,"_emissiveFresnelParameters",void 0),G([k("_markAllSubMeshesAsFresnelDirty")],Q.prototype,"emissiveFresnelParameters",void 0),G([X("useReflectionFresnelFromSpecular")],Q.prototype,"_useReflectionFresnelFromSpecular",void 0),G([k("_markAllSubMeshesAsFresnelDirty")],Q.prototype,"useReflectionFresnelFromSpecular",void 0),G([X("useGlossinessFromSpecularMapAlpha")],Q.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),G([k("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"useGlossinessFromSpecularMapAlpha",void 0),G([X("maxSimultaneousLights")],Q.prototype,"_maxSimultaneousLights",void 0),G([k("_markAllSubMeshesAsLightsDirty")],Q.prototype,"maxSimultaneousLights",void 0),G([X("invertNormalMapX")],Q.prototype,"_invertNormalMapX",void 0),G([k("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"invertNormalMapX",void 0),G([X("invertNormalMapY")],Q.prototype,"_invertNormalMapY",void 0),G([k("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"invertNormalMapY",void 0),G([X("twoSidedLighting")],Q.prototype,"_twoSidedLighting",void 0),G([k("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"twoSidedLighting",void 0),G([X("applyDecalMapAfterDetailMap")],Q.prototype,"_applyDecalMapAfterDetailMap",void 0),G([k("_markAllSubMeshesAsMiscDirty")],Q.prototype,"applyDecalMapAfterDetailMap",void 0),Y("BABYLON.StandardMaterial",Q),v.DefaultMaterialFactory=e=>new Q("default material",e);export{Q as S};
//# sourceMappingURL=standardMaterial-Dbz5M_oS.esm.min.js.map
