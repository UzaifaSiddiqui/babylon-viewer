{"version":3,"file":"flowGraphFunctionReferenceBlock-Lantf0Pd.esm.min.js","sources":["../../../../../dev/core/dist/FlowGraph/Blocks/Data/Utils/flowGraphFunctionReferenceBlock.js"],"sourcesContent":["import { FlowGraphBlock } from \"core/FlowGraph/flowGraphBlock\";\nimport { RichTypeAny, RichTypeString } from \"core/FlowGraph/flowGraphRichTypes\";\nimport { RegisterClass } from \"core/Misc/typeStore\";\n/**\n * A flow graph block that takes a function name, an object and an optional context as inputs and calls the function on the object.\n */\nexport class FlowGraphFunctionReferenceBlock extends FlowGraphBlock {\n    constructor(\n    /**\n     * the configuration of the block\n     */\n    config) {\n        super(config);\n        this.functionName = this.registerDataInput(\"functionName\", RichTypeString);\n        this.object = this.registerDataInput(\"object\", RichTypeAny);\n        this.context = this.registerDataInput(\"context\", RichTypeAny, null);\n        this.output = this.registerDataOutput(\"output\", RichTypeAny);\n    }\n    _updateOutputs(context) {\n        const functionName = this.functionName.getValue(context);\n        const object = this.object.getValue(context);\n        const contextValue = this.context.getValue(context);\n        if (object && functionName) {\n            const func = object[functionName];\n            if (func && typeof func === \"function\") {\n                this.output.setValue(func.bind(contextValue), context);\n            }\n        }\n    }\n    getClassName() {\n        return \"FlowGraphFunctionReference\" /* FlowGraphBlockNames.FunctionReference */;\n    }\n}\nRegisterClass(\"FlowGraphFunctionReference\" /* FlowGraphBlockNames.FunctionReference */, FlowGraphFunctionReferenceBlock);\n//# sourceMappingURL=flowGraphFunctionReferenceBlock.js.map"],"names":["FlowGraphFunctionReferenceBlock","FlowGraphBlock","constructor","config","super","this","functionName","registerDataInput","RichTypeString","object","RichTypeAny","context","output","registerDataOutput","_updateOutputs","getValue","contextValue","func","setValue","bind","getClassName","RegisterClass"],"mappings":"gOAMO,MAAMA,UAAwCC,EACjD,WAAAC,CAIAC,GACIC,MAAMD,GACNE,KAAKC,aAAeD,KAAKE,kBAAkB,eAAgBC,GAC3DH,KAAKI,OAASJ,KAAKE,kBAAkB,SAAUG,GAC/CL,KAAKM,QAAUN,KAAKE,kBAAkB,UAAWG,EAAa,MAC9DL,KAAKO,OAASP,KAAKQ,mBAAmB,SAAUH,EACxD,CACI,cAAAI,CAAeH,GACX,MAAML,EAAeD,KAAKC,aAAaS,SAASJ,GAC1CF,EAASJ,KAAKI,OAAOM,SAASJ,GAC9BK,EAAeX,KAAKM,QAAQI,SAASJ,GAC3C,GAAIF,GAAUH,EAAc,CACxB,MAAMW,EAAOR,EAAOH,GAChBW,GAAwB,mBAATA,GACfZ,KAAKO,OAAOM,SAASD,EAAKE,KAAKH,GAAeL,EAE9D,CACA,CACI,YAAAS,GACI,MAAO,4BACf,EAEAC,EAAc,6BAA0ErB"}