{"version":3,"file":"flowGraphPlayAnimationBlock-BonfwS2b.esm.js","sources":["../../../../../dev/core/dist/FlowGraph/Blocks/Execution/Animation/flowGraphPlayAnimationBlock.js"],"sourcesContent":["import { FlowGraphAsyncExecutionBlock } from \"../../../flowGraphAsyncExecutionBlock\";\nimport { RichTypeAny, RichTypeNumber, RichTypeBoolean } from \"../../../flowGraphRichTypes\";\nimport { RegisterClass } from \"../../../../Misc/typeStore\";\nimport { AnimationGroup } from \"core/Animations/animationGroup\";\n/**\n * @experimental\n * A block that plays an animation on an animatable object.\n */\nexport class FlowGraphPlayAnimationBlock extends FlowGraphAsyncExecutionBlock {\n    constructor(\n    /**\n     * the configuration of the block\n     */\n    config) {\n        super(config, [\"animationLoop\", \"animationEnd\", \"animationGroupLoop\"]);\n        this.config = config;\n        this.speed = this.registerDataInput(\"speed\", RichTypeNumber);\n        this.loop = this.registerDataInput(\"loop\", RichTypeBoolean);\n        this.from = this.registerDataInput(\"from\", RichTypeNumber, 0);\n        this.to = this.registerDataInput(\"to\", RichTypeNumber);\n        this.currentFrame = this.registerDataOutput(\"currentFrame\", RichTypeNumber);\n        this.currentTime = this.registerDataOutput(\"currentTime\", RichTypeNumber);\n        this.currentAnimationGroup = this.registerDataOutput(\"currentAnimationGroup\", RichTypeAny);\n        this.animationGroup = this.registerDataInput(\"animationGroup\", RichTypeAny, config?.animationGroup);\n        this.animation = this.registerDataInput(\"animation\", RichTypeAny);\n        this.object = this.registerDataInput(\"object\", RichTypeAny);\n    }\n    /**\n     * @internal\n     * @param context\n     */\n    _preparePendingTasks(context) {\n        const ag = this.animationGroup.getValue(context);\n        const animation = this.animation.getValue(context);\n        if (!ag && !animation) {\n            return this._reportError(context, \"No animation or animation group provided\");\n        }\n        else {\n            // if an animation group was already created, dispose it and create a new one\n            const currentAnimationGroup = this.currentAnimationGroup.getValue(context);\n            if (currentAnimationGroup && currentAnimationGroup !== ag) {\n                currentAnimationGroup.dispose();\n            }\n            let animationGroupToUse = ag;\n            // check which animation to use. If no animationGroup was defined and an animation was provided, use the animation\n            if (animation && !animationGroupToUse) {\n                const target = this.object.getValue(context);\n                if (!target) {\n                    return this._reportError(context, \"No target object provided\");\n                }\n                const animationsArray = Array.isArray(animation) ? animation : [animation];\n                const name = animationsArray[0].name;\n                animationGroupToUse = new AnimationGroup(\"flowGraphAnimationGroup-\" + name + \"-\" + target.name, context.configuration.scene);\n                let isInterpolation = false;\n                const interpolationAnimations = context._getGlobalContextVariable(\"interpolationAnimations\", []);\n                for (const anim of animationsArray) {\n                    animationGroupToUse.addTargetedAnimation(anim, target);\n                    if (interpolationAnimations.indexOf(anim.uniqueId) !== -1) {\n                        isInterpolation = true;\n                    }\n                }\n                if (isInterpolation) {\n                    this._checkInterpolationDuplications(context, animationsArray, target);\n                }\n            }\n            // not accepting 0\n            const speed = this.speed.getValue(context) || 1;\n            const from = this.from.getValue(context) ?? 0;\n            // not accepting 0\n            const to = this.to.getValue(context) || animationGroupToUse.to;\n            const loop = !isFinite(to) || this.loop.getValue(context);\n            this.currentAnimationGroup.setValue(animationGroupToUse, context);\n            const currentlyRunningAnimationGroups = context._getGlobalContextVariable(\"currentlyRunningAnimationGroups\", []);\n            // check if it already running\n            if (currentlyRunningAnimationGroups.indexOf(animationGroupToUse.uniqueId) !== -1) {\n                animationGroupToUse.stop();\n            }\n            try {\n                animationGroupToUse.start(loop, speed, from, to);\n                animationGroupToUse.onAnimationGroupEndObservable.add(() => this._onAnimationGroupEnd(context));\n                animationGroupToUse.onAnimationEndObservable.add(() => this._eventsSignalOutputs[\"animationEnd\"]._activateSignal(context));\n                animationGroupToUse.onAnimationLoopObservable.add(() => this._eventsSignalOutputs[\"animationLoop\"]._activateSignal(context));\n                animationGroupToUse.onAnimationGroupLoopObservable.add(() => this._eventsSignalOutputs[\"animationGroupLoop\"]._activateSignal(context));\n                currentlyRunningAnimationGroups.push(animationGroupToUse.uniqueId);\n                context._setGlobalContextVariable(\"currentlyRunningAnimationGroups\", currentlyRunningAnimationGroups);\n            }\n            catch (e) {\n                this._reportError(context, e);\n            }\n        }\n    }\n    _reportError(context, error) {\n        super._reportError(context, error);\n        this.currentFrame.setValue(-1, context);\n        this.currentTime.setValue(-1, context);\n    }\n    /**\n     * @internal\n     */\n    _executeOnTick(_context) {\n        const ag = this.currentAnimationGroup.getValue(_context);\n        if (ag) {\n            this.currentFrame.setValue(ag.getCurrentFrame(), _context);\n            this.currentTime.setValue(ag.animatables[0]?.elapsedTime ?? 0, _context);\n        }\n    }\n    _execute(context) {\n        this._startPendingTasks(context);\n    }\n    _onAnimationGroupEnd(context) {\n        this._removeFromCurrentlyRunning(context, this.currentAnimationGroup.getValue(context));\n        this._resetAfterCanceled(context);\n        this.done._activateSignal(context);\n    }\n    /**\n     * The idea behind this function is to check every running animation group and check if the targeted animations it uses are interpolation animations.\n     * If they are, we want to see that they don't collide with the current interpolation animations that are starting to play.\n     * If they do, we want to stop the already-running animation group.\n     * @internal\n     */\n    _checkInterpolationDuplications(context, animation, target) {\n        const currentlyRunningAnimationGroups = context._getGlobalContextVariable(\"currentlyRunningAnimationGroups\", []);\n        for (const uniqueId of currentlyRunningAnimationGroups) {\n            const ag = context.assetsContext.animationGroups.find((ag) => ag.uniqueId === uniqueId);\n            if (ag) {\n                for (const anim of ag.targetedAnimations) {\n                    for (const animToCheck of animation) {\n                        if (anim.animation.targetProperty === animToCheck.targetProperty && anim.target === target) {\n                            this._stopAnimationGroup(context, ag);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    _stopAnimationGroup(context, animationGroup) {\n        // stop, while skipping the on AnimationEndObservable to avoid the \"done\" signal\n        animationGroup.stop(true);\n        animationGroup.dispose();\n        this._removeFromCurrentlyRunning(context, animationGroup);\n    }\n    _removeFromCurrentlyRunning(context, animationGroup) {\n        const currentlyRunningAnimationGroups = context._getGlobalContextVariable(\"currentlyRunningAnimationGroups\", []);\n        const idx = currentlyRunningAnimationGroups.indexOf(animationGroup.uniqueId);\n        if (idx !== -1) {\n            currentlyRunningAnimationGroups.splice(idx, 1);\n            context._setGlobalContextVariable(\"currentlyRunningAnimationGroups\", currentlyRunningAnimationGroups);\n        }\n    }\n    /**\n     * @internal\n     * Stop any currently running animations.\n     */\n    _cancelPendingTasks(context) {\n        const ag = this.currentAnimationGroup.getValue(context);\n        if (ag) {\n            this._stopAnimationGroup(context, ag);\n        }\n    }\n    /**\n     * @returns class name of the block.\n     */\n    getClassName() {\n        return \"FlowGraphPlayAnimationBlock\" /* FlowGraphBlockNames.PlayAnimation */;\n    }\n}\nRegisterClass(\"FlowGraphPlayAnimationBlock\" /* FlowGraphBlockNames.PlayAnimation */, FlowGraphPlayAnimationBlock);\n//# sourceMappingURL=flowGraphPlayAnimationBlock.js.map"],"names":[],"mappings":"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"}