{"version":3,"file":"flowGraphSwitchBlock-BCtZ3cS4.esm.js","sources":["../../../../../dev/core/dist/FlowGraph/Blocks/Execution/ControlFlow/flowGraphSwitchBlock.js"],"sourcesContent":["import { FlowGraphExecutionBlock } from \"../../../flowGraphExecutionBlock\";\nimport { RichTypeAny } from \"../../../flowGraphRichTypes\";\nimport { RegisterClass } from \"../../../../Misc/typeStore\";\nimport { getNumericValue, isNumeric } from \"core/FlowGraph/utils\";\n/**\n * A block that executes a branch based on a selection.\n */\nexport class FlowGraphSwitchBlock extends FlowGraphExecutionBlock {\n    constructor(\n    /**\n     * the configuration of the block\n     */\n    config) {\n        super(config);\n        this.config = config;\n        /**\n         * The default case to execute if no other case is found.\n         */\n        this.default = this._registerSignalOutput(\"default\");\n        this._caseToOutputFlow = new Map();\n        this.case = this.registerDataInput(\"case\", RichTypeAny);\n        // iterate the set not using for of\n        const array = this.config.cases || [];\n        for (const caseValue of array) {\n            this._caseToOutputFlow.set(caseValue, this._registerSignalOutput(`out_${caseValue}`));\n        }\n    }\n    _execute(context, _callingSignal) {\n        const selectionValue = this.case.getValue(context);\n        let outputFlow;\n        if (isNumeric(selectionValue)) {\n            outputFlow = this._getOutputFlowForCase(getNumericValue(selectionValue));\n        }\n        else {\n            outputFlow = this._getOutputFlowForCase(selectionValue);\n        }\n        if (outputFlow) {\n            outputFlow._activateSignal(context);\n        }\n        else {\n            this.default._activateSignal(context);\n        }\n    }\n    /**\n     * Adds a new case to the switch block.\n     * @param newCase the new case to add.\n     */\n    addCase(newCase) {\n        if (this.config.cases.includes(newCase)) {\n            return;\n        }\n        this.config.cases.push(newCase);\n        this._caseToOutputFlow.set(newCase, this._registerSignalOutput(`out_${newCase}`));\n    }\n    /**\n     * Removes a case from the switch block.\n     * @param caseToRemove the case to remove.\n     */\n    removeCase(caseToRemove) {\n        if (!this.config.cases.includes(caseToRemove)) {\n            return;\n        }\n        const index = this.config.cases.indexOf(caseToRemove);\n        this.config.cases.splice(index, 1);\n        this._caseToOutputFlow.delete(caseToRemove);\n    }\n    /**\n     * @internal\n     */\n    _getOutputFlowForCase(caseValue) {\n        return this._caseToOutputFlow.get(caseValue);\n    }\n    /**\n     * @returns class name of the block.\n     */\n    getClassName() {\n        return \"FlowGraphSwitchBlock\" /* FlowGraphBlockNames.Switch */;\n    }\n    /**\n     * Serialize the block to a JSON representation.\n     * @param serializationObject the object to serialize to.\n     */\n    serialize(serializationObject) {\n        super.serialize(serializationObject);\n        serializationObject.cases = this.config.cases;\n    }\n}\nRegisterClass(\"FlowGraphSwitchBlock\" /* FlowGraphBlockNames.Switch */, FlowGraphSwitchBlock);\n//# sourceMappingURL=flowGraphSwitchBlock.js.map"],"names":[],"mappings":"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"}