{"version":3,"file":"KHR_animation_pointer-BcPLErX9.esm.js","sources":["../../../../../dev/loaders/dist/glTF/2.0/Extensions/KHR_animation_pointer.data.js","../../../../../dev/loaders/dist/glTF/2.0/Extensions/KHR_animation_pointer.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\nimport { Animation } from \"core/Animations/animation\";\nimport { AnimationPropertyInfo } from \"../glTFLoaderAnimation\";\nimport { Color3 } from \"core/Maths/math.color\";\nimport { SetInterpolationForKey } from \"./objectModelMapping\";\nfunction getColor3(_target, source, offset, scale) {\n    return Color3.FromArray(source, offset).scale(scale);\n}\nfunction getAlpha(_target, source, offset, scale) {\n    return source[offset + 3] * scale;\n}\nfunction getFloat(_target, source, offset, scale) {\n    return source[offset] * scale;\n}\nfunction getMinusFloat(_target, source, offset, scale) {\n    return -source[offset] * scale;\n}\nfunction getNextFloat(_target, source, offset, scale) {\n    return source[offset + 1] * scale;\n}\nfunction getFloatBy2(_target, source, offset, scale) {\n    return source[offset] * scale * 2;\n}\nfunction getTextureTransformTree(textureName) {\n    return {\n        scale: [\n            new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, `${textureName}.uScale`, getFloat, () => 2),\n            new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, `${textureName}.vScale`, getNextFloat, () => 2),\n        ],\n        offset: [\n            new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, `${textureName}.uOffset`, getFloat, () => 2),\n            new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, `${textureName}.vOffset`, getNextFloat, () => 2),\n        ],\n        rotation: [new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, `${textureName}.wAng`, getMinusFloat, () => 1)],\n    };\n}\nclass CameraAnimationPropertyInfo extends AnimationPropertyInfo {\n    /** @internal */\n    buildAnimations(target, name, fps, keys) {\n        return [{ babylonAnimatable: target._babylonCamera, babylonAnimation: this._buildAnimation(name, fps, keys) }];\n    }\n}\nclass MaterialAnimationPropertyInfo extends AnimationPropertyInfo {\n    /** @internal */\n    buildAnimations(target, name, fps, keys) {\n        const babylonAnimations = [];\n        for (const fillMode in target._data) {\n            babylonAnimations.push({\n                babylonAnimatable: target._data[fillMode].babylonMaterial,\n                babylonAnimation: this._buildAnimation(name, fps, keys),\n            });\n        }\n        return babylonAnimations;\n    }\n}\nclass LightAnimationPropertyInfo extends AnimationPropertyInfo {\n    /** @internal */\n    buildAnimations(target, name, fps, keys) {\n        return [{ babylonAnimatable: target._babylonLight, babylonAnimation: this._buildAnimation(name, fps, keys) }];\n    }\n}\nSetInterpolationForKey(\"/cameras/{}/orthographic/xmag\", [\n    new CameraAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"orthoLeft\", getMinusFloat, () => 1),\n    new CameraAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"orthoRight\", getNextFloat, () => 1),\n]);\nSetInterpolationForKey(\"/cameras/{}/orthographic/ymag\", [\n    new CameraAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"orthoBottom\", getMinusFloat, () => 1),\n    new CameraAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"orthoTop\", getNextFloat, () => 1),\n]);\nSetInterpolationForKey(\"/cameras/{}/orthographic/zfar\", [new CameraAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"maxZ\", getFloat, () => 1)]);\nSetInterpolationForKey(\"/cameras/{}/orthographic/znear\", [new CameraAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"minZ\", getFloat, () => 1)]);\nSetInterpolationForKey(\"/cameras/{}/perspective/yfov\", [new CameraAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"fov\", getFloat, () => 1)]);\nSetInterpolationForKey(\"/cameras/{}/perspective/zfar\", [new CameraAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"maxZ\", getFloat, () => 1)]);\nSetInterpolationForKey(\"/cameras/{}/perspective/znear\", [new CameraAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"minZ\", getFloat, () => 1)]);\n// add interpolation to the materials mapping\nSetInterpolationForKey(\"/materials/{}/pbrMetallicRoughness/baseColorFactor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_COLOR3, \"albedoColor\", getColor3, () => 4),\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"alpha\", getAlpha, () => 4),\n]);\nSetInterpolationForKey(\"/materials/{}/pbrMetallicRoughness/metallicFactor\", [new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"metallic\", getFloat, () => 1)]);\nSetInterpolationForKey(\"/materials/{}/pbrMetallicRoughness/metallicFactor\", [new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"roughness\", getFloat, () => 1)]);\nconst baseColorTextureInterpolation = getTextureTransformTree(\"albedoTexture\");\nSetInterpolationForKey(\"/materials/{}/pbrMetallicRoughness/baseColorTexture/extensions/KHR_texture_transform/scale\", baseColorTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/pbrMetallicRoughness/baseColorTexture/extensions/KHR_texture_transform/offset\", baseColorTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/pbrMetallicRoughness/baseColorTexture/extensions/KHR_texture_transform/rotation\", baseColorTextureInterpolation.rotation);\nconst metallicRoughnessTextureInterpolation = getTextureTransformTree(\"metallicTexture\");\nSetInterpolationForKey(\"//materials/{}/pbrMetallicRoughness/metallicRoughnessTexture/scale\", metallicRoughnessTextureInterpolation.scale);\nSetInterpolationForKey(\"//materials/{}/pbrMetallicRoughness/metallicRoughnessTexture/offset\", metallicRoughnessTextureInterpolation.offset);\nSetInterpolationForKey(\"//materials/{}/pbrMetallicRoughness/metallicRoughnessTexture/rotation\", metallicRoughnessTextureInterpolation.rotation);\nSetInterpolationForKey(\"/materials/{}/emissiveFactor\", [new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_COLOR3, \"emissiveColor\", getColor3, () => 3)]);\nconst normalTextureInterpolation = getTextureTransformTree(\"bumpTexture\");\nSetInterpolationForKey(\"/materials/{}/normalTexture/scale\", [new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"bumpTexture.level\", getFloat, () => 1)]);\nSetInterpolationForKey(\"/materials/{}/normalTexture/extensions/KHR_texture_transform/scale\", normalTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/normalTexture/extensions/KHR_texture_transform/offset\", normalTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/normalTexture/extensions/KHR_texture_transform/rotation\", normalTextureInterpolation.rotation);\nSetInterpolationForKey(\"/materials/{}/occlusionTexture/strength\", [new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"ambientTextureStrength\", getFloat, () => 1)]);\nconst occlusionTextureInterpolation = getTextureTransformTree(\"ambientTexture\");\nSetInterpolationForKey(\"/materials/{}/occlusionTexture/extensions/KHR_texture_transform/scale\", occlusionTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/occlusionTexture/extensions/KHR_texture_transform/offset\", occlusionTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/occlusionTexture/extensions/KHR_texture_transform/rotation\", occlusionTextureInterpolation.rotation);\nconst emissiveTextureInterpolation = getTextureTransformTree(\"emissiveTexture\");\nSetInterpolationForKey(\"/materials/{}/emissiveTexture/extensions/KHR_texture_transform/scale\", emissiveTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/emissiveTexture/extensions/KHR_texture_transform/offset\", emissiveTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/emissiveTexture/extensions/KHR_texture_transform/rotation\", emissiveTextureInterpolation.rotation);\n// materials extensions\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_anisotropy/anisotropyStrength\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"anisotropy.intensity\", getFloat, () => 1),\n]);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_anisotropy/anisotropyRotation\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"anisotropy.angle\", getFloat, () => 1),\n]);\nconst anisotropyTextureInterpolation = getTextureTransformTree(\"anisotropy.texture\");\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_anisotropy/anisotropyTexture/extensions/KHR_texture_transform/scale\", anisotropyTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_anisotropy/anisotropyTexture/extensions/KHR_texture_transform/offset\", anisotropyTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_anisotropy/anisotropyTexture/extensions/KHR_texture_transform/rotation\", anisotropyTextureInterpolation.rotation);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_clearcoat/clearcoatFactor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"clearCoat.intensity\", getFloat, () => 1),\n]);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_clearcoat/clearcoatRoughnessFactor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"clearCoat.roughness\", getFloat, () => 1),\n]);\nconst clearcoatTextureInterpolation = getTextureTransformTree(\"clearCoat.texture\");\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_clearcoat/clearcoatTexture/extensions/KHR_texture_transform/scale\", clearcoatTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_clearcoat/clearcoatTexture/extensions/KHR_texture_transform/offset\", clearcoatTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_clearcoat/clearcoatTexture/extensions/KHR_texture_transform/rotation\", clearcoatTextureInterpolation.rotation);\nconst clearcoatNormalTextureInterpolation = getTextureTransformTree(\"clearCoat.bumpTexture\");\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_clearcoat/clearcoatNormalTexture/scale\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"clearCoat.bumpTexture.level\", getFloat, () => 1),\n]);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_clearcoat/clearcoatNormalTexture/extensions/KHR_texture_transform/scale\", clearcoatNormalTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_clearcoat/clearcoatNormalTexture/extensions/KHR_texture_transform/offset\", clearcoatNormalTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_clearcoat/clearcoatNormalTexture/extensions/KHR_texture_transform/rotation\", clearcoatNormalTextureInterpolation.rotation);\nconst clearcoatRoughnessTextureInterpolation = getTextureTransformTree(\"clearCoat.textureRoughness\");\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_clearcoat/clearcoatRoughnessTexture/extensions/KHR_texture_transform/scale\", clearcoatRoughnessTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_clearcoat/clearcoatRoughnessTexture/extensions/KHR_texture_transform/offset\", clearcoatRoughnessTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_clearcoat/clearcoatRoughnessTexture/extensions/KHR_texture_transform/rotation\", clearcoatRoughnessTextureInterpolation.rotation);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_dispersion/dispersionFactor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"subSurface.dispersion\", getFloat, () => 1),\n]);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_emissive_strength/emissiveStrength\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"emissiveIntensity\", getFloat, () => 1),\n]);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_ior/ior\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"indexOfRefraction\", getFloat, () => 1),\n]);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_iridescence/iridescenceFactor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"iridescence.intensity\", getFloat, () => 1),\n]);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_iridescence/iridescenceIor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"iridescence.indexOfRefraction\", getFloat, () => 1),\n]);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_iridescence/iridescenceThicknessMinimum\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"iridescence.minimumThickness\", getFloat, () => 1),\n]);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_iridescence/iridescenceThicknessMaximum\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"iridescence.maximumThickness\", getFloat, () => 1),\n]);\nconst iridescenceTextureInterpolation = getTextureTransformTree(\"iridescence.texture\");\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_iridescence/iridescenceTexture/extensions/KHR_texture_transform/scale\", iridescenceTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_iridescence/iridescenceTexture/extensions/KHR_texture_transform/offset\", iridescenceTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_iridescence/iridescenceTexture/extensions/KHR_texture_transform/rotation\", iridescenceTextureInterpolation.rotation);\nconst iridescenceThicknessTextureInterpolation = getTextureTransformTree(\"iridescence.thicknessTexture\");\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_iridescence/iridescenceThicknessTexture/extensions/KHR_texture_transform/scale\", iridescenceThicknessTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_iridescence/iridescenceThicknessTexture/extensions/KHR_texture_transform/offset\", iridescenceThicknessTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_iridescence/iridescenceThicknessTexture/extensions/KHR_texture_transform/rotation\", iridescenceThicknessTextureInterpolation.rotation);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_sheen/sheenColorFactor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_COLOR3, \"sheen.color\", getColor3, () => 3),\n]);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_sheen/sheenRoughnessFactor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"sheen.roughness\", getFloat, () => 1),\n]);\nconst sheenTextureInterpolation = getTextureTransformTree(\"sheen.texture\");\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_sheen/sheenColorTexture/extensions/KHR_texture_transform/scale\", sheenTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_sheen/sheenColorTexture/extensions/KHR_texture_transform/offset\", sheenTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_sheen/sheenColorTexture/extensions/KHR_texture_transform/rotation\", sheenTextureInterpolation.rotation);\nconst sheenRoughnessTextureInterpolation = getTextureTransformTree(\"sheen.textureRoughness\");\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_sheen/sheenRoughnessTexture/extensions/KHR_texture_transform/scale\", sheenRoughnessTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_sheen/sheenRoughnessTexture/extensions/KHR_texture_transform/offset\", sheenRoughnessTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_sheen/sheenRoughnessTexture/extensions/KHR_texture_transform/rotation\", sheenRoughnessTextureInterpolation.rotation);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_specular/specularFactor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"metallicF0Factor\", getFloat, () => 1),\n]);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_specular/specularColorFactor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_COLOR3, \"metallicReflectanceColor\", getColor3, () => 3),\n]);\nconst specularTextureInterpolation = getTextureTransformTree(\"metallicReflectanceTexture\");\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_specular/specularTexture/extensions/KHR_texture_transform/scale\", specularTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_specular/specularTexture/extensions/KHR_texture_transform/offset\", specularTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_specular/specularTexture/extensions/KHR_texture_transform/rotation\", specularTextureInterpolation.rotation);\nconst specularColorTextureInterpolation = getTextureTransformTree(\"reflectanceTexture\");\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_specular/specularColorTexture/extensions/KHR_texture_transform/scale\", specularColorTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_specular/specularColorTexture/extensions/KHR_texture_transform/offset\", specularColorTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_specular/specularColorTexture/extensions/KHR_texture_transform/rotation\", specularColorTextureInterpolation.rotation);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_transmission/transmissionFactor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"subSurface.refractionIntensity\", getFloat, () => 1),\n]);\nconst transmissionTextureInterpolation = getTextureTransformTree(\"subSurface.refractionIntensityTexture\");\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_transmission/transmissionTexture/extensions/KHR_texture_transform/scale\", transmissionTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_transmission/transmissionTexture/extensions/KHR_texture_transform/offset\", transmissionTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_transmission/transmissionTexture/extensions/KHR_texture_transform/rotation\", transmissionTextureInterpolation.rotation);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_volume/attenuationColor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_COLOR3, \"subSurface.tintColor\", getColor3, () => 3),\n]);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_volume/attenuationDistance\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"subSurface.tintColorAtDistance\", getFloat, () => 1),\n]);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_volume/thicknessFactor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"subSurface.maximumThickness\", getFloat, () => 1),\n]);\nconst thicknessTextureInterpolation = getTextureTransformTree(\"subSurface.thicknessTexture\");\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_volume/thicknessTexture/extensions/KHR_texture_transform/scale\", thicknessTextureInterpolation.scale);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_volume/thicknessTexture/extensions/KHR_texture_transform/offset\", thicknessTextureInterpolation.offset);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_volume/thicknessTexture/extensions/KHR_texture_transform/rotation\", thicknessTextureInterpolation.rotation);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_diffuse_transmission/diffuseTransmissionFactor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"subSurface.translucencyIntensity\", getFloat, () => 1),\n]);\nconst diffuseTransmissionTextureInterpolation = getTextureTransformTree(\"subSurface.translucencyIntensityTexture\");\nSetInterpolationForKey(\"materials/{}/extensions/KHR_materials_diffuse_transmission/diffuseTransmissionTexture/extensions/KHR_texture_transform/scale\", diffuseTransmissionTextureInterpolation.scale);\nSetInterpolationForKey(\"materials/{}/extensions/KHR_materials_diffuse_transmission/diffuseTransmissionTexture/extensions/KHR_texture_transform/offset\", diffuseTransmissionTextureInterpolation.offset);\nSetInterpolationForKey(\"materials/{}/extensions/KHR_materials_diffuse_transmission/diffuseTransmissionTexture/extensions/KHR_texture_transform/rotation\", diffuseTransmissionTextureInterpolation.rotation);\nSetInterpolationForKey(\"/materials/{}/extensions/KHR_materials_diffuse_transmission/diffuseTransmissionColorFactor\", [\n    new MaterialAnimationPropertyInfo(Animation.ANIMATIONTYPE_COLOR3, \"subSurface.translucencyColor\", getColor3, () => 3),\n]);\nconst diffuseTransmissionColorTextureInterpolation = getTextureTransformTree(\"subSurface.translucencyColorTexture\");\nSetInterpolationForKey(\"materials/{}/extensions/KHR_materials_diffuse_transmission/diffuseTransmissionColorTexture/extensions/KHR_texture_transform/scale\", diffuseTransmissionColorTextureInterpolation.scale);\nSetInterpolationForKey(\"materials/{}/extensions/KHR_materials_diffuse_transmission/diffuseTransmissionColorTexture/extensions/KHR_texture_transform/offset\", diffuseTransmissionColorTextureInterpolation.offset);\nSetInterpolationForKey(\"materials/{}/extensions/KHR_materials_diffuse_transmission/diffuseTransmissionColorTexture/extensions/KHR_texture_transform/rotation\", diffuseTransmissionColorTextureInterpolation.rotation);\nSetInterpolationForKey(\"/extensions/KHR_lights_punctual/lights/{}/color\", [new LightAnimationPropertyInfo(Animation.ANIMATIONTYPE_COLOR3, \"diffuse\", getColor3, () => 3)]);\nSetInterpolationForKey(\"/extensions/KHR_lights_punctual/lights/{}/intensity\", [new LightAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"intensity\", getFloat, () => 1)]);\nSetInterpolationForKey(\"/extensions/KHR_lights_punctual/lights/{}/range\", [new LightAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"range\", getFloat, () => 1)]);\nSetInterpolationForKey(\"/extensions/KHR_lights_punctual/lights/{}/spot/innerConeAngle\", [\n    new LightAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"innerAngle\", getFloatBy2, () => 1),\n]);\nSetInterpolationForKey(\"/extensions/KHR_lights_punctual/lights/{}/spot/outerConeAngle\", [\n    new LightAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"angle\", getFloatBy2, () => 1),\n]);\nSetInterpolationForKey(\"/nodes/{}/extensions/EXT_lights_ies/color\", [new LightAnimationPropertyInfo(Animation.ANIMATIONTYPE_COLOR3, \"diffuse\", getColor3, () => 3)]);\nSetInterpolationForKey(\"/nodes/{}/extensions/EXT_lights_ies/multiplier\", [new LightAnimationPropertyInfo(Animation.ANIMATIONTYPE_FLOAT, \"intensity\", getFloat, () => 1)]);\n//# sourceMappingURL=KHR_animation_pointer.data.js.map","import { Logger } from \"core/Misc/logger\";\nimport { registerGLTFExtension, unregisterGLTFExtension } from \"../glTFLoaderExtensionRegistry\";\nimport { GetPathToObjectConverter } from \"./objectModelMapping\";\nimport \"./KHR_animation_pointer.data\";\nconst NAME = \"KHR_animation_pointer\";\n/**\n * [Specification PR](https://github.com/KhronosGroup/glTF/pull/2147)\n * !!! Experimental Extension Subject to Changes !!!\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class KHR_animation_pointer {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        this._loader = loader;\n        this._pathToObjectConverter = GetPathToObjectConverter(this._loader.gltf);\n    }\n    /**\n     * Defines whether this extension is enabled.\n     */\n    get enabled() {\n        return this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n        delete this._pathToObjectConverter; // GC\n    }\n    /**\n     * Loads a glTF animation channel.\n     * @param context The context when loading the asset\n     * @param animationContext The context of the animation when loading the asset\n     * @param animation The glTF animation property\n     * @param channel The glTF animation channel property\n     * @param onLoad Called for each animation loaded\n     * @returns A void promise that resolves when the load is complete or null if not handled\n     */\n    // eslint-disable-next-line no-restricted-syntax\n    _loadAnimationChannelAsync(context, animationContext, animation, channel, onLoad) {\n        const extension = channel.target.extensions?.KHR_animation_pointer;\n        if (!extension || !this._pathToObjectConverter) {\n            return null;\n        }\n        if (channel.target.path !== \"pointer\" /* AnimationChannelTargetPath.POINTER */) {\n            Logger.Warn(`${context}/target/path: Value (${channel.target.path}) must be (${\"pointer\" /* AnimationChannelTargetPath.POINTER */}) when using the ${this.name} extension`);\n        }\n        if (channel.target.node != undefined) {\n            Logger.Warn(`${context}/target/node: Value (${channel.target.node}) must not be present when using the ${this.name} extension`);\n        }\n        const extensionContext = `${context}/extensions/${this.name}`;\n        const pointer = extension.pointer;\n        if (!pointer) {\n            throw new Error(`${extensionContext}: Pointer is missing`);\n        }\n        try {\n            const obj = this._pathToObjectConverter.convert(pointer);\n            if (!obj.info.interpolation) {\n                throw new Error(`${extensionContext}/pointer: Interpolation is missing`);\n            }\n            return this._loader._loadAnimationChannelFromTargetInfoAsync(context, animationContext, animation, channel, {\n                object: obj.object,\n                info: obj.info.interpolation,\n            }, onLoad);\n        }\n        catch (e) {\n            Logger.Warn(`${extensionContext}/pointer: Invalid pointer (${pointer}) skipped`);\n            return null;\n        }\n    }\n}\nunregisterGLTFExtension(NAME);\nregisterGLTFExtension(NAME, true, (loader) => new KHR_animation_pointer(loader));\n//# sourceMappingURL=KHR_animation_pointer.js.map"],"names":[],"mappings":"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"}