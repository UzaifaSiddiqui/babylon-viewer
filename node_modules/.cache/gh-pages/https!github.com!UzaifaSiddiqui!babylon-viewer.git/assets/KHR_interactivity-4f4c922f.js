import{ag as o,aI as U,aJ as et,aK as j,aL as at,f as k,aM as Q,aN as rt,a4 as nt,a3 as it,Q as Y,V as st}from"./index-52cd4afa.js";import{a as ct,A as D}from"./objectModelMapping-c2b6599e.js";import{g as lt,a as z}from"./declarationMapper-63deed9c.js";const $={};function pt(r,t,e){$[`${r}/${t}`]=e}function _t(r){switch(r){case"FlowGraphPlayAnimationBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.ba),[])).FlowGraphPlayAnimationBlock;case"FlowGraphStopAnimationBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bb),[])).FlowGraphStopAnimationBlock;case"FlowGraphPauseAnimationBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bc),[])).FlowGraphPauseAnimationBlock;case"FlowGraphInterpolationBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bd),[])).FlowGraphInterpolationBlock;case"FlowGraphSceneReadyEventBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bA),[])).FlowGraphSceneReadyEventBlock;case"FlowGraphSceneTickEventBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bD),[])).FlowGraphSceneTickEventBlock;case"FlowGraphSendCustomEventBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bC),[])).FlowGraphSendCustomEventBlock;case"FlowGraphReceiveCustomEventBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bB),[])).FlowGraphReceiveCustomEventBlock;case"FlowGraphMeshPickEventBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bz),[])).FlowGraphMeshPickEventBlock;case"FlowGraphEBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphEBlock;case"FlowGraphPIBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphPiBlock;case"FlowGraphInfBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphInfBlock;case"FlowGraphNaNBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphNaNBlock;case"FlowGraphRandomBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphRandomBlock;case"FlowGraphAddBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphAddBlock;case"FlowGraphSubtractBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphSubtractBlock;case"FlowGraphMultiplyBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphMultiplyBlock;case"FlowGraphDivideBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphDivideBlock;case"FlowGraphAbsBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphAbsBlock;case"FlowGraphSignBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphSignBlock;case"FlowGraphTruncBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphTruncBlock;case"FlowGraphFloorBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphFloorBlock;case"FlowGraphCeilBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphCeilBlock;case"FlowGraphRoundBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphRoundBlock;case"FlowGraphFractBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphFractionBlock;case"FlowGraphNegationBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphNegationBlock;case"FlowGraphModuloBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphModuloBlock;case"FlowGraphMinBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphMinBlock;case"FlowGraphMaxBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphMaxBlock;case"FlowGraphClampBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphClampBlock;case"FlowGraphSaturateBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphSaturateBlock;case"FlowGraphMathInterpolationBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphMathInterpolationBlock;case"FlowGraphEqualityBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphEqualityBlock;case"FlowGraphLessThanBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphLessThanBlock;case"FlowGraphLessThanOrEqualBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphLessThanOrEqualBlock;case"FlowGraphGreaterThanBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphGreaterThanBlock;case"FlowGraphGreaterThanOrEqualBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphGreaterThanOrEqualBlock;case"FlowGraphIsNaNBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphIsNanBlock;case"FlowGraphIsInfBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphIsInfinityBlock;case"FlowGraphDegToRadBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphDegToRadBlock;case"FlowGraphRadToDegBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphRadToDegBlock;case"FlowGraphSinBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphSinBlock;case"FlowGraphCosBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphCosBlock;case"FlowGraphTanBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphTanBlock;case"FlowGraphASinBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphAsinBlock;case"FlowGraphACosBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphAcosBlock;case"FlowGraphATanBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphAtanBlock;case"FlowGraphATan2Block":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphAtan2Block;case"FlowGraphSinhBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphSinhBlock;case"FlowGraphCoshBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphCoshBlock;case"FlowGraphTanhBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphTanhBlock;case"FlowGraphASinhBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphAsinhBlock;case"FlowGraphACoshBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphAcoshBlock;case"FlowGraphATanhBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphAtanhBlock;case"FlowGraphExponentialBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphExpBlock;case"FlowGraphLogBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphLogBlock;case"FlowGraphLog2Block":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphLog2Block;case"FlowGraphLog10Block":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphLog10Block;case"FlowGraphSquareRootBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphSquareRootBlock;case"FlowGraphPowerBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphPowerBlock;case"FlowGraphCubeRootBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphCubeRootBlock;case"FlowGraphBitwiseAndBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphBitwiseAndBlock;case"FlowGraphBitwiseOrBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphBitwiseOrBlock;case"FlowGraphBitwiseNotBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphBitwiseNotBlock;case"FlowGraphBitwiseXorBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphBitwiseXorBlock;case"FlowGraphBitwiseLeftShiftBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphBitwiseLeftShiftBlock;case"FlowGraphBitwiseRightShiftBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphBitwiseRightShiftBlock;case"FlowGraphLengthBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bs),[])).FlowGraphLengthBlock;case"FlowGraphNormalizeBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bs),[])).FlowGraphNormalizeBlock;case"FlowGraphDotBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bs),[])).FlowGraphDotBlock;case"FlowGraphCrossBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bs),[])).FlowGraphCrossBlock;case"FlowGraphRotate2DBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bs),[])).FlowGraphRotate2DBlock;case"FlowGraphRotate3DBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bs),[])).FlowGraphRotate3DBlock;case"FlowGraphTransposeBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.br),[])).FlowGraphTransposeBlock;case"FlowGraphDeterminantBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.br),[])).FlowGraphDeterminantBlock;case"FlowGraphInvertMatrixBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.br),[])).FlowGraphInvertMatrixBlock;case"FlowGraphMatrixMultiplicationBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.br),[])).FlowGraphMatrixMultiplicationBlock;case"FlowGraphBranchBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.aY),[])).FlowGraphBranchBlock;case"FlowGraphSetDelayBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.b8),[])).FlowGraphSetDelayBlock;case"FlowGraphCancelDelayBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.b9),[])).FlowGraphCancelDelayBlock;case"FlowGraphCallCounterBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.b3),[])).FlowGraphCallCounterBlock;case"FlowGraphDebounceBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.b5),[])).FlowGraphDebounceBlock;case"FlowGraphThrottleBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.a$),[])).FlowGraphThrottleBlock;case"FlowGraphDoNBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.aZ),[])).FlowGraphDoNBlock;case"FlowGraphFlipFlopBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.b6),[])).FlowGraphFlipFlopBlock;case"FlowGraphForLoopBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.a_),[])).FlowGraphForLoopBlock;case"FlowGraphMultiGateBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.b0),[])).FlowGraphMultiGateBlock;case"FlowGraphSequenceBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.b7),[])).FlowGraphSequenceBlock;case"FlowGraphSwitchBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.b1),[])).FlowGraphSwitchBlock;case"FlowGraphWaitAllBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.b2),[])).FlowGraphWaitAllBlock;case"FlowGraphWhileLoopBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.b4),[])).FlowGraphWhileLoopBlock;case"FlowGraphConsoleLogBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.aX),[])).FlowGraphConsoleLogBlock;case"FlowGraphConditionalBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bg),[])).FlowGraphConditionalDataBlock;case"FlowGraphConstantBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bm),[])).FlowGraphConstantBlock;case"FlowGraphTransformCoordinatesSystemBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bj),[])).FlowGraphTransformCoordinatesSystemBlock;case"FlowGraphGetAssetBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bn),[])).FlowGraphGetAssetBlock;case"FlowGraphGetPropertyBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bk),[])).FlowGraphGetPropertyBlock;case"FlowGraphSetPropertyBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bl),[])).FlowGraphSetPropertyBlock;case"FlowGraphGetVariableBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bh),[])).FlowGraphGetVariableBlock;case"FlowGraphSetVariableBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bi),[])).FlowGraphSetVariableBlock;case"FlowGraphJsonPointerParserBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bt),[])).FlowGraphJsonPointerParserBlock;case"FlowGraphLeadingZerosBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphLeadingZerosBlock;case"FlowGraphTrailingZerosBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphTrailingZerosBlock;case"FlowGraphOneBitsCounterBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bp),[])).FlowGraphOneBitsCounterBlock;case"FlowGraphCombineVector2Block":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bq),[])).FlowGraphCombineVector2Block;case"FlowGraphCombineVector3Block":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bq),[])).FlowGraphCombineVector3Block;case"FlowGraphCombineVector4Block":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bq),[])).FlowGraphCombineVector4Block;case"FlowGraphCombineMatrixBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bq),[])).FlowGraphCombineMatrixBlock;case"FlowGraphExtractVector2Block":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bq),[])).FlowGraphExtractVector2Block;case"FlowGraphExtractVector3Block":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bq),[])).FlowGraphExtractVector3Block;case"FlowGraphExtractVector4Block":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bq),[])).FlowGraphExtractVector4Block;case"FlowGraphExtractMatrixBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bq),[])).FlowGraphExtractMatrixBlock;case"FlowGraphTransformVectorBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bs),[])).FlowGraphTransformBlock;case"FlowGraphTransformCoordinatesBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bs),[])).FlowGraphTransformCoordinatesBlock;case"FlowGraphConjugateBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bs),[])).FlowGraphConjugateBlock;case"FlowGraphAngleBetweenBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bs),[])).FlowGraphAngleBetweenBlock;case"FlowGraphQuaternionFromAxisAngleBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bs),[])).FlowGraphQuaternionFromAxisAngleBlock;case"FlowGraphAxisAngleFromQuaternionBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bs),[])).FlowGraphAxisAngleFromQuaternionBlock;case"FlowGraphQuaternionFromDirectionsBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bs),[])).FlowGraphQuaternionFromDirectionsBlock;case"FlowGraphMatrixDecompose":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.br),[])).FlowGraphMatrixDecomposeBlock;case"FlowGraphMatrixCompose":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.br),[])).FlowGraphMatrixComposeBlock;case"FlowGraphBooleanToFloat":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bu),[])).FlowGraphBooleanToFloat;case"FlowGraphBooleanToInt":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bu),[])).FlowGraphBooleanToInt;case"FlowGraphFloatToBoolean":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bu),[])).FlowGraphFloatToBoolean;case"FlowGraphIntToBoolean":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bu),[])).FlowGraphIntToBoolean;case"FlowGraphIntToFloat":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bu),[])).FlowGraphIntToFloat;case"FlowGraphFloatToInt":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bu),[])).FlowGraphFloatToInt;case"FlowGraphEasingBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.be),[])).FlowGraphEasingBlock;case"FlowGraphBezierCurveEasing":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bf),[])).FlowGraphBezierCurveEasingBlock;case"FlowGraphPointerOverEventBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bF),[])).FlowGraphPointerOverEventBlock;case"FlowGraphPointerOutEventBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bE),[])).FlowGraphPointerOutEventBlock;case"FlowGraphContextBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bv),[])).FlowGraphContextBlock;case"FlowGraphArrayIndexBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bw),[])).FlowGraphArrayIndexBlock;case"FlowGraphCodeExecutionBlock":return async()=>(await o(()=>import("./flowGraphCodeExecutionBlock-4776ed67.js"),["assets/flowGraphCodeExecutionBlock-4776ed67.js","assets/index-52cd4afa.js"])).FlowGraphCodeExecutionBlock;case"FlowGraphIndexOfBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bx),[])).FlowGraphIndexOfBlock;case"FlowGraphFunctionReference":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.by),[])).FlowGraphFunctionReferenceBlock;case"FlowGraphDataSwitchBlock":return async()=>(await o(()=>import("./index-52cd4afa.js").then(t=>t.bo),[])).FlowGraphDataSwitchBlock;default:if($[r])return $[r];throw new Error(`Unknown block name ${r}`)}}function ut(r,t){for(const e of r)for(const a of e.dataOutputs)if(a.uniqueId===t)return a;throw new Error("Could not find data out connection with unique id "+t)}function ht(r,t){for(const e of r)if(e instanceof j){for(const a of e.signalInputs)if(a.uniqueId===t)return a}throw new Error("Could not find signal in connection with unique id "+t)}async function wt(r,t){const e=await Promise.all(r.allBlocks.map(async a=>await _t(a.className)()));return dt(r,t,e)}function dt(r,t,e){const a=t.coordinator.createGraph(),n=[],s=t.valueParseFunction??U;for(let i=0;i<r.allBlocks.length;i++){const c=r.allBlocks[i],_=kt(c,{scene:t.coordinator.config.scene,pathConverter:t.pathConverter,assetsContainer:t.coordinator.config.scene,valueParseFunction:s},e[i]);n.push(_),_ instanceof et&&a.addEventBlock(_)}for(const i of n){for(const c of i.dataInputs)for(const _ of c.connectedPointIds){const u=ut(n,_);c.connectTo(u)}if(i instanceof j)for(const c of i.signalOutputs)for(const _ of c.connectedPointIds){const u=ht(n,_);c.connectTo(u)}}for(const i of r.executionContexts)Et(i,{graph:a,valueParseFunction:s},r.rightHanded);return a}function Et(r,t,e){var i,c,_,u,l,h,R,f,O,C;const a=t.graph.createContext();r.enableLogging&&(a.enableLogging=!0),a.treatDataAsRightHanded=e||!1;const n=t.valueParseFunction??U;a.uniqueId=r.uniqueId;const s=a.getScene();if(r._assetsContext){const w=r._assetsContext,T={meshes:(i=w.meshes)==null?void 0:i.map(p=>s.getMeshById(p)),lights:(c=w.lights)==null?void 0:c.map(p=>s.getLightByName(p)),cameras:(_=w.cameras)==null?void 0:_.map(p=>s.getCameraByName(p)),materials:(u=w.materials)==null?void 0:u.map(p=>s.getMaterialById(p)),textures:(l=w.textures)==null?void 0:l.map(p=>s.getTextureByName(p)),animations:(h=w.animations)==null?void 0:h.map(p=>s.animations.find(H=>H.name===p)),skeletons:(R=w.skeletons)==null?void 0:R.map(p=>s.getSkeletonByName(p)),particleSystems:(f=w.particleSystems)==null?void 0:f.map(p=>s.getParticleSystemById(p)),animationGroups:(O=w.animationGroups)==null?void 0:O.map(p=>s.getAnimationGroupByName(p)),transformNodes:(C=w.transformNodes)==null?void 0:C.map(p=>s.getTransformNodeById(p)),rootNodes:[],multiMaterials:[],morphTargetManagers:[],geometries:[],actionManagers:[],environmentTexture:null,postProcesses:[],sounds:null,effectLayers:[],layers:[],reflectionProbes:[],lensFlareSystems:[],proceduralTextures:[],getNodes:function(){throw new Error("Function not implemented.")}};a.assetsContext=T}for(const w in r._userVariables){const T=n(w,r._userVariables,a.assetsContext,s);a.userVariables[w]=T}for(const w in r._connectionValues){const T=n(w,r._connectionValues,a.assetsContext,s);a._setConnectionValueByKey(w,T)}return a}function kt(r,t,e){const a={},n=t.valueParseFunction??U;if(r.config)for(const i in r.config)a[i]=n(i,r.config,t.assetsContainer||t.scene,t.scene);if(at(r.className)){if(!t.pathConverter)throw new Error("Path converter is required for this block");a.pathConverter=t.pathConverter}const s=new e(a);s.uniqueId=r.uniqueId;for(let i=0;i<r.dataInputs.length;i++){const c=s.getDataInput(r.dataInputs[i].name);if(c)c.deserialize(r.dataInputs[i]);else throw new Error("Could not find data input with name "+r.dataInputs[i].name+" in block "+r.className)}for(let i=0;i<r.dataOutputs.length;i++){const c=s.getDataOutput(r.dataOutputs[i].name);if(c)c.deserialize(r.dataOutputs[i]);else throw new Error("Could not find data output with name "+r.dataOutputs[i].name+" in block "+r.className)}return s.metadata=r.metadata,s.deserialize&&s.deserialize(r),s}const Gt={float:{length:1,flowGraphType:"number",elementType:"number"},bool:{length:1,flowGraphType:"boolean",elementType:"boolean"},float2:{length:2,flowGraphType:"Vector2",elementType:"number"},float3:{length:3,flowGraphType:"Vector3",elementType:"number"},float4:{length:4,flowGraphType:"Vector4",elementType:"number"},float4x4:{length:16,flowGraphType:"Matrix",elementType:"number"},float2x2:{length:4,flowGraphType:"Matrix2D",elementType:"number"},float3x3:{length:9,flowGraphType:"Matrix3D",elementType:"number"},int:{length:1,flowGraphType:"FlowGraphInteger",elementType:"number"}};class mt{constructor(t,e,a=60){this._interactivityGraph=t,this._gltf=e,this._animationTargetFps=a,this._types=[],this._mappings=[],this._staticVariables=[],this._events=[],this._internalEventsCounter=0,this._nodes=[],this._parseTypes(),this._parseDeclarations(),this._parseVariables(),this._parseEvents(),this._parseNodes()}get arrays(){return{types:this._types,mappings:this._mappings,staticVariables:this._staticVariables,events:this._events,nodes:this._nodes}}_parseTypes(){if(this._interactivityGraph.types)for(const t of this._interactivityGraph.types)this._types.push(Gt[t.signature])}_parseDeclarations(){if(this._interactivityGraph.declarations)for(const t of this._interactivityGraph.declarations){const e=lt(t);if(!e)throw k.Error(["No mapping found for declaration",t]),new Error("Error parsing declarations");this._mappings.push({flowGraphMapping:e,fullOperationName:t.extension?t.op+":"+t.extension:t.op})}}_parseVariables(){if(this._interactivityGraph.variables)for(const t of this._interactivityGraph.variables){const e=this._parseVariable(t);this._staticVariables.push(e)}}_parseVariable(t,e){const a=this._types[t.type];if(!a)throw k.Error(["No type found for variable",t]),new Error("Error parsing variables");if(t.value&&t.value.length!==a.length)throw k.Error(["Invalid value length for variable",t,a]),new Error("Error parsing variables");const n=t.value||[];if(!n.length)switch(a.flowGraphType){case"boolean":n.push(!1);break;case"FlowGraphInteger":n.push(0);break;case"number":n.push(NaN);break;case"Vector2":n.push(NaN,NaN);break;case"Vector3":n.push(NaN,NaN,NaN);break;case"Vector4":case"Matrix2D":case"Quaternion":n.fill(NaN,0,4);break;case"Matrix":n.fill(NaN,0,16);break;case"Matrix3D":n.fill(NaN,0,9);break}return a.elementType==="number"&&typeof n[0]=="string"&&(n[0]=parseFloat(n[0])),{type:a.flowGraphType,value:e?e(n,this):n}}_parseEvents(){if(this._interactivityGraph.events)for(const t of this._interactivityGraph.events){const e={eventId:t.id||"internalEvent_"+this._internalEventsCounter++};t.values&&(e.eventData=Object.keys(t.values).map(a=>{var c;const n=(c=t.values)==null?void 0:c[a];if(!n)throw k.Error(["No value found for event key",a]),new Error("Error parsing events");const s=this._types[n.type];if(!s)throw k.Error(["No type found for event value",n]),new Error("Error parsing events");const i=typeof n.value<"u"?this._parseVariable(n):void 0;return{id:a,type:s.flowGraphType,eventData:!0,value:i}})),this._events.push(e)}}_parseNodes(){var t;if(this._interactivityGraph.nodes)for(const e of this._interactivityGraph.nodes){if(typeof e.declaration!="number")throw k.Error(["No declaration found for node",e]),new Error("Error parsing nodes");const a=this._mappings[e.declaration];if(!a)throw k.Error(["No mapping found for node",e]),new Error("Error parsing nodes");if(a.flowGraphMapping.validation){const s=a.flowGraphMapping.validation(e,this._interactivityGraph,this._gltf);if(!s.valid)throw new Error(`Error validating interactivity node ${(t=this._interactivityGraph.declarations)==null?void 0:t[e.declaration].op} - ${s.error}`)}const n=[];for(const s of a.flowGraphMapping.blocks){const i=this._getEmptyBlock(s,a.fullOperationName);this._parseNodeConfiguration(e,i,a.flowGraphMapping,s),n.push(i)}this._nodes.push({blocks:n,fullOperationName:a.fullOperationName})}}_getEmptyBlock(t,e){return{uniqueId:Q(),className:t,dataInputs:[],dataOutputs:[],signalInputs:[],signalOutputs:[],config:{},type:e,metadata:{}}}_parseNodeConfiguration(t,e,a,n){var i,c;const s=e.config;if(t.configuration){const _=Object.keys(t.configuration);for(const u of _){const l=(i=t.configuration)==null?void 0:i[u];if(!l)throw k.Error(["No value found for node configuration",u]),new Error("Error parsing node configuration");const h=(c=a.configuration)==null?void 0:c[u];if(h&&h.toBlock?h.toBlock===n:a.blocks.indexOf(n)===0){const f=(h==null?void 0:h.name)||u;(!l||typeof l.value>"u")&&typeof(h==null?void 0:h.defaultValue)<"u"?s[f]={value:h.defaultValue}:l.value.length>=0?s[f]={value:l.value.length===1?l.value[0]:l.value}:k.Warn(["Invalid value for node configuration",l]),h&&h.dataTransformer&&(s[f].value=h.dataTransformer([s[f].value],this)[0])}}}}_parseNodeConnections(t){var e,a,n,s,i,c,_,u,l,h,R,f,O,C,w,T,p,H,Z;for(let N=0;N<this._nodes.length;N++){const b=(e=this._interactivityGraph.nodes)==null?void 0:e[N];if(!b)throw k.Error(["No node found for interactivity node",this._nodes[N]]),new Error("Error parsing node connections");const I=this._nodes[N],v=this._mappings[b.declaration];if(!v)throw k.Error(["No mapping found for node",b]),new Error("Error parsing node connections");const J=b.flows||{},tt=Object.keys(J).sort();for(const E of tt){const G=J[E],d=(n=(a=v.flowGraphMapping.outputs)==null?void 0:a.flows)==null?void 0:n[E],L=(d==null?void 0:d.name)||E,x=this._createNewSocketConnection(L,!0);(d&&d.toBlock&&I.blocks.find(y=>y.className===d.toBlock)||I.blocks[0]).signalOutputs.push(x);const W=G.node,m=this._nodes[W];if(!m)throw k.Error(["No node found for input node id",W]),new Error("Error parsing node connections");const g=z(m.fullOperationName);if(!g)throw k.Error(["No mapping found for input node",m]),new Error("Error parsing node connections");let F=(i=(s=g.inputs)==null?void 0:s.flows)==null?void 0:i[G.socket||"in"],P=!1;if(!F)for(const y in(c=g.inputs)==null?void 0:c.flows)y.startsWith("[")&&y.endsWith("]")&&(P=!0,F=(u=(_=g.inputs)==null?void 0:_.flows)==null?void 0:u[y]);const B=F?P?F.name.replace("$1",G.socket||""):F.name:G.socket||"in",M=F&&F.toBlock&&m.blocks.find(y=>y.className===F.toBlock)||m.blocks[0];let A=M.signalInputs.find(y=>y.name===B);A||(A=this._createNewSocketConnection(B),M.signalInputs.push(A)),A.connectedPointIds.push(x.uniqueId),x.connectedPointIds.push(A.uniqueId)}const X=b.values||{},ot=Object.keys(X);for(const E of ot){const G=X[E];let d=(h=(l=v.flowGraphMapping.inputs)==null?void 0:l.values)==null?void 0:h[E],L=!1;if(!d)for(const m in(R=v.flowGraphMapping.inputs)==null?void 0:R.values)m.startsWith("[")&&m.endsWith("]")&&(L=!0,d=(O=(f=v.flowGraphMapping.inputs)==null?void 0:f.values)==null?void 0:O[m]);const x=d?L?d.name.replace("$1",E):d.name:E,S=this._createNewSocketConnection(x);if((d&&d.toBlock&&I.blocks.find(m=>m.className===d.toBlock)||I.blocks[0]).dataInputs.push(S),G.value!==void 0){const m=this._parseVariable(G,d&&d.dataTransformer);t._connectionValues[S.uniqueId]=m}else if(typeof G.node<"u"){const m=G.node,g=G.socket||"value",F=this._nodes[m];if(!F)throw k.Error(["No node found for output socket reference",G]),new Error("Error parsing node connections");const P=z(F.fullOperationName);if(!P)throw k.Error(["No mapping found for output socket reference",G]),new Error("Error parsing node connections");let B=(w=(C=P.outputs)==null?void 0:C.values)==null?void 0:w[g],M=!1;if(!B)for(const V in(T=P.outputs)==null?void 0:T.values)V.startsWith("[")&&V.endsWith("]")&&(M=!0,B=(H=(p=P.outputs)==null?void 0:p.values)==null?void 0:H[V]);const A=B?M?B.name.replace("$1",g):B==null?void 0:B.name:g,y=B&&B.toBlock&&F.blocks.find(V=>V.className===B.toBlock)||F.blocks[0];let q=y.dataOutputs.find(V=>V.name===A);q||(q=this._createNewSocketConnection(A,!0),y.dataOutputs.push(q)),S.connectedPointIds.push(q.uniqueId),q.connectedPointIds.push(S.uniqueId)}else throw k.Error(["Invalid value for value connection",G]),new Error("Error parsing node connections")}if(v.flowGraphMapping.interBlockConnectors)for(const E of v.flowGraphMapping.interBlockConnectors){const G=E.input,d=E.output,L=E.isVariable;this._connectFlowGraphNodes(G,d,I.blocks[E.inputBlockIndex],I.blocks[E.outputBlockIndex],L)}if(v.flowGraphMapping.extraProcessor){const E=(Z=this._interactivityGraph.declarations)==null?void 0:Z[b.declaration];if(!E)throw k.Error(["No declaration found for extra processor",b]),new Error("Error parsing node connections");I.blocks=v.flowGraphMapping.extraProcessor(b,E,v.flowGraphMapping,this,I.blocks,t,this._gltf)}}}_createNewSocketConnection(t,e){return{uniqueId:Q(),name:t,_connectionType:e?1:0,connectedPointIds:[]}}_connectFlowGraphNodes(t,e,a,n,s){const i=s?a.dataInputs:a.signalInputs,c=s?n.dataOutputs:n.signalOutputs,_=i.find(l=>l.name===t)||this._createNewSocketConnection(t),u=c.find(l=>l.name===e)||this._createNewSocketConnection(e,!0);i.find(l=>l.name===t)||i.push(_),c.find(l=>l.name===e)||c.push(u),_.connectedPointIds.push(u.uniqueId),u.connectedPointIds.push(_.uniqueId)}getVariableName(t){return"staticVariable_"+t}serializeToFlowGraph(){const t={uniqueId:Q(),_userVariables:{},_connectionValues:{}};this._parseNodeConnections(t);for(let a=0;a<this._staticVariables.length;a++){const n=this._staticVariables[a];t._userVariables[this.getVariableName(a)]=n}return{rightHanded:!0,allBlocks:this._nodes.reduce((a,n)=>a.concat(n.blocks),[]),executionContexts:[t]}}}const K="KHR_interactivity";class Ft{constructor(t){this._loader=t,this.name=K,this.enabled=this._loader.isExtensionUsed(K),this._pathConverter=ct(this._loader.gltf),t._skipStartAnimationStep=!0;const e=t.babylonScene;e&&Bt(e)}dispose(){this._loader=null,delete this._pathConverter}async onReady(){var s;if(!this._loader.babylonScene||!this._pathConverter)return;const t=this._loader.babylonScene,e=(s=this._loader.gltf.extensions)==null?void 0:s.KHR_interactivity;if(!e)return;const a=new rt({scene:t});a.dispatchEventsSynchronously=!1;const n=e.graphs.map(i=>new mt(i,this._loader.gltf,this._loader.parent.targetFps).serializeToFlowGraph());await Promise.all(n.map(async i=>await wt(i,{coordinator:a,pathConverter:this._pathConverter}))),a.start()}}function Bt(r){D("/extensions/KHR_interactivity/?/activeCamera/rotation",{get:()=>{if(!r.activeCamera)return new Y(NaN,NaN,NaN,NaN);const t=Y.FromRotationMatrix(r.activeCamera.getWorldMatrix()).normalize();return r.useRightHandedSystem||(t.w*=-1,t.x*=-1),t},type:"Quaternion",getTarget:()=>r.activeCamera}),D("/extensions/KHR_interactivity/?/activeCamera/position",{get:()=>{if(!r.activeCamera)return new st(NaN,NaN,NaN);const t=r.activeCamera.getWorldMatrix().getTranslation();return r.useRightHandedSystem||(t.x*=-1),t},type:"Vector3",getTarget:()=>r.activeCamera}),D("/animations/{}/extensions/KHR_interactivity/isPlaying",{get:t=>{var e;return((e=t._babylonAnimationGroup)==null?void 0:e.isPlaying)??!1},type:"boolean",getTarget:t=>t._babylonAnimationGroup}),D("/animations/{}/extensions/KHR_interactivity/minTime",{get:t=>{var e;return(((e=t._babylonAnimationGroup)==null?void 0:e.from)??0)/60},type:"number",getTarget:t=>t._babylonAnimationGroup}),D("/animations/{}/extensions/KHR_interactivity/maxTime",{get:t=>{var e;return(((e=t._babylonAnimationGroup)==null?void 0:e.to)??0)/60},type:"number",getTarget:t=>t._babylonAnimationGroup}),D("/animations/{}/extensions/KHR_interactivity/playhead",{get:t=>{var e;return(((e=t._babylonAnimationGroup)==null?void 0:e.getCurrentFrame())??0)/60},type:"number",getTarget:t=>t._babylonAnimationGroup}),D("/animations/{}/extensions/KHR_interactivity/virtualPlayhead",{get:t=>{var e;return(((e=t._babylonAnimationGroup)==null?void 0:e.getCurrentFrame())??0)/60},type:"number",getTarget:t=>t._babylonAnimationGroup})}pt(K,"FlowGraphGLTFDataProvider",async()=>(await o(()=>import("./flowGraphGLTFDataProvider-f8bbb241.js"),["assets/flowGraphGLTFDataProvider-f8bbb241.js","assets/index-52cd4afa.js"])).FlowGraphGLTFDataProvider);nt(K);it(K,!0,r=>new Ft(r));export{Ft as KHR_interactivity,Bt as _AddInteractivityObjectModel};
