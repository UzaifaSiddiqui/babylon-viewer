import{G as i,A as m}from"./glTFLoader-8110d1ce.js";import{aG as u,a4 as h,a3 as p}from"./index-07961b59.js";import"./objectModelMapping-acd55515.js";const r="EXT_meshopt_compression";class c{constructor(e){this.name=r,this.enabled=e.isExtensionUsed(r),this._loader=e}dispose(){this._loader=null}loadBufferViewAsync(e,o){return i.LoadExtensionAsync(e,o,this.name,async(d,t)=>{const s=o;if(s._meshOptData)return await s._meshOptData;const f=m.Get(`${e}/buffer`,this._loader.gltf.buffers,t.buffer);return s._meshOptData=this._loader.loadBufferAsync(`/buffers/${f.index}`,f,t.byteOffset||0,t.byteLength).then(async n=>await u.Default.decodeGltfBufferAsync(n,t.count,t.byteStride,t.mode,t.filter)),await s._meshOptData})}}h(r);p(r,!0,a=>new c(a));export{c as EXT_meshopt_compression};
