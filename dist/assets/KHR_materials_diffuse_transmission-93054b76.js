import{aj as c,ak as f,a4 as l,a3 as d}from"./index-6b43bc24.js";import{G as m}from"./glTFLoader-5bb9d977.js";import"./objectModelMapping-a587b1b7.js";const o="KHR_materials_diffuse_transmission";class T{constructor(r){this.name=o,this.order=174,this._loader=r,this.enabled=this._loader.isExtensionUsed(o),this.enabled&&(r.parent.transparencyAsCoverage=!0)}dispose(){this._loader=null}loadMaterialPropertiesAsync(r,u,n){return m.LoadExtensionAsync(r,u,this.name,async(e,s)=>{const a=new Array;return a.push(this._loader.loadMaterialPropertiesAsync(r,u,n)),a.push(this._loadTranslucentPropertiesAsync(e,u,n,s)),await Promise.all(a).then(()=>{})})}_loadTranslucentPropertiesAsync(r,u,n,e){if(!(n instanceof c))throw new Error(`${r}: Material type not supported`);const s=n;if(s.subSurface.isTranslucencyEnabled=!0,s.subSurface.volumeIndexOfRefraction=1,s.subSurface.minimumThickness=0,s.subSurface.maximumThickness=0,s.subSurface.useAlbedoToTintTranslucency=!1,e.diffuseTransmissionFactor!==void 0)s.subSurface.translucencyIntensity=e.diffuseTransmissionFactor;else return s.subSurface.translucencyIntensity=0,s.subSurface.isTranslucencyEnabled=!1,Promise.resolve();const a=new Array;return s.subSurface.useGltfStyleTextures=!0,e.diffuseTransmissionTexture&&(e.diffuseTransmissionTexture.nonColorData=!0,a.push(this._loader.loadTextureInfoAsync(`${r}/diffuseTransmissionTexture`,e.diffuseTransmissionTexture).then(i=>{i.name=`${n.name} (Diffuse Transmission)`,s.subSurface.translucencyIntensityTexture=i}))),e.diffuseTransmissionColorFactor!==void 0?s.subSurface.translucencyColor=f.FromArray(e.diffuseTransmissionColorFactor):s.subSurface.translucencyColor=f.White(),e.diffuseTransmissionColorTexture&&a.push(this._loader.loadTextureInfoAsync(`${r}/diffuseTransmissionColorTexture`,e.diffuseTransmissionColorTexture).then(i=>{i.name=`${n.name} (Diffuse Transmission Color)`,s.subSurface.translucencyColorTexture=i})),Promise.all(a).then(()=>{})}}l(o);d(o,!0,t=>new T(t));export{T as KHR_materials_diffuse_transmission};
